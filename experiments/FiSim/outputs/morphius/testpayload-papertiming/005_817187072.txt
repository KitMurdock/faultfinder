 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Filename              : /home/kit/unicorn-work/FiSim/bl1.elf
 >> Stack Address         : 0x0000000080100000
 >> Stack Size            : 0x0000000000010000
 >> Code Start Address    : 0x0000000080000000
 >> Code End Address      : 0x000000008000132c
 >> Code Offset           : 0x0000000000000054
 >> Fault Start Address   : 0x0000000080000000
 >> Fault End Address     : 0x000000008000132c
 >> Memory Address        : 0x0000000080000000
 >> Memory Size           : 0x0000000000020000
 >> Other Memory Address  : 0x0000000032000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000012000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040010800
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040004400
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x000000000aa01000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000011000000
 >> Other Memory Size     : 0x0000000000001000
 >> Hard stop             : 0x000000000000124c





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 0. Instruction: 00000001. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000000
 >> Updated                     : 0x0000000080000004
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x1
 >> Updated instruction            :  25 40 9f e5          	: ldr r4, [pc, #0x25]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80800013, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x2
 >> Updated instruction            :  26 40 9f e5          	: ldr r4, [pc, #0x26]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x13808000, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x4
 >> Updated instruction            :  20 40 9f e5          	: ldr r4, [pc, #0x20]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xeafffffe, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x8
 >> Updated instruction            :  2c 40 9f e5          	: ldr r4, [pc, #0x2c]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe3a03411, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x10
 >> Updated instruction            :  34 40 9f e5          	: ldr r4, [pc, #0x34]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe28db000, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x20
 >> Updated instruction            :  04 40 9f e5          	: ldr r4, [pc, #4]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa000004, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x40
 >> Updated instruction            :  64 40 9f e5          	: ldr r4, [pc, #0x64]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe5f20001, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x80
 >> Updated instruction            :  a4 40 9f e5          	: ldr r4, [pc, #0xa4]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe3530000, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x100
 >> Updated instruction            :  24 41 9f e5          	: ldr r4, [pc, #0x124]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8bd8830, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x200
 >> Updated instruction            :  24 42 9f e5          	: ldr r4, [pc, #0x224]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe2833001, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x400
 >> Updated instruction            :  24 44 9f e5          	: ldr r4, [pc, #0x424]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe5832004, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x800
 >> Updated instruction            :  24 48 9f e5          	: ldr r4, [pc, #0x824]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe0857007, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x1000
 >> Updated instruction            :  24 50 9f e5          	: ldr r5, [pc, #0x24]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x2000
 >> Updated instruction            :  24 60 9f e5          	: ldr r6, [pc, #0x24]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x4000
 >> Updated instruction            :  24 00 9f e5          	: ldr r0, [pc, #0x24]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000000. Hit: 1. Lifespan: 2. Instruction: 00000001. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 40 9f e5          	: ldr r4, [pc, #0x24]
 >> Mask                           :  0x8000
 >> Updated instruction            :  24 c0 9f e5          	: ldr ip, [pc, #0x24]
We're at the start_address but the run result is not NONE but: faulted. This could get messy.
Possibly the instruction pointer was faulted?
 >> Lifespan countdown: 2. (0x80000004)
 >> Lifespan countdown: 1. (0x80000008)
 >> Reverting instruction          :  24 40 9f e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 7 Skipping to end.
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 0. Instruction: 00000009. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001278
 >> Updated                     : 0x000000008000127c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x1
 >> Updated instruction            :  65 fc ff eb          	: bl #0x19c
 >> Lifespan countdown: 2. (0x80000414)
 >> Lifespan countdown: 1. (0x80000418)
 >> Reverting instruction          :  64 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 69 Skipping to end.
 >> Run result: Fault errored program - last instruction: 68.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x2
 >> Updated instruction            :  66 fc ff eb          	: bl #0x1a0
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  64 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7fffff67, value: 0x1!! Count 68 Skipping to end.
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x4
 >> Updated instruction            :  60 fc ff eb          	: bl #0x188
 >> Lifespan countdown: 2. (0x80000400)
 >> Lifespan countdown: 1. (0x8000032c)
 >> Reverting instruction          :  64 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x20000!! Count 37 Skipping to end.
 >> Run result: Fault errored program - last instruction: 36.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x8
 >> Updated instruction            :  6c fc ff eb          	: bl #0x1b8
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  64 fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 11.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x10
 >> Updated instruction            :  74 fc ff eb          	: bl #0x1d8
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  64 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 54 Skipping to end.
 >> Run result: Fault errored program - last instruction: 53.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x20
 >> Updated instruction            :  44 fc ff eb          	: bl #0x118
 >> Lifespan countdown: 2. (0x80000390)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 11 Skipping to end.
 >> Run result: Fault errored program - last instruction: 10.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x40
 >> Updated instruction            :  24 fc ff eb          	: bl #0x98
 >> Lifespan countdown: 2. (0x80000310)
 >> Lifespan countdown: 1. (0x80000314)
 >> Reverting instruction          :  64 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7fffff67, value: 0x1!! Count 57 Skipping to end.
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x80
 >> Updated instruction            :  e4 fc ff eb          	: bl #0x398
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  64 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x64, value: 0x0!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x100
 >> Updated instruction            :  64 fd ff eb          	: bl #0x598
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  64 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x88, value: 0x0!! Count 13 Skipping to end.
 >> Run result: Fault errored program - last instruction: 12.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x200
 >> Updated instruction            :  64 fe ff eb          	: bl #0x998
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  64 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0xa563ded0!! Count 253 Skipping to end.
 >> Run result: Fault errored program - last instruction: 252.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x400
 >> Updated instruction            :  64 f8 ff eb          	: bl #0xfffff198
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff410, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 9.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x800
 >> Updated instruction            :  64 f4 ff eb          	: bl #0xffffe198
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe410, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 9.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x1000
 >> Updated instruction            :  64 ec ff eb          	: bl #0xffffc198
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc410, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 9.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x2000
 >> Updated instruction            :  64 dc ff eb          	: bl #0xffff8198
 >!  Erm -  fetching from unmapped memory, address: 0x7fff8410, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 9.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x4000
 >> Updated instruction            :  64 bc ff eb          	: bl #0xffff0198
 >!  Erm -  fetching from unmapped memory, address: 0x7fff0410, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 9.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001278. Hit: 1. Lifespan: 2. Instruction: 00000009. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x8000
 >> Updated instruction            :  64 7c ff eb          	: bl #0xfffe0198
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe0410, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 9.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 0. Instruction: 00000017. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000042c
 >> Updated                     : 0x0000000080000430
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x1
 >> Updated instruction            :  05 20 83 e5          	: str r2, [r3, #5]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x2
 >> Updated instruction            :  06 20 83 e5          	: str r2, [r3, #6]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x4
 >> Updated instruction            :  00 20 83 e5          	: str r2, [r3]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 20 83 e5          	: str r2, [r3, #0xc]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x10
 >> Updated instruction            :  14 20 83 e5          	: str r2, [r3, #0x14]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x20
 >> Updated instruction            :  24 20 83 e5          	: str r2, [r3, #0x24]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x40
 >> Updated instruction            :  44 20 83 e5          	: str r2, [r3, #0x44]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x80
 >> Updated instruction            :  84 20 83 e5          	: str r2, [r3, #0x84]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x100
 >> Updated instruction            :  04 21 83 e5          	: str r2, [r3, #0x104]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x200
 >> Updated instruction            :  04 22 83 e5          	: str r2, [r3, #0x204]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x400
 >> Updated instruction            :  04 24 83 e5          	: str r2, [r3, #0x404]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x800
 >> Updated instruction            :  04 28 83 e5          	: str r2, [r3, #0x804]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 30 83 e5          	: str r3, [r3, #4]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 00 83 e5          	: str r0, [r3, #4]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 60 83 e5          	: str r6, [r3, #4]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000042c. Hit: 1. Lifespan: 2. Instruction: 00000017. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 a0 83 e5          	: str sl, [r3, #4]
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 0. Instruction: 00000024. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000448
 >> Updated                     : 0x000000008000044c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  d1 00 e0 e7          	: ubfx r0, r1, #1, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  d2 00 e0 e7          	: ubfx r0, r2, #1, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  d4 00 e0 e7          	: ubfx r0, r4, #1, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  d8 00 e0 e7          	: ubfx r0, r8, #1, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  c0 00 e0 e7          	: strb r0, [r0, r0, asr #1]!
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x3, value: 0x2!! Count 25 Skipping to end.
 >> Run result: Fault errored program - last instruction: 24.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  f0 00 e0 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 24.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  90 00 e0 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 24.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  50 00 e0 e7          	: ubfx r0, r0, #0, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  d0 01 e0 e7          	: ubfx r0, r0, #3, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  d0 02 e0 e7          	: ubfx r0, r0, #5, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  d0 04 e0 e7          	: ubfx r0, r0, #9, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  d0 08 e0 e7          	: ubfx r0, r0, #0x11, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  d0 10 e0 e7          	: ubfx r1, r0, #1, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  d0 20 e0 e7          	: ubfx r2, r0, #1, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  d0 40 e0 e7          	: ubfx r4, r0, #1, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000448. Hit: 1. Lifespan: 2. Instruction: 00000024. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d0 00 e0 e7          	: ubfx r0, r0, #1, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  d0 80 e0 e7          	: ubfx r8, r0, #1, #1
 >> Lifespan countdown: 2. (0x8000044c)
 >> Lifespan countdown: 1. (0x80000450)
 >> Reverting instruction          :  d0 00 e0 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 0. Instruction: 00000032. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800003b8
 >> Updated                     : 0x00000000800003bc
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 40 a0 e1          	: mov r4, r1
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 40 a0 e1          	: mov r4, r2
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 40 a0 e1          	: mov r4, r4
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 40 a0 e1          	: mov r4, r8
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 40 a0 e1          	: lsl r4, r0, r0
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 40 a0 e1          	: lsr r4, r0, #0x20
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 40 a0 e1          	: asr r4, r0, #0x20
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffffff, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 40 a0 e1          	: lsl r4, r0, #1
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fe76, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 41 a0 e1          	: lsl r4, r0, #2
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x43fcec, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 42 a0 e1          	: lsl r4, r0, #4
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff3b0, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 44 a0 e1          	: lsl r4, r0, #8
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff3b00, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 48 a0 e1          	: lsl r4, r0, #0x10
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff3b0000, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 50 a0 e1          	: mov r5, r0
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 60 a0 e1          	: mov r6, r0
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 00 a0 e1          	: mov r0, r0
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003b8. Hit: 1. Lifespan: 2. Instruction: 00000032. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 c0 a0 e1          	: mov ip, r0
 >> Lifespan countdown: 2. (0x800003bc)
 >> Lifespan countdown: 1. (0x800003c0)
 >> Reverting instruction          :  00 40 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 0. Instruction: 00000036. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800003c8
 >> Updated                     : 0x00000000800003cc
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x1
 >> Updated instruction            :  d6 ff ff eb          	: bl #0xf60
 >> Lifespan countdown: 2. (0x80000328)
 >> Lifespan countdown: 1. (0x80000304)
 >> Reverting instruction          :  d7 ff ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 46.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x2
 >> Updated instruction            :  d5 ff ff eb          	: bl #0xf5c
 >> Lifespan countdown: 2. (0x80000324)
 >> Lifespan countdown: 1. (0x80000328)
 >> Reverting instruction          :  d7 ff ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 47.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x4
 >> Updated instruction            :  d3 ff ff eb          	: bl #0xf54
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  d7 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 40.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x8
 >> Updated instruction            :  df ff ff eb          	: bl #0xf84
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x800003a0)
 >> Reverting instruction          :  d7 ff ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 47.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x10
 >> Updated instruction            :  c7 ff ff eb          	: bl #0xf24
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  d7 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000010, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 42.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x20
 >> Updated instruction            :  f7 ff ff eb          	: bl #0xfe4
 >> Lifespan countdown: 2. (0x800003ac)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  d7 ff ff eb 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x40
 >> Updated instruction            :  97 ff ff eb          	: bl #0xe64
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  d7 ff ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10, value: 0x0!! Count 41 Skipping to end.
 >> Run result: Fault errored program - last instruction: 40.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x80
 >> Updated instruction            :  57 ff ff eb          	: bl #0xd64
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001380)
 >> Reverting instruction          :  d7 ff ff eb 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 39.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x100
 >> Updated instruction            :  d7 fe ff eb          	: bl #0xb64
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff2c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 36.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x200
 >> Updated instruction            :  d7 fd ff eb          	: bl #0x764
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffb2c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 36.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x400
 >> Updated instruction            :  d7 fb ff eb          	: bl #0xffffff64
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff32c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 36.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x800
 >> Updated instruction            :  d7 f7 ff eb          	: bl #0xffffef64
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe32c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 36.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x1000
 >> Updated instruction            :  d7 ef ff eb          	: bl #0xffffcf64
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc32c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 36.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x2000
 >> Updated instruction            :  d7 df ff eb          	: bl #0xffff8f64
 >!  Erm -  fetching from unmapped memory, address: 0x7fff832c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 36.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x4000
 >> Updated instruction            :  d7 bf ff eb          	: bl #0xffff0f64
 >!  Erm -  fetching from unmapped memory, address: 0x7fff032c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 36.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c8. Hit: 1. Lifespan: 2. Instruction: 00000036. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d7 ff ff eb          	: bl #0xf64
 >> Mask                           :  0x8000
 >> Updated instruction            :  d7 7f ff eb          	: bl #0xfffe0f64
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe032c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 36.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 0. Instruction: 00000039. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000334
 >> Updated                     : 0x0000000080000338
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x1
 >> Updated instruction            :  13 34 a0 e3          	: mov r3, #0x13000000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000013000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x2
 >> Updated instruction            :  10 34 a0 e3          	: mov r3, #16, #8
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x4
 >> Updated instruction            :  16 34 a0 e3          	: mov r3, #0x16000000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000016000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x8
 >> Updated instruction            :  1a 34 a0 e3          	: mov r3, #0x1a000000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000001a000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x10
 >> Updated instruction            :  02 34 a0 e3          	: mov r3, #0x2000000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000002000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x20
 >> Updated instruction            :  32 34 a0 e3          	: mov r3, #0x32000000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x40
 >> Updated instruction            :  52 34 a0 e3          	: mov r3, #0x52000000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000052000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x80
 >> Updated instruction            :  92 34 a0 e3          	: mov r3, #0x92000000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000092000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x100
 >> Updated instruction            :  12 35 a0 e3          	: mov r3, #0x4800000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000004800000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x200
 >> Updated instruction            :  12 36 a0 e3          	: mov r3, #0x1200000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000001200000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x400
 >> Updated instruction            :  12 30 a0 e3          	: mov r3, #0x12
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000012, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x800
 >> Updated instruction            :  12 3c a0 e3          	: mov r3, #0x1200
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000001200, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x1000
 >> Updated instruction            :  12 24 a0 e3          	: mov r2, #0x12000000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x2000
 >> Updated instruction            :  12 14 a0 e3          	: mov r1, #0x12000000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x4000
 >> Updated instruction            :  12 74 a0 e3          	: mov r7, #0x12000000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000334. Hit: 1. Lifespan: 2. Instruction: 00000039. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x8000
 >> Updated instruction            :  12 b4 a0 e3          	: mov fp, #0x12000000
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x11fffff8, value: 0x12000000!! Count 42 Skipping to end.
 >> Run result: Fault errored program - last instruction: 41.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 0. Instruction: 00000044. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000348
 >> Updated                     : 0x000000008000034c
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 00 13 e3          	: tst r3, #3
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x80000350)
 >> Reverting instruction          :  02 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 00 13 e3          	: tst r3, #0
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x800003a0)
 >> Reverting instruction          :  02 00 13 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 00 13 e3          	: tst r3, #6
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x80000350)
 >> Reverting instruction          :  02 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 00 13 e3          	: tst r3, #0xa
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x80000350)
 >> Reverting instruction          :  02 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 00 13 e3          	: tst r3, #0x12
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x80000350)
 >> Reverting instruction          :  02 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 00 13 e3          	: tst r3, #0x22
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x80000350)
 >> Reverting instruction          :  02 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 00 13 e3          	: tst r3, #0x42
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x80000350)
 >> Reverting instruction          :  02 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 00 13 e3          	: tst r3, #0x82
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x80000350)
 >> Reverting instruction          :  02 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 01 13 e3          	: tst r3, #0x80000000
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x800003a0)
 >> Reverting instruction          :  02 00 13 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 02 13 e3          	: tst r3, #0x20000000
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x800003a0)
 >> Reverting instruction          :  02 00 13 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 04 13 e3          	: tst r3, #0x2000000
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x800003a0)
 >> Reverting instruction          :  02 00 13 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 08 13 e3          	: tst r3, #0x20000
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x800003a0)
 >> Reverting instruction          :  02 00 13 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 10 13 e3          	: tst r3, #2
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x80000350)
 >> Reverting instruction          :  02 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 20 13 e3          	: tst r3, #2
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x80000350)
 >> Reverting instruction          :  02 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 40 13 e3          	: tst r3, #2
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x80000350)
 >> Reverting instruction          :  02 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000348. Hit: 1. Lifespan: 2. Instruction: 00000044. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 13 e3          	: tst r3, #2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 80 13 e3          	: tst r3, #2
 >> Lifespan countdown: 2. (0x8000034c)
 >> Lifespan countdown: 1. (0x80000350)
 >> Reverting instruction          :  02 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 0. Instruction: 00000050. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000360
 >> Updated                     : 0x0000000080000364
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x1
 >> Updated instruction            :  05 20 83 e5          	: str r2, [r3, #5]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x2
 >> Updated instruction            :  06 20 83 e5          	: str r2, [r3, #6]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x4
 >> Updated instruction            :  00 20 83 e5          	: str r2, [r3]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 20 83 e5          	: str r2, [r3, #0xc]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x10
 >> Updated instruction            :  14 20 83 e5          	: str r2, [r3, #0x14]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x20
 >> Updated instruction            :  24 20 83 e5          	: str r2, [r3, #0x24]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x40
 >> Updated instruction            :  44 20 83 e5          	: str r2, [r3, #0x44]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x80
 >> Updated instruction            :  84 20 83 e5          	: str r2, [r3, #0x84]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x100
 >> Updated instruction            :  04 21 83 e5          	: str r2, [r3, #0x104]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x200
 >> Updated instruction            :  04 22 83 e5          	: str r2, [r3, #0x204]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x400
 >> Updated instruction            :  04 24 83 e5          	: str r2, [r3, #0x404]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x800
 >> Updated instruction            :  04 28 83 e5          	: str r2, [r3, #0x804]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 30 83 e5          	: str r3, [r3, #4]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 00 83 e5          	: str r0, [r3, #4]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 60 83 e5          	: str r6, [r3, #4]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000360. Hit: 1. Lifespan: 2. Instruction: 00000050. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 83 e5          	: str r2, [r3, #4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 a0 83 e5          	: str sl, [r3, #4]
 >> Lifespan countdown: 2. (0x80000364)
 >> Lifespan countdown: 1. (0x80000368)
 >> Reverting instruction          :  04 20 83 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 0. Instruction: 00000059. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000384
 >> Updated                     : 0x0000000080000388
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000e, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 1b e5          	: ldr r3, [fp, #-9]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 1b e5          	: ldr r3, [fp, #-0xa]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 1b e5          	: ldr r3, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 1b e5          	: ldr r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 1b e5          	: ldr r3, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 1b e5          	: ldr r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 1b e5          	: ldr r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 1b e5          	: ldr r3, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 1b e5          	: ldr r3, [fp, #-0x108]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 1b e5          	: ldr r3, [fp, #-0x208]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 1b e5          	: ldr r3, [fp, #-0x408]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 1b e5          	: ldr r3, [fp, #-0x808]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 1b e5          	: ldr r2, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000e, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 1b e5          	: ldr r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000e, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 1b e5          	: ldr r7, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000e, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000384. Hit: 1. Lifespan: 2. Instruction: 00000059. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 1b e5          	: ldr fp, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000388)
 >> Lifespan countdown: 1. (0x8000038c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000e, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 61.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 0. Instruction: 00000060. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000388
 >> Updated                     : 0x000000008000038c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 00 a0 e3          	: mov r0, #0
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 00 a0 e3          	: mov r0, #3
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 00 a0 e3          	: mov r0, #5
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 00 a0 e3          	: mov r0, #9
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 00 a0 e3          	: mov r0, #0x11
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 00 a0 e3          	: mov r0, #0x21
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 00 a0 e3          	: mov r0, #0x41
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 00 a0 e3          	: mov r0, #0x81
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 01 a0 e3          	: mov r0, #0x40000000
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 02 a0 e3          	: mov r0, #0x10000000
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 04 a0 e3          	: mov r0, #0x1000000
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 08 a0 e3          	: mov r0, #0x10000
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 10 a0 e3          	: mov r1, #1
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 20 a0 e3          	: mov r2, #1
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 40 a0 e3          	: mov r4, #1
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000388. Hit: 1. Lifespan: 2. Instruction: 00000060. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 a0 e3          	: mov r0, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 80 a0 e3          	: mov r8, #1
 >> Lifespan countdown: 2. (0x8000038c)
 >> Lifespan countdown: 1. (0x80000390)
 >> Reverting instruction          :  01 00 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 0. Instruction: 00000070. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800003dc
 >> Updated                     : 0x00000000800003e0
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 d0 4b e2          	: sub sp, fp, #9
 >> Lifespan countdown: 2. (0x800003e0)
 >!  Erm -  fetching from unmapped memory, address: 0x128480, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a d0 4b e2          	: sub sp, fp, #0xa
 >> Lifespan countdown: 2. (0x800003e0)
 >!  Erm -  fetching from unmapped memory, address: 0x12848010, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c d0 4b e2          	: sub sp, fp, #0xc
 >> Lifespan countdown: 2. (0x800003e0)
 >> Lifespan countdown: 1. (0x8010fffc)
 >> Reverting instruction          :  08 d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 d0 4b e2          	: sub sp, fp, #0
 >> Lifespan countdown: 2. (0x800003e0)
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 d0 4b e2          	: sub sp, fp, #0x18
 >> Lifespan countdown: 2. (0x800003e0)
 >!  Erm -  fetching from unmapped memory, address: 0x20000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 d0 4b e2          	: sub sp, fp, #0x28
 >> Lifespan countdown: 2. (0x800003e0)
 >> Lifespan countdown: 1. (0x12000000)
 >> Reverting instruction          :  08 d0 4b e2 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 82.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 d0 4b e2          	: sub sp, fp, #0x48
 >> Lifespan countdown: 2. (0x800003e0)
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 d0 4b e2          	: sub sp, fp, #0x88
 >> Lifespan countdown: 2. (0x800003e0)
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 d1 4b e2          	: sub sp, fp, #8, #2
 >> Lifespan countdown: 2. (0x800003e0)
 >!  Erm -  fetching from unmapped memory, address: 0x100, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 d2 4b e2          	: sub sp, fp, #8, #4
 >> Lifespan countdown: 2. (0x800003e0)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000010ff34, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 d4 4b e2          	: sub sp, fp, #8, #8
 >> Lifespan countdown: 2. (0x800003e0)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007810ff34, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 d8 4b e2          	: sub sp, fp, #8, #16
 >> Lifespan countdown: 2. (0x800003e0)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008008ff34, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 c0 4b e2          	: sub ip, fp, #8
 >> Lifespan countdown: 2. (0x800003e0)
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 f0 4b e2          	: sub pc, fp, #8
 >> Lifespan countdown: 2. (0x8010ff2c)
 >> Lifespan countdown: 1. (0x8010ff30)
 >> Reverting instruction          :  08 d0 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000001, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 90 4b e2          	: sub sb, fp, #8
 >> Lifespan countdown: 2. (0x800003e0)
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003dc. Hit: 1. Lifespan: 2. Instruction: 00000070. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 d0 4b e2          	: sub sp, fp, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 50 4b e2          	: sub r5, fp, #8
 >> Lifespan countdown: 2. (0x800003e0)
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 0. Instruction: 00000073. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001288
 >> Updated                     : 0x000000008000128c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 53 e3          	: cmp r3, #1
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x800012e8)
 >> Reverting instruction          :  00 00 53 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 53 e3          	: cmp r3, #2
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 53 e3          	: cmp r3, #4
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 53 e3          	: cmp r3, #8
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 53 e3          	: cmp r3, #0x10
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 53 e3          	: cmp r3, #0x20
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 53 e3          	: cmp r3, #0x40
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 53 e3          	: cmp r3, #0x80
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 53 e3          	: cmp r3, #0, #2
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 53 e3          	: cmp r3, #0, #4
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 53 e3          	: cmp r3, #0, #8
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 53 e3          	: cmp r3, #0, #16
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001288. Hit: 1. Lifespan: 2. Instruction: 00000073. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x80001290)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 0. Instruction: 00000081. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012a8
 >> Updated                     : 0x00000000800012ac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 00 a0 e1          	: mov r0, r7
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 00 a0 e1          	: mov r0, r4
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 00 a0 e1          	: mov r0, r2
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 00 a0 e1          	: mov r0, lr
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 00 a0 e1          	: lsl r0, r6, r0
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 00 a0 e1          	: lsr r0, r6, #0x20
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 00 a0 e1          	: asr r0, r6, #0x20
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 00 a0 e1          	: lsl r0, r6, #1
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 01 a0 e1          	: lsl r0, r6, #2
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 02 a0 e1          	: lsl r0, r6, #4
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 04 a0 e1          	: lsl r0, r6, #8
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 08 a0 e1          	: lsl r0, r6, #0x10
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 10 a0 e1          	: mov r1, r6
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 20 a0 e1          	: mov r2, r6
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 40 a0 e1          	: mov r4, r6
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012a8. Hit: 1. Lifespan: 2. Instruction: 00000081. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 a0 e1          	: mov r0, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 80 a0 e1          	: mov r8, r6
 >> Lifespan countdown: 2. (0x800012ac)
 >> Lifespan countdown: 1. (0x800012b0)
 >> Reverting instruction          :  06 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 0. Instruction: 00000090. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001260
 >> Updated                     : 0x0000000080001264
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 d0 8b e2          	: add sp, fp, #1
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000080103f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 d0 8b e2          	: add sp, fp, #2
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000007f50, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 d0 8b e2          	: add sp, fp, #4
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000ffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 d0 8b e2          	: add sp, fp, #8
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff50, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 d0 8b e2          	: add sp, fp, #0x10
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 d0 8b e2          	: add sp, fp, #0x20
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 d0 8b e2          	: add sp, fp, #0x40
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000103253b6, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 d0 8b e2          	: add sp, fp, #0x80
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 d1 8b e2          	: add sp, fp, #0, #2
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 d2 8b e2          	: add sp, fp, #0, #4
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 d4 8b e2          	: add sp, fp, #0, #8
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 d8 8b e2          	: add sp, fp, #0, #16
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 c0 8b e2          	: add ip, fp, #0
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 f0 8b e2          	: add pc, fp, #0
 >> Lifespan countdown: 2. (0x8010ff34)
 >!  Erm -  fetching from unmapped memory, address: 0xffff90aa, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 91.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 90 8b e2          	: add sb, fp, #0
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001260. Hit: 1. Lifespan: 2. Instruction: 00000090. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 50 8b e2          	: add r5, fp, #0
 >> Lifespan countdown: 2. (0x80001264)
 >> Lifespan countdown: 1. (0x80001268)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x2578ea84, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 0. Instruction: 00000094. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012c0
 >> Updated                     : 0x00000000800012c4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x1
 >> Updated instruction            :  65 fc ff eb          	: bl #0x19c
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  64 fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000ffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 112.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x2
 >> Updated instruction            :  66 fc ff eb          	: bl #0x1a0
 >> Lifespan countdown: 2. (0x80000460)
 >> Lifespan countdown: 1. (0x80000464)
 >> Reverting instruction          :  64 fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000ffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 111.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x4
 >> Updated instruction            :  60 fc ff eb          	: bl #0x188
 >> Lifespan countdown: 2. (0x80000448)
 >> Lifespan countdown: 1. (0x8000044c)
 >> Reverting instruction          :  64 fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007fffff68, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 99.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x8
 >> Updated instruction            :  6c fc ff eb          	: bl #0x1b8
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  64 fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007fffff68, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 105.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x10
 >> Updated instruction            :  74 fc ff eb          	: bl #0x1d8
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  64 fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000ffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 97.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x20
 >> Updated instruction            :  44 fc ff eb          	: bl #0x118
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  64 fc ff eb 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x40
 >> Updated instruction            :  24 fc ff eb          	: bl #0x98
 >> Lifespan countdown: 2. (0x80000358)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x18, value: 0x8010ff60!! Count 96 Skipping to end.
 >> Run result: Fault errored program - last instruction: 95.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x80
 >> Updated instruction            :  e4 fc ff eb          	: bl #0x398
 >> Lifespan countdown: 2. (0x80000658)
 >> Lifespan countdown: 1. (0x8000065c)
 >> Reverting instruction          :  64 fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 155.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x100
 >> Updated instruction            :  64 fd ff eb          	: bl #0x598
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  64 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x90, value: 0x0!! Count 99 Skipping to end.
 >> Run result: Fault errored program - last instruction: 98.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x200
 >> Updated instruction            :  64 fe ff eb          	: bl #0x998
 >> Lifespan countdown: 2. (0x80000c58)
 >> Lifespan countdown: 1. (0x80000c5c)
 >> Reverting instruction          :  64 fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 321.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x400
 >> Updated instruction            :  64 f8 ff eb          	: bl #0xfffff198
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff458, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 94.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x800
 >> Updated instruction            :  64 f4 ff eb          	: bl #0xffffe198
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe458, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 94.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x1000
 >> Updated instruction            :  64 ec ff eb          	: bl #0xffffc198
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc458, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 94.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x2000
 >> Updated instruction            :  64 dc ff eb          	: bl #0xffff8198
 >!  Erm -  fetching from unmapped memory, address: 0x7fff8458, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 94.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x4000
 >> Updated instruction            :  64 bc ff eb          	: bl #0xffff0198
 >!  Erm -  fetching from unmapped memory, address: 0x7fff0458, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 94.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c0. Hit: 1. Lifespan: 2. Instruction: 00000094. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 fc ff eb          	: bl #0x198
 >> Mask                           :  0x8000
 >> Updated instruction            :  64 7c ff eb          	: bl #0xfffe0198
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe0458, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 94.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 0. Instruction: 00000106. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000484
 >> Updated                     : 0x0000000080000488
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x1
 >> Updated instruction            :  f1 21 c0 e1          	: strd r2, r3, [r0, #0x11]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x2
 >> Updated instruction            :  f2 21 c0 e1          	: strd r2, r3, [r0, #0x12]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x4
 >> Updated instruction            :  f4 21 c0 e1          	: strd r2, r3, [r0, #0x14]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x8
 >> Updated instruction            :  f8 21 c0 e1          	: strd r2, r3, [r0, #0x18]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x10
 >> Updated instruction            :  e0 21 c0 e1          	: bic r2, r0, r0, ror #3
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x20
 >> Updated instruction            :  d0 21 c0 e1          	: ldrd r2, r3, [r0, #0x10]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x40
 >> Updated instruction            :  b0 21 c0 e1          	: strh r2, [r0, #0x10]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x80
 >> Updated instruction            :  70 21 c0 e1          	: bic r2, r0, r0, ror r1
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x100
 >> Updated instruction            :  f0 20 c0 e1          	: strd r2, r3, [r0]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x200
 >> Updated instruction            :  f0 23 c0 e1          	: strd r2, r3, [r0, #0x30]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x400
 >> Updated instruction            :  f0 25 c0 e1          	: strd r2, r3, [r0, #0x50]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x800
 >> Updated instruction            :  f0 29 c0 e1          	: strd r2, r3, [r0, #0x90]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x1000
 >> Updated instruction            :  f0 31 c0 e1          	: strd r3, r4, [r0, #0x10]
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 106.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x2000
 >> Updated instruction            :  f0 01 c0 e1          	: strd r0, r1, [r0, #0x10]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x4000
 >> Updated instruction            :  f0 61 c0 e1          	: strd r6, r7, [r0, #0x10]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000484. Hit: 1. Lifespan: 2. Instruction: 00000106. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 21 c0 e1          	: strd r2, r3, [r0, #0x10]
 >> Mask                           :  0x8000
 >> Updated instruction            :  f0 a1 c0 e1          	: strd sl, fp, [r0, #0x10]
 >> Lifespan countdown: 2. (0x80000488)
 >> Lifespan countdown: 1. (0x8000048c)
 >> Reverting instruction          :  f0 21 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 0. Instruction: 00000113. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012c4
 >> Updated                     : 0x00000000800012c8
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x1
 >> Updated instruction            :  c1 20 1b e5          	: ldr r2, [fp, #-0xc1]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43288.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x2
 >> Updated instruction            :  c2 20 1b e5          	: ldr r2, [fp, #-0xc2]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x4
 >> Updated instruction            :  c4 20 1b e5          	: ldr r2, [fp, #-0xc4]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x8
 >> Updated instruction            :  c8 20 1b e5          	: ldr r2, [fp, #-0xc8]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x10
 >> Updated instruction            :  d0 20 1b e5          	: ldr r2, [fp, #-0xd0]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x20
 >> Updated instruction            :  e0 20 1b e5          	: ldr r2, [fp, #-0xe0]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x40
 >> Updated instruction            :  80 20 1b e5          	: ldr r2, [fp, #-0x80]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x80
 >> Updated instruction            :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x100
 >> Updated instruction            :  c0 21 1b e5          	: ldr r2, [fp, #-0x1c0]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x200
 >> Updated instruction            :  c0 22 1b e5          	: ldr r2, [fp, #-0x2c0]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x400
 >> Updated instruction            :  c0 24 1b e5          	: ldr r2, [fp, #-0x4c0]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x800
 >> Updated instruction            :  c0 28 1b e5          	: ldr r2, [fp, #-0x8c0]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x1000
 >> Updated instruction            :  c0 30 1b e5          	: ldr r3, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x2000
 >> Updated instruction            :  c0 00 1b e5          	: ldr r0, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000010, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 118.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x4000
 >> Updated instruction            :  c0 60 1b e5          	: ldr r6, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c4. Hit: 1. Lifespan: 2. Instruction: 00000113. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Mask                           :  0x8000
 >> Updated instruction            :  c0 a0 1b e5          	: ldr sl, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x800012c8)
 >> Lifespan countdown: 1. (0x800012cc)
 >> Reverting instruction          :  c0 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 0. Instruction: 00000125. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001198
 >> Updated                     : 0x000000008000119c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 20 84 e5          	: str r2, [r4, #1]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 20 84 e5          	: str r2, [r4, #2]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 20 84 e5          	: str r2, [r4, #4]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 20 84 e5          	: str r2, [r4, #8]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 20 84 e5          	: str r2, [r4, #0x10]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 20 84 e5          	: str r2, [r4, #0x20]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 20 84 e5          	: str r2, [r4, #0x40]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 20 84 e5          	: str r2, [r4, #0x80]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 21 84 e5          	: str r2, [r4, #0x100]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110060, value: 0x10!! Count 126 Skipping to end.
 >> Run result: Fault errored program - last instruction: 125.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 22 84 e5          	: str r2, [r4, #0x200]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110160, value: 0x10!! Count 126 Skipping to end.
 >> Run result: Fault errored program - last instruction: 125.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 24 84 e5          	: str r2, [r4, #0x400]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110360, value: 0x10!! Count 126 Skipping to end.
 >> Run result: Fault errored program - last instruction: 125.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 28 84 e5          	: str r2, [r4, #0x800]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110760, value: 0x10!! Count 126 Skipping to end.
 >> Run result: Fault errored program - last instruction: 125.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 30 84 e5          	: str r3, [r4]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 00 84 e5          	: str r0, [r4]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 60 84 e5          	: str r6, [r4]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001198. Hit: 1. Lifespan: 2. Instruction: 00000125. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 84 e5          	: str r2, [r4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 a0 84 e5          	: str sl, [r4]
 >> Lifespan countdown: 2. (0x8000119c)
 >> Lifespan countdown: 1. (0x800011a0)
 >> Reverting instruction          :  00 20 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 0. Instruction: 00000128. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800011a4
 >> Updated                     : 0x00000000800011a8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x1
 >> Updated instruction            :  3e 00 10 e2          	: ands r0, r0, #0x3e
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x2
 >> Updated instruction            :  3d 00 10 e2          	: ands r0, r0, #0x3d
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x4
 >> Updated instruction            :  3b 00 10 e2          	: ands r0, r0, #0x3b
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x8
 >> Updated instruction            :  37 00 10 e2          	: ands r0, r0, #0x37
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x10
 >> Updated instruction            :  2f 00 10 e2          	: ands r0, r0, #0x2f
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x20
 >> Updated instruction            :  1f 00 10 e2          	: ands r0, r0, #0x1f
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x40
 >> Updated instruction            :  7f 00 10 e2          	: ands r0, r0, #0x7f
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x80
 >> Updated instruction            :  bf 00 10 e2          	: ands r0, r0, #0xbf
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x100
 >> Updated instruction            :  3f 01 10 e2          	: ands r0, r0, #0xc000000f
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x200
 >> Updated instruction            :  3f 02 10 e2          	: ands r0, r0, #0xf0000003
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x400
 >> Updated instruction            :  3f 04 10 e2          	: ands r0, r0, #0x3f000000
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x800
 >> Updated instruction            :  3f 08 10 e2          	: ands r0, r0, #0x3f0000
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x1000
 >> Updated instruction            :  3f 10 10 e2          	: ands r1, r0, #0x3f
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x2000
 >> Updated instruction            :  3f 20 10 e2          	: ands r2, r0, #0x3f
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x4000
 >> Updated instruction            :  3f 40 10 e2          	: ands r4, r0, #0x3f
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x0!! Count 132 Skipping to end.
 >> Run result: Fault errored program - last instruction: 131.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011a4. Hit: 1. Lifespan: 2. Instruction: 00000128. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 10 e2          	: ands r0, r0, #0x3f
 >> Mask                           :  0x8000
 >> Updated instruction            :  3f 80 10 e2          	: ands r8, r0, #0x3f
 >> Lifespan countdown: 2. (0x800011a8)
 >> Lifespan countdown: 1. (0x800011ac)
 >> Reverting instruction          :  3f 00 10 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 0. Instruction: 00000136. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001204
 >> Updated                     : 0x0000000080001208
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 10 a0 e1          	: mov r1, r7
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 10 a0 e1          	: mov r1, r4
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 10 a0 e1          	: mov r1, r2
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000010, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 10 a0 e1          	: mov r1, lr
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 10 a0 e1          	: lsl r1, r6, r0
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 10 a0 e1          	: lsr r1, r6, #0x20
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 10 a0 e1          	: asr r1, r6, #0x20
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 10 a0 e1          	: lsl r1, r6, #1
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000064000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 11 a0 e1          	: lsl r1, r6, #2
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c8000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 12 a0 e1          	: lsl r1, r6, #4
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000020000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 14 a0 e1          	: lsl r1, r6, #8
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 18 a0 e1          	: lsl r1, r6, #0x10
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 00 a0 e1          	: mov r0, r6
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 30 a0 e1          	: mov r3, r6
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 50 a0 e1          	: mov r5, r6
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001204. Hit: 1. Lifespan: 2. Instruction: 00000136. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 90 a0 e1          	: mov sb, r6
 >> Lifespan countdown: 2. (0x80001208)
 >> Lifespan countdown: 1. (0x8000120c)
 >> Reverting instruction          :  06 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 0. Instruction: 00000142. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000174
 >> Updated                     : 0x0000000080000178
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x1
 >> Updated instruction            :  1f ff 2f 01          	: bxeq pc
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x2
 >> Updated instruction            :  1c ff 2f 01          	: bxeq ip
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x4
 >> Updated instruction            :  1a ff 2f 01          	: bxeq sl
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x8
 >> Updated instruction            :  16 ff 2f 01          	: bxeq r6
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x10
 >> Updated instruction            :  0e ff 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x20
 >> Updated instruction            :  3e ff 2f 01          	: blxeq lr
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x40
 >> Updated instruction            :  5e ff 2f 01          	: qsubeq pc, lr, pc
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x80
 >> Updated instruction            :  9e ff 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x100
 >> Updated instruction            :  1e fe 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x200
 >> Updated instruction            :  1e fd 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x400
 >> Updated instruction            :  1e fb 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x800
 >> Updated instruction            :  1e f7 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  1e ef 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  1e df 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  1e bf 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000174. Hit: 1. Lifespan: 2. Instruction: 00000142. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  1e 7f 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 0. Instruction: 00000147. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000188
 >> Updated                     : 0x000000008000018c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 a0 23          	: movhs r3, #0
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 a0 23          	: movhs r3, #3
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 a0 23          	: movhs r3, #5
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 a0 23          	: movhs r3, #9
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 a0 23          	: movhs r3, #0x11
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 a0 23          	: movhs r3, #0x21
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 a0 23          	: movhs r3, #0x41
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 a0 23          	: movhs r3, #0x81
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 a0 23          	: movhs r3, #0x40000000
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 a0 23          	: movhs r3, #0x10000000
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 a0 23          	: movhs r3, #0x1000000
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 a0 23          	: movhs r3, #0x10000
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 a0 23          	: movhs r2, #1
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 a0 23          	: movhs r1, #1
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000001, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 156.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 a0 23          	: movhs r7, #1
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000188. Hit: 1. Lifespan: 2. Instruction: 00000147. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 a0 23          	: movhs r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 a0 23          	: movhs fp, #1
 >> Lifespan countdown: 2. (0x8000018c)
 >> Lifespan countdown: 1. (0x80000190)
 >> Reverting instruction          :  01 30 a0 23 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1295.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 0. Instruction: 00000154. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800001a4
 >> Updated                     : 0x00000000800001a8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 61 e2          	: rsb r3, r1, #1
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 61 e2          	: rsb r3, r1, #2
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 61 e2          	: rsb r3, r1, #4
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 61 e2          	: rsb r3, r1, #8
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 61 e2          	: rsb r3, r1, #0x10
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 61 e2          	: rsb r3, r1, #0x20
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 61 e2          	: rsb r3, r1, #0x40
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 61 e2          	: rsb r3, r1, #0x80
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 61 e2          	: rsb r3, r1, #0, #2
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 61 e2          	: rsb r3, r1, #0, #4
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 61 e2          	: rsb r3, r1, #0, #8
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 61 e2          	: rsb r3, r1, #0, #16
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 61 e2          	: rsb r2, r1, #0
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 345 Skipping to end.
 >> Run result: Fault errored program - last instruction: 344.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 61 e2          	: rsb r1, r1, #0
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ce000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 164.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 61 e2          	: rsb r7, r1, #0
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a4. Hit: 1. Lifespan: 2. Instruction: 00000154. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 61 e2          	: rsb r3, r1, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 61 e2          	: rsb fp, r1, #0
 >> Lifespan countdown: 2. (0x800001a8)
 >> Lifespan countdown: 1. (0x800001ac)
 >> Reverting instruction          :  00 30 61 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000cdffff3f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1283.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 0. Instruction: 00000162. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800001c4
 >> Updated                     : 0x00000000800001c8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 53 e3          	: cmp r3, #1
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800001cc)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 53 e3          	: cmp r3, #2
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800001cc)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 53 e3          	: cmp r3, #4
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800001cc)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 53 e3          	: cmp r3, #8
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800001cc)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 53 e3          	: cmp r3, #0x10
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800001cc)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 53 e3          	: cmp r3, #0x20
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800001cc)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 53 e3          	: cmp r3, #0x40
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800001cc)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 53 e3          	: cmp r3, #0x80
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800001cc)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 53 e3          	: cmp r3, #0, #2
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800002b0)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 53 e3          	: cmp r3, #0, #4
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800002b0)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 53 e3          	: cmp r3, #0, #8
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800002b0)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 53 e3          	: cmp r3, #0, #16
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800002b0)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800002b0)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800002b0)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800002b0)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c4. Hit: 1. Lifespan: 2. Instruction: 00000162. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800001c8)
 >> Lifespan countdown: 1. (0x800002b0)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 0. Instruction: 00000165. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800002b4
 >> Updated                     : 0x00000000800002b8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 60 a0 e1          	: mov r6, r1
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 60 a0 e1          	: mov r6, r2
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 60 a0 e1          	: mov r6, r4
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 60 a0 e1          	: mov r6, r8
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 60 a0 e1          	: lsl r6, r0, r0
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 60 a0 e1          	: lsr r6, r0, #0x20
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 60 a0 e1          	: asr r6, r0, #0x20
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 60 a0 e1          	: lsl r6, r0, #1
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 61 a0 e1          	: lsl r6, r0, #2
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 62 a0 e1          	: lsl r6, r0, #4
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 64 a0 e1          	: lsl r6, r0, #8
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 68 a0 e1          	: lsl r6, r0, #0x10
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 70 a0 e1          	: mov r7, r0
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 40 a0 e1          	: mov r4, r0
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 20 a0 e1          	: mov r2, r0
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002b4. Hit: 1. Lifespan: 2. Instruction: 00000165. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 a0 e1          	: mov r6, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 e0 a0 e1          	: mov lr, r0
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  00 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 0. Instruction: 00000172. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000022c
 >> Updated                     : 0x0000000080000230
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000001, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 1. Lifespan: 2. Instruction: 00000172. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 0. Instruction: 00000182. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000022c
 >> Updated                     : 0x0000000080000230
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000003, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 183.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 3. Lifespan: 2. Instruction: 00000182. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 0. Instruction: 00000189. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000234
 >> Updated                     : 0x0000000080000238
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 54 e1          	: cmp r4, r2
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 54 e1          	: cmp r4, r1
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 54 e1          	: cmp r4, r7
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 54 e1          	: cmp r4, fp
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 54 e1          	: cmp r4, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 54 e1          	: cmp r4, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 54 e1          	: cmp r4, r3, asr #32
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 54 e1          	: cmp r4, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 54 e1          	: cmp r4, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 54 e1          	: cmp r4, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 54 e1          	: cmp r4, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 54 e1          	: cmp r4, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 4. Lifespan: 2. Instruction: 00000189. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 0. Instruction: 00000192. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000240
 >> Updated                     : 0x0000000080000244
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 30 c2 e3          	: bic r3, r2, #2
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 30 c2 e3          	: bic r3, r2, #1
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 30 c2 e3          	: bic r3, r2, #7
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 30 c2 e3          	: bic r3, r2, #0xb
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 30 c2 e3          	: bic r3, r2, #0x13
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 30 c2 e3          	: bic r3, r2, #0x23
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 30 c2 e3          	: bic r3, r2, #0x43
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 30 c2 e3          	: bic r3, r2, #0x83
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 31 c2 e3          	: bic r3, r2, #0xc0000000
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 32 c2 e3          	: bic r3, r2, #0x30000000
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 34 c2 e3          	: bic r3, r2, #0x3000000
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 38 c2 e3          	: bic r3, r2, #0x30000
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 20 c2 e3          	: bic r2, r2, #3
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 10 c2 e3          	: bic r1, r2, #3
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 70 c2 e3          	: bic r7, r2, #3
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000240. Hit: 1. Lifespan: 2. Instruction: 00000192. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 b0 c2 e3          	: bic fp, r2, #3
 >> Lifespan countdown: 2. (0x80000244)
 >> Lifespan countdown: 1. (0x80000248)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 0. Instruction: 00000201. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ff8
 >> Updated                     : 0x0000000080000ffc
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x1
 >> Updated instruction            :  f1 48 2d e9          	: push {r0, r4, r5, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x2
 >> Updated instruction            :  f2 48 2d e9          	: push {r1, r4, r5, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x4
 >> Updated instruction            :  f4 48 2d e9          	: push {r2, r4, r5, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x8
 >> Updated instruction            :  f8 48 2d e9          	: push {r3, r4, r5, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x10
 >> Updated instruction            :  e0 48 2d e9          	: push {r5, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x20
 >> Updated instruction            :  d0 48 2d e9          	: push {r4, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x40
 >> Updated instruction            :  b0 48 2d e9          	: push {r4, r5, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x80
 >> Updated instruction            :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x100
 >> Updated instruction            :  f0 49 2d e9          	: push {r4, r5, r6, r7, r8, fp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x200
 >> Updated instruction            :  f0 4a 2d e9          	: push {r4, r5, r6, r7, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x400
 >> Updated instruction            :  f0 4c 2d e9          	: push {r4, r5, r6, r7, sl, fp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x800
 >> Updated instruction            :  f0 40 2d e9          	: push {r4, r5, r6, r7, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x1000
 >> Updated instruction            :  f0 58 2d e9          	: push {r4, r5, r6, r7, fp, ip, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x2000
 >> Updated instruction            :  f0 68 2d e9          	: push {r4, r5, r6, r7, fp, sp, lr}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x4000
 >> Updated instruction            :  f0 08 2d e9          	: push {r4, r5, r6, r7, fp}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff8. Hit: 1. Lifespan: 2. Instruction: 00000201. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x8000
 >> Updated instruction            :  f0 c8 2d e9          	: push {r4, r5, r6, r7, fp, lr, pc}
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  f0 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 0. Instruction: 00000207. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001010
 >> Updated                     : 0x0000000080001014
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x1
 >> Updated instruction            :  3e 00 00 e2          	: and r0, r0, #0x3e
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x2
 >> Updated instruction            :  3d 00 00 e2          	: and r0, r0, #0x3d
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x4
 >> Updated instruction            :  3b 00 00 e2          	: and r0, r0, #0x3b
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x8
 >> Updated instruction            :  37 00 00 e2          	: and r0, r0, #0x37
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x10
 >> Updated instruction            :  2f 00 00 e2          	: and r0, r0, #0x2f
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x20
 >> Updated instruction            :  1f 00 00 e2          	: and r0, r0, #0x1f
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x40
 >> Updated instruction            :  7f 00 00 e2          	: and r0, r0, #0x7f
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x80
 >> Updated instruction            :  bf 00 00 e2          	: and r0, r0, #0xbf
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x100
 >> Updated instruction            :  3f 01 00 e2          	: and r0, r0, #0xc000000f
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x200
 >> Updated instruction            :  3f 02 00 e2          	: and r0, r0, #0xf0000003
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x400
 >> Updated instruction            :  3f 04 00 e2          	: and r0, r0, #0x3f000000
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x800
 >> Updated instruction            :  3f 08 00 e2          	: and r0, r0, #0x3f0000
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x1000
 >> Updated instruction            :  3f 10 00 e2          	: and r1, r0, #0x3f
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x38, value: 0x80!! Count 216 Skipping to end.
 >> Run result: Fault errored program - last instruction: 215.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x2000
 >> Updated instruction            :  3f 20 00 e2          	: and r2, r0, #0x3f
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x4000
 >> Updated instruction            :  3f 40 00 e2          	: and r4, r0, #0x3f
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x39, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001010. Hit: 1. Lifespan: 2. Instruction: 00000207. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3f 00 00 e2          	: and r0, r0, #0x3f
 >> Mask                           :  0x8000
 >> Updated instruction            :  3f 80 00 e2          	: and r8, r0, #0x3f
 >> Lifespan countdown: 2. (0x80001014)
 >> Lifespan countdown: 1. (0x80001018)
 >> Reverting instruction          :  3f 00 00 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 0. Instruction: 00000214. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000102c
 >> Updated                     : 0x0000000080001030
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x29, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 84 e0          	: add r0, r4, r1
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fed0, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 84 e0          	: add r0, r4, r2
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 84 e0          	: add r0, r4, r4
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fec0, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 84 e0          	: add r0, r4, r8
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 84 e0          	: add r0, r4, r0, lsl r0
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 84 e0          	: add r0, r4, r0, lsr #32
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 84 e0          	: add r0, r4, r0, asr #32
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 84 e0          	: add r0, r4, r0, lsl #1
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 84 e0          	: add r0, r4, r0, lsl #2
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110004, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 84 e0          	: add r0, r4, r0, lsl #4
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101f0, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 84 e0          	: add r0, r4, r0, lsl #8
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80112860, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 84 e0          	: add r0, r4, r0, lsl #16
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8039ff60, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 84 e0          	: add r1, r4, r0
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x29, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 84 e0          	: add r2, r4, r0
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x29, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 84 e0          	: add r4, r4, r0
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x29, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000102c. Hit: 1. Lifespan: 2. Instruction: 00000214. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 84 e0          	: add r0, r4, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 84 e0          	: add r8, r4, r0
 >> Lifespan countdown: 2. (0x80001030)
 >> Lifespan countdown: 1. (0x80001034)
 >> Reverting instruction          :  00 00 84 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x29, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 0. Instruction: 00000218. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000105c
 >> Updated                     : 0x0000000080001060
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 10 a0 e3          	: mov r1, #1
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 10 a0 e3          	: mov r1, #2
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 10 a0 e3          	: mov r1, #4
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 10 a0 e3          	: mov r1, #8
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 10 a0 e3          	: mov r1, #0x10
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 10 a0 e3          	: mov r1, #0x20
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 10 a0 e3          	: mov r1, #0x40
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 10 a0 e3          	: mov r1, #0x80
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 11 a0 e3          	: mov r1, #0, #2
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 12 a0 e3          	: mov r1, #0, #4
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 14 a0 e3          	: mov r1, #0, #8
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 18 a0 e3          	: mov r1, #0, #16
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 00 a0 e3          	: mov r0, #0
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x70707070!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 30 a0 e3          	: mov r3, #0
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 50 a0 e3          	: mov r5, #0
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0xdd!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000105c. Hit: 1. Lifespan: 2. Instruction: 00000218. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 a0 e3          	: mov r1, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 90 a0 e3          	: mov sb, #0
 >> Lifespan countdown: 2. (0x80001060)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  00 10 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 0. Instruction: 00000224. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000008c
 >> Updated                     : 0x0000000080000090
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 c0 83 e2          	: add ip, r3, #2
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 c0 83 e2          	: add ip, r3, #1
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 c0 83 e2          	: add ip, r3, #7
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b c0 83 e2          	: add ip, r3, #0xb
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 c0 83 e2          	: add ip, r3, #0x13
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 c0 83 e2          	: add ip, r3, #0x23
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 c0 83 e2          	: add ip, r3, #0x43
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 c0 83 e2          	: add ip, r3, #0x83
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 c1 83 e2          	: add ip, r3, #0xc0000000
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 c2 83 e2          	: add ip, r3, #0x30000000
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 c4 83 e2          	: add ip, r3, #0x3000000
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 c8 83 e2          	: add ip, r3, #0x30000
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 d0 83 e2          	: add sp, r3, #3
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xfffffff6, value: 0x8010ff60!! Count 227 Skipping to end.
 >> Run result: Fault errored program - last instruction: 226.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 e0 83 e2          	: add lr, r3, #3
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >!  Erm -  fetching from unmapped memory, address: 0x6, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 247.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 80 83 e2          	: add r8, r3, #3
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000008c. Hit: 1. Lifespan: 2. Instruction: 00000224. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 83 e2          	: add ip, r3, #3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 40 83 e2          	: add r4, r3, #3
 >> Lifespan countdown: 2. (0x80000090)
 >> Lifespan countdown: 1. (0x80000094)
 >> Reverting instruction          :  03 c0 83 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000006, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 248.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 0. Instruction: 00000230. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000a4
 >> Updated                     : 0x00000000800000a8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x1
 >> Updated instruction            :  0d b0 8d e2          	: add fp, sp, #0xd
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x2
 >> Updated instruction            :  0e b0 8d e2          	: add fp, sp, #0xe
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x4
 >> Updated instruction            :  08 b0 8d e2          	: add fp, sp, #8
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x8
 >> Updated instruction            :  04 b0 8d e2          	: add fp, sp, #4
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x10
 >> Updated instruction            :  1c b0 8d e2          	: add fp, sp, #0x1c
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x20
 >> Updated instruction            :  2c b0 8d e2          	: add fp, sp, #0x2c
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x40
 >> Updated instruction            :  4c b0 8d e2          	: add fp, sp, #0x4c
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x80
 >> Updated instruction            :  8c b0 8d e2          	: add fp, sp, #0x8c
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x100
 >> Updated instruction            :  0c b1 8d e2          	: add fp, sp, #12, #2
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x200
 >> Updated instruction            :  0c b2 8d e2          	: add fp, sp, #12, #4
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x400
 >> Updated instruction            :  0c b4 8d e2          	: add fp, sp, #12, #8
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x800
 >> Updated instruction            :  0c b8 8d e2          	: add fp, sp, #12, #16
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c a0 8d e2          	: add sl, sp, #0xc
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 90 8d e2          	: add sb, sp, #0xc
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c f0 8d e2          	: add pc, sp, #0xc
 >> Lifespan countdown: 2. (0x8010ff1c)
 >> Lifespan countdown: 1. (0x8010ff20)
 >> Reverting instruction          :  0c b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0xfe00, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 232.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000a4. Hit: 1. Lifespan: 2. Instruction: 00000230. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 30 8d e2          	: add r3, sp, #0xc
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fea5, value: 0x0!! Count 258 Skipping to end.
 >> Run result: Fault errored program - last instruction: 257.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 0. Instruction: 00000235. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000b8
 >> Updated                     : 0x00000000800000bc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 00 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 00 53 e3          	: cmp r3, #3
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 00 53 e3          	: cmp r3, #5
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 00 53 e3          	: cmp r3, #9
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 00 53 e3          	: cmp r3, #0x11
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 00 53 e3          	: cmp r3, #0x21
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 00 53 e3          	: cmp r3, #0x41
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 00 53 e3          	: cmp r3, #0x81
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 01 53 e3          	: cmp r3, #0x40000000
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 02 53 e3          	: cmp r3, #0x10000000
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 04 53 e3          	: cmp r3, #0x1000000
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 08 53 e3          	: cmp r3, #0x10000
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 10 53 e3          	: cmp r3, #1
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 20 53 e3          	: cmp r3, #1
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 40 53 e3          	: cmp r3, #1
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b8. Hit: 1. Lifespan: 2. Instruction: 00000235. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 53 e3          	: cmp r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 80 53 e3          	: cmp r3, #1
 >> Lifespan countdown: 2. (0x800000bc)
 >> Lifespan countdown: 1. (0x800000c0)
 >> Reverting instruction          :  01 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 0. Instruction: 00000241. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000d0
 >> Updated                     : 0x00000000800000d4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 50 80 e2          	: add r5, r0, #3
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 50 80 e2          	: add r5, r0, #0
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 50 80 e2          	: add r5, r0, #6
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 50 80 e2          	: add r5, r0, #0xa
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 50 80 e2          	: add r5, r0, #0x12
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 50 80 e2          	: add r5, r0, #0x22
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 50 80 e2          	: add r5, r0, #0x42
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 50 80 e2          	: add r5, r0, #0x82
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 51 80 e2          	: add r5, r0, #0x80000000
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 52 80 e2          	: add r5, r0, #0x20000000
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 54 80 e2          	: add r5, r0, #0x2000000
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 58 80 e2          	: add r5, r0, #0x20000
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 40 80 e2          	: add r4, r0, #2
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 70 80 e2          	: add r7, r0, #2
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 10 80 e2          	: add r1, r0, #2
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d0. Hit: 1. Lifespan: 2. Instruction: 00000241. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 80 e2          	: add r5, r0, #2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 d0 80 e2          	: add sp, r0, #2
 >> Lifespan countdown: 2. (0x800000d4)
 >> Lifespan countdown: 1. (0x800000d8)
 >> Reverting instruction          :  02 50 80 e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 0. Instruction: 00000250. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000f4
 >> Updated                     : 0x00000000800000f8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  10 c4 cf e7          	: bfi ip, r0, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  13 c4 cf e7          	: bfi ip, r3, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  15 c4 cf e7          	: bfi ip, r5, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  19 c4 cf e7          	: bfi ip, sb, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  01 c4 cf e7          	: strb ip, [pc, r1, lsl #8]
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fec0, value: 0x0!! Count 1117 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1116.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  31 c4 cf e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 250.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  51 c4 cf e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 250.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  91 c4 cf e7          	: bfi ip, r1, #9, #7
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  11 c5 cf e7          	: bfi ip, r1, #0xa, #6
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  11 c6 cf e7          	: bfi ip, r1, #0xc, #4
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  11 c0 cf e7          	: bfi ip, r1, #0, #0x10
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  11 cc cf e7          	: bfi ip, r1, #0xf, #1
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  11 d4 cf e7          	: bfi sp, r1, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  11 e4 cf e7          	: bfi lr, r1, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  11 84 cf e7          	: bfi r8, r1, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 1. Lifespan: 2. Instruction: 00000250. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  11 44 cf e7          	: bfi r4, r1, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 0. Instruction: 00000254. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000104
 >> Updated                     : 0x0000000080000108
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x1
 >> Updated instruction            :  23 41 a0 e1          	: lsr r4, r3, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x2
 >> Updated instruction            :  20 41 a0 e1          	: lsr r4, r0, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x4
 >> Updated instruction            :  26 41 a0 e1          	: lsr r4, r6, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x8
 >> Updated instruction            :  2a 41 a0 e1          	: lsr r4, sl, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x10
 >> Updated instruction            :  32 41 a0 e1          	: lsr r4, r2, r1
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x20
 >> Updated instruction            :  02 41 a0 e1          	: lsl r4, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x40
 >> Updated instruction            :  62 41 a0 e1          	: ror r4, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x80
 >> Updated instruction            :  a2 41 a0 e1          	: lsr r4, r2, #3
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x100
 >> Updated instruction            :  22 40 a0 e1          	: lsr r4, r2, #0x20
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x200
 >> Updated instruction            :  22 43 a0 e1          	: lsr r4, r2, #6
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x400
 >> Updated instruction            :  22 45 a0 e1          	: lsr r4, r2, #0xa
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x800
 >> Updated instruction            :  22 49 a0 e1          	: lsr r4, r2, #0x12
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x1000
 >> Updated instruction            :  22 51 a0 e1          	: lsr r5, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x2000
 >> Updated instruction            :  22 61 a0 e1          	: lsr r6, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x4000
 >> Updated instruction            :  22 01 a0 e1          	: lsr r0, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9, value: 0x0!! Count 258 Skipping to end.
 >> Run result: Fault errored program - last instruction: 257.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 1. Lifespan: 2. Instruction: 00000254. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x8000
 >> Updated instruction            :  22 c1 a0 e1          	: lsr ip, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x9!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 0. Instruction: 00000261. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110014, value: 0x0!! Count 266 Skipping to end.
 >> Run result: Fault errored program - last instruction: 265.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110094, value: 0x0!! Count 266 Skipping to end.
 >> Run result: Fault errored program - last instruction: 265.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110194, value: 0x0!! Count 266 Skipping to end.
 >> Run result: Fault errored program - last instruction: 265.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110394, value: 0x0!! Count 266 Skipping to end.
 >> Run result: Fault errored program - last instruction: 265.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110794, value: 0x0!! Count 266 Skipping to end.
 >> Run result: Fault errored program - last instruction: 265.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 2. Lifespan: 2. Instruction: 00000261. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 0. Instruction: 00000269. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011001c, value: 0x0!! Count 274 Skipping to end.
 >> Run result: Fault errored program - last instruction: 273.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011009c, value: 0x0!! Count 274 Skipping to end.
 >> Run result: Fault errored program - last instruction: 273.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011019c, value: 0x0!! Count 274 Skipping to end.
 >> Run result: Fault errored program - last instruction: 273.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011039c, value: 0x0!! Count 274 Skipping to end.
 >> Run result: Fault errored program - last instruction: 273.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011079c, value: 0x0!! Count 274 Skipping to end.
 >> Run result: Fault errored program - last instruction: 273.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 4. Lifespan: 2. Instruction: 00000269. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 0. Instruction: 00000275. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  Erm -  fetching from unmapped memory, address: 0x22, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 356.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9, value: 0x0!! Count 279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 275.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 275.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 275.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 275.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 275.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 275.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 275.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 275.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 5. Lifespan: 2. Instruction: 00000275. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 275.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 0. Instruction: 00000282. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 7. Lifespan: 2. Instruction: 00000282. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 0. Instruction: 00000289. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 9. Lifespan: 2. Instruction: 00000289. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 0. Instruction: 00000298. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001068
 >> Updated                     : 0x000000008000106c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x1
 >> Updated instruction            :  05 20 94 e5          	: ldr r2, [r4, #5]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x2
 >> Updated instruction            :  06 20 94 e5          	: ldr r2, [r4, #6]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x4
 >> Updated instruction            :  00 20 94 e5          	: ldr r2, [r4]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 20 94 e5          	: ldr r2, [r4, #0xc]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x10
 >> Updated instruction            :  14 20 94 e5          	: ldr r2, [r4, #0x14]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x20
 >> Updated instruction            :  24 20 94 e5          	: ldr r2, [r4, #0x24]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x40
 >> Updated instruction            :  44 20 94 e5          	: ldr r2, [r4, #0x44]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x80
 >> Updated instruction            :  84 20 94 e5          	: ldr r2, [r4, #0x84]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x100
 >> Updated instruction            :  04 21 94 e5          	: ldr r2, [r4, #0x104]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110064, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 298.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x200
 >> Updated instruction            :  04 22 94 e5          	: ldr r2, [r4, #0x204]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110164, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 298.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x400
 >> Updated instruction            :  04 24 94 e5          	: ldr r2, [r4, #0x404]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110364, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 298.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x800
 >> Updated instruction            :  04 28 94 e5          	: ldr r2, [r4, #0x804]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110764, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 298.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 00 94 e5          	: ldr r0, [r4, #4]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 60 94 e5          	: ldr r6, [r4, #4]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001068. Hit: 1. Lifespan: 2. Instruction: 00000298. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 a0 94 e5          	: ldr sl, [r4, #4]
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  04 20 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 0. Instruction: 00000307. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000108c
 >> Updated                     : 0x0000000080001090
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  1f c4 cf e7          	: bfc ip, #8, #8
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  1c c4 cf e7          	: bfi ip, ip, #8, #8
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  1a c4 cf e7          	: bfi ip, sl, #8, #8
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  16 c4 cf e7          	: bfi ip, r6, #8, #8
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  0e c4 cf e7          	: strb ip, [pc, lr, lsl #8]
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  3e c4 cf e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 307.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  5e c4 cf e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 307.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  9e c4 cf e7          	: bfi ip, lr, #9, #7
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  1e c5 cf e7          	: bfi ip, lr, #0xa, #6
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  1e c6 cf e7          	: bfi ip, lr, #0xc, #4
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  1e c0 cf e7          	: bfi ip, lr, #0, #0x10
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  1e cc cf e7          	: bfi ip, lr, #0xf, #1
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  1e d4 cf e7          	: bfi sp, lr, #8, #8
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x800ffffc, value: 0x8010ff60!! Count 325 Skipping to end.
 >> Run result: Fault errored program - last instruction: 324.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  1e e4 cf e7          	: bfi lr, lr, #8, #8
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  1e 84 cf e7          	: bfi r8, lr, #8, #8
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000108c. Hit: 1. Lifespan: 2. Instruction: 00000307. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c4 cf e7          	: bfi ip, lr, #8, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  1e 44 cf e7          	: bfi r4, lr, #8, #8
 >> Lifespan countdown: 2. (0x80001090)
 >> Lifespan countdown: 1. (0x80001094)
 >> Reverting instruction          :  1e c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 0. Instruction: 00000315. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010ac
 >> Updated                     : 0x00000000800010b0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  12 08 d7 e7          	: bfi r0, r2, #0x10, #8
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  11 08 d7 e7          	: bfi r0, r1, #0x10, #8
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  17 08 d7 e7          	: bfi r0, r7, #0x10, #8
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  1b 08 d7 e7          	: bfi r0, fp, #0x10, #8
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  03 08 d7 e7          	: ldrb r0, [r7, r3, lsl #16]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 315.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  33 08 d7 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 315.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  53 08 d7 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 315.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  93 08 d7 e7          	: bfi r0, r3, #0x11, #7
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  13 09 d7 e7          	: bfi r0, r3, #0x12, #6
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  13 0a d7 e7          	: bfi r0, r3, #0x14, #4
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  13 0c d7 e7          	: bfi r0, r3, #0x17, #1
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  13 00 d7 e7          	: bfi r0, r3, #0, #0x18
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  13 18 d7 e7          	: bfi r1, r3, #0x10, #8
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  13 28 d7 e7          	: bfi r2, r3, #0x10, #8
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  13 48 d7 e7          	: bfi r4, r3, #0x10, #8
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ac. Hit: 1. Lifespan: 2. Instruction: 00000315. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 08 d7 e7          	: bfi r0, r3, #0x10, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  13 88 d7 e7          	: bfi r8, r3, #0x10, #8
 >> Lifespan countdown: 2. (0x800010b0)
 >> Lifespan countdown: 1. (0x800010b4)
 >> Reverting instruction          :  13 08 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 0. Instruction: 00000321. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010c4
 >> Updated                     : 0x00000000800010c8
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 a0 e1          	: mov r0, r5
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 a0 e1          	: mov r0, r6
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 a0 e1          	: mov r0, r0
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 a0 e1          	: mov r0, ip
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000088, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 a0 e1          	: lsl r0, r4, r0
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 a0 e1          	: lsr r0, r4, #0x20
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 a0 e1          	: asr r0, r4, #0x20
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000007, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 a0 e1          	: lsl r0, r4, #1
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000021fec8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 a0 e1          	: lsl r0, r4, #2
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000043fd88, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 a0 e1          	: lsl r0, r4, #4
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000010ff608, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 a0 e1          	: lsl r0, r4, #8
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff6008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 a0 e1          	: lsl r0, r4, #0x10
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff600008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 a0 e1          	: mov r1, r4
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 a0 e1          	: mov r2, r4
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 a0 e1          	: mov r4, r4
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c4. Hit: 1. Lifespan: 2. Instruction: 00000321. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 a0 e1          	: mov r8, r4
 >> Lifespan countdown: 2. (0x800010c8)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 0. Instruction: 00000330. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004bc
 >> Updated                     : 0x00000000800004c0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x1
 >> Updated instruction            :  6b 07 4d e3          	: movt r0, #0xd76b
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x2
 >> Updated instruction            :  68 07 4d e3          	: movt r0, #0xd768
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x4
 >> Updated instruction            :  6e 07 4d e3          	: movt r0, #0xd76e
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x8
 >> Updated instruction            :  62 07 4d e3          	: movt r0, #0xd762
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x10
 >> Updated instruction            :  7a 07 4d e3          	: movt r0, #0xd77a
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x20
 >> Updated instruction            :  4a 07 4d e3          	: movt r0, #0xd74a
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x40
 >> Updated instruction            :  2a 07 4d e3          	: movt r0, #0xd72a
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x80
 >> Updated instruction            :  ea 07 4d e3          	: movt r0, #0xd7ea
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x100
 >> Updated instruction            :  6a 06 4d e3          	: movt r0, #0xd66a
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x200
 >> Updated instruction            :  6a 05 4d e3          	: movt r0, #0xd56a
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x400
 >> Updated instruction            :  6a 03 4d e3          	: movt r0, #0xd36a
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x800
 >> Updated instruction            :  6a 0f 4d e3          	: movt r0, #0xdf6a
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x1000
 >> Updated instruction            :  6a 17 4d e3          	: movt r1, #0xd76a
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000d76aff78, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x2000
 >> Updated instruction            :  6a 27 4d e3          	: movt r2, #0xd76a
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x4000
 >> Updated instruction            :  6a 47 4d e3          	: movt r4, #0xd76a
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004bc. Hit: 1. Lifespan: 2. Instruction: 00000330. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a 07 4d e3          	: movt r0, #0xd76a
 >> Mask                           :  0x8000
 >> Updated instruction            :  6a 87 4d e3          	: movt r8, #0xd76a
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  6a 07 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 0. Instruction: 00000338. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004dc
 >> Updated                     : 0x00000000800004e0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x1
 >> Updated instruction            :  41 c0 0b e5          	: str ip, [fp, #-0x41]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x2
 >> Updated instruction            :  42 c0 0b e5          	: str ip, [fp, #-0x42]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x4
 >> Updated instruction            :  44 c0 0b e5          	: str ip, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x8
 >> Updated instruction            :  48 c0 0b e5          	: str ip, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x10
 >> Updated instruction            :  50 c0 0b e5          	: str ip, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x20
 >> Updated instruction            :  60 c0 0b e5          	: str ip, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x40
 >> Updated instruction            :  00 c0 0b e5          	: str ip, [fp, #-0]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >!  Erm -  fetching from unmapped memory, address: 0x98badcfe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x80
 >> Updated instruction            :  c0 c0 0b e5          	: str ip, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x100
 >> Updated instruction            :  40 c1 0b e5          	: str ip, [fp, #-0x140]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x200
 >> Updated instruction            :  40 c2 0b e5          	: str ip, [fp, #-0x240]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x400
 >> Updated instruction            :  40 c4 0b e5          	: str ip, [fp, #-0x440]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x800
 >> Updated instruction            :  40 c8 0b e5          	: str ip, [fp, #-0x840]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x1000
 >> Updated instruction            :  40 d0 0b e5          	: str sp, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x2000
 >> Updated instruction            :  40 e0 0b e5          	: str lr, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x4000
 >> Updated instruction            :  40 80 0b e5          	: str r8, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004dc. Hit: 1. Lifespan: 2. Instruction: 00000338. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 0b e5          	: str ip, [fp, #-0x40]
 >> Mask                           :  0x8000
 >> Updated instruction            :  40 40 0b e5          	: str r4, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x800004e0)
 >> Lifespan countdown: 1. (0x800004e4)
 >> Reverting instruction          :  40 c0 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 0. Instruction: 00000344. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004f4
 >> Updated                     : 0x00000000800004f8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x1
 >> Updated instruction            :  ef 0e 0c e3          	: movw r0, #0xceef
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x2
 >> Updated instruction            :  ec 0e 0c e3          	: movw r0, #0xceec
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x4
 >> Updated instruction            :  ea 0e 0c e3          	: movw r0, #0xceea
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x8
 >> Updated instruction            :  e6 0e 0c e3          	: movw r0, #0xcee6
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x10
 >> Updated instruction            :  fe 0e 0c e3          	: movw r0, #0xcefe
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x20
 >> Updated instruction            :  ce 0e 0c e3          	: movw r0, #0xcece
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x40
 >> Updated instruction            :  ae 0e 0c e3          	: movw r0, #0xceae
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x80
 >> Updated instruction            :  6e 0e 0c e3          	: movw r0, #0xce6e
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x100
 >> Updated instruction            :  ee 0f 0c e3          	: movw r0, #0xcfee
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x200
 >> Updated instruction            :  ee 0c 0c e3          	: movw r0, #0xccee
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x400
 >> Updated instruction            :  ee 0a 0c e3          	: movw r0, #0xcaee
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x800
 >> Updated instruction            :  ee 06 0c e3          	: movw r0, #0xc6ee
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x1000
 >> Updated instruction            :  ee 1e 0c e3          	: movw r1, #0xceee
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000ceee, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x2000
 >> Updated instruction            :  ee 2e 0c e3          	: movw r2, #0xceee
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x4000
 >> Updated instruction            :  ee 4e 0c e3          	: movw r4, #0xceee
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f4. Hit: 1. Lifespan: 2. Instruction: 00000344. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee 0e 0c e3          	: movw r0, #0xceee
 >> Mask                           :  0x8000
 >> Updated instruction            :  ee 8e 0c e3          	: movw r8, #0xceee
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  ee 0e 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 0. Instruction: 00000351. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000510
 >> Updated                     : 0x0000000080000514
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x1
 >> Updated instruction            :  81 30 0b e5          	: str r3, [fp, #-0x81]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x2
 >> Updated instruction            :  82 30 0b e5          	: str r3, [fp, #-0x82]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x4
 >> Updated instruction            :  84 30 0b e5          	: str r3, [fp, #-0x84]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x8
 >> Updated instruction            :  88 30 0b e5          	: str r3, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x10
 >> Updated instruction            :  90 30 0b e5          	: str r3, [fp, #-0x90]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x20
 >> Updated instruction            :  a0 30 0b e5          	: str r3, [fp, #-0xa0]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x40
 >> Updated instruction            :  c0 30 0b e5          	: str r3, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x80
 >> Updated instruction            :  00 30 0b e5          	: str r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >!  Erm -  fetching from unmapped memory, address: 0x4787c62a, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x100
 >> Updated instruction            :  80 31 0b e5          	: str r3, [fp, #-0x180]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x200
 >> Updated instruction            :  80 32 0b e5          	: str r3, [fp, #-0x280]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x400
 >> Updated instruction            :  80 34 0b e5          	: str r3, [fp, #-0x480]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x800
 >> Updated instruction            :  80 38 0b e5          	: str r3, [fp, #-0x880]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x1000
 >> Updated instruction            :  80 20 0b e5          	: str r2, [fp, #-0x80]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x2000
 >> Updated instruction            :  80 10 0b e5          	: str r1, [fp, #-0x80]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x4000
 >> Updated instruction            :  80 70 0b e5          	: str r7, [fp, #-0x80]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000510. Hit: 1. Lifespan: 2. Instruction: 00000351. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 30 0b e5          	: str r3, [fp, #-0x80]
 >> Mask                           :  0x8000
 >> Updated instruction            :  80 b0 0b e5          	: str fp, [fp, #-0x80]
 >> Lifespan countdown: 2. (0x80000514)
 >> Lifespan countdown: 1. (0x80000518)
 >> Reverting instruction          :  80 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 0. Instruction: 00000360. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000534
 >> Updated                     : 0x0000000080000538
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x1
 >> Updated instruction            :  8d 00 0b e5          	: str r0, [fp, #-0x8d]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x2
 >> Updated instruction            :  8e 00 0b e5          	: str r0, [fp, #-0x8e]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x4
 >> Updated instruction            :  88 00 0b e5          	: str r0, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x8
 >> Updated instruction            :  84 00 0b e5          	: str r0, [fp, #-0x84]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x10
 >> Updated instruction            :  9c 00 0b e5          	: str r0, [fp, #-0x9c]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x20
 >> Updated instruction            :  ac 00 0b e5          	: str r0, [fp, #-0xac]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x40
 >> Updated instruction            :  cc 00 0b e5          	: str r0, [fp, #-0xcc]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x80
 >> Updated instruction            :  0c 00 0b e5          	: str r0, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x100
 >> Updated instruction            :  8c 01 0b e5          	: str r0, [fp, #-0x18c]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x200
 >> Updated instruction            :  8c 02 0b e5          	: str r0, [fp, #-0x28c]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x400
 >> Updated instruction            :  8c 04 0b e5          	: str r0, [fp, #-0x48c]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x800
 >> Updated instruction            :  8c 08 0b e5          	: str r0, [fp, #-0x88c]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  8c 10 0b e5          	: str r1, [fp, #-0x8c]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  8c 20 0b e5          	: str r2, [fp, #-0x8c]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  8c 40 0b e5          	: str r4, [fp, #-0x8c]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000534. Hit: 1. Lifespan: 2. Instruction: 00000360. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8c 00 0b e5          	: str r0, [fp, #-0x8c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  8c 80 0b e5          	: str r8, [fp, #-0x8c]
 >> Lifespan countdown: 2. (0x80000538)
 >> Lifespan countdown: 1. (0x8000053c)
 >> Reverting instruction          :  8c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 0. Instruction: 00000367. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000550
 >> Updated                     : 0x0000000080000554
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x1
 >> Updated instruction            :  45 30 1b e5          	: ldr r3, [fp, #-0x45]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x2
 >> Updated instruction            :  46 30 1b e5          	: ldr r3, [fp, #-0x46]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x4
 >> Updated instruction            :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x8
 >> Updated instruction            :  4c 30 1b e5          	: ldr r3, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x10
 >> Updated instruction            :  54 30 1b e5          	: ldr r3, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x20
 >> Updated instruction            :  64 30 1b e5          	: ldr r3, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x40
 >> Updated instruction            :  04 30 1b e5          	: ldr r3, [fp, #-4]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x80
 >> Updated instruction            :  c4 30 1b e5          	: ldr r3, [fp, #-0xc4]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x100
 >> Updated instruction            :  44 31 1b e5          	: ldr r3, [fp, #-0x144]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x200
 >> Updated instruction            :  44 32 1b e5          	: ldr r3, [fp, #-0x244]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x400
 >> Updated instruction            :  44 34 1b e5          	: ldr r3, [fp, #-0x444]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x800
 >> Updated instruction            :  44 38 1b e5          	: ldr r3, [fp, #-0x844]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x1000
 >> Updated instruction            :  44 20 1b e5          	: ldr r2, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x2000
 >> Updated instruction            :  44 10 1b e5          	: ldr r1, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x4000
 >> Updated instruction            :  44 70 1b e5          	: ldr r7, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010325476, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000550. Hit: 1. Lifespan: 2. Instruction: 00000367. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x8000
 >> Updated instruction            :  44 b0 1b e5          	: ldr fp, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000554)
 >> Lifespan countdown: 1. (0x80000558)
 >> Reverting instruction          :  44 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010325436, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 369.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 0. Instruction: 00000374. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000056c
 >> Updated                     : 0x0000000080000570
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x1
 >> Updated instruction            :  71 40 1b e5          	: ldr r4, [fp, #-0x71]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x2
 >> Updated instruction            :  72 40 1b e5          	: ldr r4, [fp, #-0x72]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x4
 >> Updated instruction            :  74 40 1b e5          	: ldr r4, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x8
 >> Updated instruction            :  78 40 1b e5          	: ldr r4, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x10
 >> Updated instruction            :  60 40 1b e5          	: ldr r4, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x20
 >> Updated instruction            :  50 40 1b e5          	: ldr r4, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x40
 >> Updated instruction            :  30 40 1b e5          	: ldr r4, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x80
 >> Updated instruction            :  f0 40 1b e5          	: ldr r4, [fp, #-0xf0]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x100
 >> Updated instruction            :  70 41 1b e5          	: ldr r4, [fp, #-0x170]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x200
 >> Updated instruction            :  70 42 1b e5          	: ldr r4, [fp, #-0x270]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x400
 >> Updated instruction            :  70 44 1b e5          	: ldr r4, [fp, #-0x470]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x800
 >> Updated instruction            :  70 48 1b e5          	: ldr r4, [fp, #-0x870]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x1000
 >> Updated instruction            :  70 50 1b e5          	: ldr r5, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x2000
 >> Updated instruction            :  70 60 1b e5          	: ldr r6, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x4000
 >> Updated instruction            :  70 00 1b e5          	: ldr r0, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000056c. Hit: 1. Lifespan: 2. Instruction: 00000374. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 40 1b e5          	: ldr r4, [fp, #-0x70]
 >> Mask                           :  0x8000
 >> Updated instruction            :  70 c0 1b e5          	: ldr ip, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000570)
 >> Lifespan countdown: 1. (0x80000574)
 >> Reverting instruction          :  70 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 0. Instruction: 00000381. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000588
 >> Updated                     : 0x000000008000058c
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xed879102, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x1
 >> Updated instruction            :  2d 10 1b e5          	: ldr r1, [fp, #-0x2d]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff6058, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x2
 >> Updated instruction            :  2e 10 1b e5          	: ldr r1, [fp, #-0x2e]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff600058, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x4
 >> Updated instruction            :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x8
 >> Updated instruction            :  24 10 1b e5          	: ldr r1, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x10
 >> Updated instruction            :  3c 10 1b e5          	: ldr r1, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xefcdabe1, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x20
 >> Updated instruction            :  0c 10 1b e5          	: ldr r1, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x40
 >> Updated instruction            :  6c 10 1b e5          	: ldr r1, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x98, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x80
 >> Updated instruction            :  ac 10 1b e5          	: ldr r1, [fp, #-0xac]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x100
 >> Updated instruction            :  2c 11 1b e5          	: ldr r1, [fp, #-0x12c]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x200
 >> Updated instruction            :  2c 12 1b e5          	: ldr r1, [fp, #-0x22c]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x400
 >> Updated instruction            :  2c 14 1b e5          	: ldr r1, [fp, #-0x42c]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x800
 >> Updated instruction            :  2c 18 1b e5          	: ldr r1, [fp, #-0x82c]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xed879102, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  2c 30 1b e5          	: ldr r3, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xed879102, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  2c 50 1b e5          	: ldr r5, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xed879102, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000588. Hit: 1. Lifespan: 2. Instruction: 00000381. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x8000058c)
 >> Lifespan countdown: 1. (0x80000590)
 >> Reverting instruction          :  2c 10 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xed879102, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 0. Instruction: 00000387. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005a0
 >> Updated                     : 0x00000000800005a4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x1
 >> Updated instruction            :  ed cc 82 e0          	: add ip, r2, sp, ror #25
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x2
 >> Updated instruction            :  ee cc 82 e0          	: add ip, r2, lr, ror #25
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x4
 >> Updated instruction            :  e8 cc 82 e0          	: add ip, r2, r8, ror #25
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x8
 >> Updated instruction            :  e4 cc 82 e0          	: add ip, r2, r4, ror #25
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x10
 >> Updated instruction            :  fc cc 82 e0          	: strd ip, sp, [r2], ip
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xefcdab89, value: 0xc4f23521!! Count 388 Skipping to end.
 >> Run result: Fault errored program - last instruction: 387.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x20
 >> Updated instruction            :  cc cc 82 e0          	: add ip, r2, ip, asr #25
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x40
 >> Updated instruction            :  ac cc 82 e0          	: add ip, r2, ip, lsr #25
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x80
 >> Updated instruction            :  6c cc 82 e0          	: add ip, r2, ip, ror #24
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x100
 >> Updated instruction            :  ec cd 82 e0          	: add ip, r2, ip, ror #27
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x200
 >> Updated instruction            :  ec ce 82 e0          	: add ip, r2, ip, ror #29
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x400
 >> Updated instruction            :  ec c8 82 e0          	: add ip, r2, ip, ror #17
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x800
 >> Updated instruction            :  ec c4 82 e0          	: add ip, r2, ip, ror #9
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x1000
 >> Updated instruction            :  ec dc 82 e0          	: add sp, r2, ip, ror #25
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x2000
 >> Updated instruction            :  ec ec 82 e0          	: add lr, r2, ip, ror #25
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x4000
 >> Updated instruction            :  ec 8c 82 e0          	: add r8, r2, ip, ror #25
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000068e83c77, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005a0. Hit: 1. Lifespan: 2. Instruction: 00000387. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cc 82 e0          	: add ip, r2, ip, ror #25
 >> Mask                           :  0x8000
 >> Updated instruction            :  ec 4c 82 e0          	: add r4, r2, ip, ror #25
 >> Lifespan countdown: 2. (0x800005a4)
 >> Lifespan countdown: 1. (0x800005a8)
 >> Reverting instruction          :  ec cc 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 0. Instruction: 00000396. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005c4
 >> Updated                     : 0x00000000800005c8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x1
 >> Updated instruction            :  5d 50 81 e5          	: str r5, [r1, #0x5d]
 >> Lifespan countdown: 2. (0x800005c8)
 >> Lifespan countdown: 1. (0x800005cc)
 >> Reverting instruction          :  5c 50 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x2
 >> Updated instruction            :  5e 50 81 e5          	: str r5, [r1, #0x5e]
 >> Lifespan countdown: 2. (0x800005c8)
 >> Lifespan countdown: 1. (0x800005cc)
 >> Reverting instruction          :  5c 50 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x4
 >> Updated instruction            :  58 50 81 e5          	: str r5, [r1, #0x58]
 >> Lifespan countdown: 2. (0x800005c8)
 >> Lifespan countdown: 1. (0x800005cc)
 >> Reverting instruction          :  5c 50 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x8
 >> Updated instruction            :  54 50 81 e5          	: str r5, [r1, #0x54]
 >> Lifespan countdown: 2. (0x800005c8)
 >> Lifespan countdown: 1. (0x800005cc)
 >> Reverting instruction          :  5c 50 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x10
 >> Updated instruction            :  4c 50 81 e5          	: str r5, [r1, #0x4c]
 >> Lifespan countdown: 2. (0x800005c8)
 >> Lifespan countdown: 1. (0x800005cc)
 >> Reverting instruction          :  5c 50 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x20
 >> Updated instruction            :  7c 50 81 e5          	: str r5, [r1, #0x7c]
 >> Lifespan countdown: 2. (0x800005c8)
 >> Lifespan countdown: 1. (0x800005cc)
 >> Reverting instruction          :  5c 50 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x40
 >> Updated instruction            :  1c 50 81 e5          	: str r5, [r1, #0x1c]
 >> Lifespan countdown: 2. (0x800005c8)
 >> Lifespan countdown: 1. (0x800005cc)
 >> Reverting instruction          :  5c 50 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x80
 >> Updated instruction            :  dc 50 81 e5          	: str r5, [r1, #0xdc]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011003c, value: 0xaa49989b!! Count 397 Skipping to end.
 >> Run result: Fault errored program - last instruction: 396.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x100
 >> Updated instruction            :  5c 51 81 e5          	: str r5, [r1, #0x15c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100bc, value: 0xaa49989b!! Count 397 Skipping to end.
 >> Run result: Fault errored program - last instruction: 396.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x200
 >> Updated instruction            :  5c 52 81 e5          	: str r5, [r1, #0x25c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101bc, value: 0xaa49989b!! Count 397 Skipping to end.
 >> Run result: Fault errored program - last instruction: 396.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x400
 >> Updated instruction            :  5c 54 81 e5          	: str r5, [r1, #0x45c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103bc, value: 0xaa49989b!! Count 397 Skipping to end.
 >> Run result: Fault errored program - last instruction: 396.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x800
 >> Updated instruction            :  5c 58 81 e5          	: str r5, [r1, #0x85c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107bc, value: 0xaa49989b!! Count 397 Skipping to end.
 >> Run result: Fault errored program - last instruction: 396.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  5c 40 81 e5          	: str r4, [r1, #0x5c]
 >> Lifespan countdown: 2. (0x800005c8)
 >> Lifespan countdown: 1. (0x800005cc)
 >> Reverting instruction          :  5c 50 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  5c 70 81 e5          	: str r7, [r1, #0x5c]
 >> Lifespan countdown: 2. (0x800005c8)
 >> Lifespan countdown: 1. (0x800005cc)
 >> Reverting instruction          :  5c 50 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  5c 10 81 e5          	: str r1, [r1, #0x5c]
 >> Lifespan countdown: 2. (0x800005c8)
 >> Lifespan countdown: 1. (0x800005cc)
 >> Reverting instruction          :  5c 50 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c4. Hit: 1. Lifespan: 2. Instruction: 00000396. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 50 81 e5          	: str r5, [r1, #0x5c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  5c d0 81 e5          	: str sp, [r1, #0x5c]
 >> Lifespan countdown: 2. (0x800005c8)
 >> Lifespan countdown: 1. (0x800005cc)
 >> Reverting instruction          :  5c 50 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 0. Instruction: 00000403. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005e0
 >> Updated                     : 0x00000000800005e4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x1
 >> Updated instruction            :  4d 50 0b e5          	: str r5, [fp, #-0x4d]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x2
 >> Updated instruction            :  4e 50 0b e5          	: str r5, [fp, #-0x4e]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x4
 >> Updated instruction            :  48 50 0b e5          	: str r5, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x8
 >> Updated instruction            :  44 50 0b e5          	: str r5, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x10
 >> Updated instruction            :  5c 50 0b e5          	: str r5, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x20
 >> Updated instruction            :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x40
 >> Updated instruction            :  0c 50 0b e5          	: str r5, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x80
 >> Updated instruction            :  cc 50 0b e5          	: str r5, [fp, #-0xcc]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x100
 >> Updated instruction            :  4c 51 0b e5          	: str r5, [fp, #-0x14c]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x200
 >> Updated instruction            :  4c 52 0b e5          	: str r5, [fp, #-0x24c]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x400
 >> Updated instruction            :  4c 54 0b e5          	: str r5, [fp, #-0x44c]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x800
 >> Updated instruction            :  4c 58 0b e5          	: str r5, [fp, #-0x84c]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  4c 40 0b e5          	: str r4, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  4c 70 0b e5          	: str r7, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  4c 10 0b e5          	: str r1, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e0. Hit: 1. Lifespan: 2. Instruction: 00000403. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  4c d0 0b e5          	: str sp, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x800005e4)
 >> Lifespan countdown: 1. (0x800005e8)
 >> Reverting instruction          :  4c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 0. Instruction: 00000411. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000600
 >> Updated                     : 0x0000000080000604
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x1
 >> Updated instruction            :  61 60 81 e5          	: str r6, [r1, #0x61]
 >> Lifespan countdown: 2. (0x80000604)
 >> Lifespan countdown: 1. (0x80000608)
 >> Reverting instruction          :  60 60 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x2
 >> Updated instruction            :  62 60 81 e5          	: str r6, [r1, #0x62]
 >> Lifespan countdown: 2. (0x80000604)
 >> Lifespan countdown: 1. (0x80000608)
 >> Reverting instruction          :  60 60 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x4
 >> Updated instruction            :  64 60 81 e5          	: str r6, [r1, #0x64]
 >> Lifespan countdown: 2. (0x80000604)
 >> Lifespan countdown: 1. (0x80000608)
 >> Reverting instruction          :  60 60 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x8
 >> Updated instruction            :  68 60 81 e5          	: str r6, [r1, #0x68]
 >> Lifespan countdown: 2. (0x80000604)
 >> Lifespan countdown: 1. (0x80000608)
 >> Reverting instruction          :  60 60 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x10
 >> Updated instruction            :  70 60 81 e5          	: str r6, [r1, #0x70]
 >> Lifespan countdown: 2. (0x80000604)
 >> Lifespan countdown: 1. (0x80000608)
 >> Reverting instruction          :  60 60 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x20
 >> Updated instruction            :  40 60 81 e5          	: str r6, [r1, #0x40]
 >> Lifespan countdown: 2. (0x80000604)
 >> Lifespan countdown: 1. (0x80000608)
 >> Reverting instruction          :  60 60 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x40
 >> Updated instruction            :  20 60 81 e5          	: str r6, [r1, #0x20]
 >> Lifespan countdown: 2. (0x80000604)
 >> Lifespan countdown: 1. (0x80000608)
 >> Reverting instruction          :  60 60 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x80
 >> Updated instruction            :  e0 60 81 e5          	: str r6, [r1, #0xe0]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110040, value: 0x0!! Count 412 Skipping to end.
 >> Run result: Fault errored program - last instruction: 411.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x100
 >> Updated instruction            :  60 61 81 e5          	: str r6, [r1, #0x160]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100c0, value: 0x0!! Count 412 Skipping to end.
 >> Run result: Fault errored program - last instruction: 411.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x200
 >> Updated instruction            :  60 62 81 e5          	: str r6, [r1, #0x260]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101c0, value: 0x0!! Count 412 Skipping to end.
 >> Run result: Fault errored program - last instruction: 411.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x400
 >> Updated instruction            :  60 64 81 e5          	: str r6, [r1, #0x460]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103c0, value: 0x0!! Count 412 Skipping to end.
 >> Run result: Fault errored program - last instruction: 411.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x800
 >> Updated instruction            :  60 68 81 e5          	: str r6, [r1, #0x860]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107c0, value: 0x0!! Count 412 Skipping to end.
 >> Run result: Fault errored program - last instruction: 411.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x1000
 >> Updated instruction            :  60 70 81 e5          	: str r7, [r1, #0x60]
 >> Lifespan countdown: 2. (0x80000604)
 >> Lifespan countdown: 1. (0x80000608)
 >> Reverting instruction          :  60 60 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x2000
 >> Updated instruction            :  60 40 81 e5          	: str r4, [r1, #0x60]
 >> Lifespan countdown: 2. (0x80000604)
 >> Lifespan countdown: 1. (0x80000608)
 >> Reverting instruction          :  60 60 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x4000
 >> Updated instruction            :  60 20 81 e5          	: str r2, [r1, #0x60]
 >> Lifespan countdown: 2. (0x80000604)
 >> Lifespan countdown: 1. (0x80000608)
 >> Reverting instruction          :  60 60 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000600. Hit: 1. Lifespan: 2. Instruction: 00000411. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 60 81 e5          	: str r6, [r1, #0x60]
 >> Mask                           :  0x8000
 >> Updated instruction            :  60 e0 81 e5          	: str lr, [r1, #0x60]
 >> Lifespan countdown: 2. (0x80000604)
 >> Lifespan countdown: 1. (0x80000608)
 >> Reverting instruction          :  60 60 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 0. Instruction: 00000416. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000614
 >> Updated                     : 0x0000000080000618
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 60 2c e0          	: eor r6, ip, r1
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 60 2c e0          	: eor r6, ip, r2
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 60 2c e0          	: eor r6, ip, r4
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 60 2c e0          	: eor r6, ip, r8
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 60 2c e0          	: eor r6, ip, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 60 2c e0          	: eor r6, ip, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 60 2c e0          	: eor r6, ip, r0, asr #32
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 60 2c e0          	: eor r6, ip, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 61 2c e0          	: eor r6, ip, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 62 2c e0          	: eor r6, ip, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 64 2c e0          	: eor r6, ip, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 68 2c e0          	: eor r6, ip, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 70 2c e0          	: eor r7, ip, r0
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 40 2c e0          	: eor r4, ip, r0
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 20 2c e0          	: eor r2, ip, r0
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000614. Hit: 1. Lifespan: 2. Instruction: 00000416. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 2c e0          	: eor r6, ip, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 e0 2c e0          	: eor lr, ip, r0
 >> Lifespan countdown: 2. (0x80000618)
 >> Lifespan countdown: 1. (0x8000061c)
 >> Reverting instruction          :  00 60 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 0. Instruction: 00000424. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000634
 >> Updated                     : 0x0000000080000638
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xbcdb4e41, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 50 a0 e1          	: mov r5, r6
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x810986c, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 50 a0 e1          	: mov r5, r5
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xbcdb4e41, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 50 a0 e1          	: mov r5, r3
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x68, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 50 a0 e1          	: mov r5, pc
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 50 a0 e1          	: lsl r5, r7, r0
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x68, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 50 a0 e1          	: lsr r5, r7, #0x20
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x68, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 50 a0 e1          	: asr r5, r7, #0x20
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x67, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 50 a0 e1          	: lsl r5, r7, #1
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21ff28, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 51 a0 e1          	: lsl r5, r7, #2
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x43fde8, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 52 a0 e1          	: lsl r5, r7, #4
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff668, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 54 a0 e1          	: lsl r5, r7, #8
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff6068, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 58 a0 e1          	: lsl r5, r7, #0x10
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff600068, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 40 a0 e1          	: mov r4, r7
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xbcdb4e41, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 70 a0 e1          	: mov r7, r7
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xbcdb4e41, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 10 a0 e1          	: mov r1, r7
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xbcdb4e41, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000634. Hit: 1. Lifespan: 2. Instruction: 00000424. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 a0 e1          	: mov r5, r7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 d0 a0 e1          	: mov sp, r7
 >> Lifespan countdown: 2. (0x80000638)
 >> Lifespan countdown: 1. (0x8000063c)
 >> Reverting instruction          :  07 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xbcdb4e41, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 0. Instruction: 00000430. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000064c
 >> Updated                     : 0x0000000080000650
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 e0 0e e0          	: and lr, lr, r0
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 e0 0e e0          	: and lr, lr, r3
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 e0 0e e0          	: and lr, lr, r5
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 e0 0e e0          	: and lr, lr, sb
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 e0 0e e0          	: and lr, lr, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 e0 0e e0          	: and lr, lr, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 e0 0e e0          	: and lr, lr, r1, asr #32
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 e0 0e e0          	: and lr, lr, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 e1 0e e0          	: and lr, lr, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 e2 0e e0          	: and lr, lr, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 e4 0e e0          	: and lr, lr, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 e8 0e e0          	: and lr, lr, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 f0 0e e0          	: and pc, lr, r1
 >!  Erm -  fetching from unmapped memory, address: 0x5a80, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 430.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 c0 0e e0          	: and ip, lr, r1
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 a0 0e e0          	: and sl, lr, r1
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000064c. Hit: 1. Lifespan: 2. Instruction: 00000430. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 0e e0          	: and lr, lr, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 60 0e e0          	: and r6, lr, r1
 >> Lifespan countdown: 2. (0x80000650)
 >> Lifespan countdown: 1. (0x80000654)
 >> Reverting instruction          :  01 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 0. Instruction: 00000439. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000670
 >> Updated                     : 0x0000000080000674
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x1
 >> Updated instruction            :  e9 8c 81 e0          	: add r8, r1, sb, ror #25
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x2
 >> Updated instruction            :  ea 8c 81 e0          	: add r8, r1, sl, ror #25
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x4
 >> Updated instruction            :  ec 8c 81 e0          	: add r8, r1, ip, ror #25
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x8
 >> Updated instruction            :  e0 8c 81 e0          	: add r8, r1, r0, ror #25
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x10
 >> Updated instruction            :  f8 8c 81 e0          	: strd r8, sb, [r1], r8
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2427ec3, value: 0xb01d2946!! Count 440 Skipping to end.
 >> Run result: Fault errored program - last instruction: 439.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x20
 >> Updated instruction            :  c8 8c 81 e0          	: add r8, r1, r8, asr #25
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x40
 >> Updated instruction            :  a8 8c 81 e0          	: add r8, r1, r8, lsr #25
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x80
 >> Updated instruction            :  68 8c 81 e0          	: add r8, r1, r8, ror #24
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x100
 >> Updated instruction            :  e8 8d 81 e0          	: add r8, r1, r8, ror #27
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x200
 >> Updated instruction            :  e8 8e 81 e0          	: add r8, r1, r8, ror #29
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x400
 >> Updated instruction            :  e8 88 81 e0          	: add r8, r1, r8, ror #17
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x800
 >> Updated instruction            :  e8 84 81 e0          	: add r8, r1, r8, ror #9
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x1000
 >> Updated instruction            :  e8 9c 81 e0          	: add sb, r1, r8, ror #25
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x2000
 >> Updated instruction            :  e8 ac 81 e0          	: add sl, r1, r8, ror #25
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x4000
 >> Updated instruction            :  e8 cc 81 e0          	: add ip, r1, r8, ror #25
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000670. Hit: 1. Lifespan: 2. Instruction: 00000439. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 8c 81 e0          	: add r8, r1, r8, ror #25
 >> Mask                           :  0x8000
 >> Updated instruction            :  e8 0c 81 e0          	: add r0, r1, r8, ror #25
 >> Lifespan countdown: 2. (0x80000674)
 >> Lifespan countdown: 1. (0x80000678)
 >> Reverting instruction          :  e8 8c 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 0. Instruction: 00000448. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000694
 >> Updated                     : 0x0000000080000698
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x1
 >> Updated instruction            :  19 c0 94 e5          	: ldr ip, [r4, #0x19]
 >> Lifespan countdown: 2. (0x80000698)
 >> Lifespan countdown: 1. (0x8000069c)
 >> Reverting instruction          :  18 c0 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x2
 >> Updated instruction            :  1a c0 94 e5          	: ldr ip, [r4, #0x1a]
 >> Lifespan countdown: 2. (0x80000698)
 >> Lifespan countdown: 1. (0x8000069c)
 >> Reverting instruction          :  18 c0 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x4
 >> Updated instruction            :  1c c0 94 e5          	: ldr ip, [r4, #0x1c]
 >> Lifespan countdown: 2. (0x80000698)
 >> Lifespan countdown: 1. (0x8000069c)
 >> Reverting instruction          :  18 c0 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x8
 >> Updated instruction            :  10 c0 94 e5          	: ldr ip, [r4, #0x10]
 >> Lifespan countdown: 2. (0x80000698)
 >> Lifespan countdown: 1. (0x8000069c)
 >> Reverting instruction          :  18 c0 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x10
 >> Updated instruction            :  08 c0 94 e5          	: ldr ip, [r4, #8]
 >> Lifespan countdown: 2. (0x80000698)
 >> Lifespan countdown: 1. (0x8000069c)
 >> Reverting instruction          :  18 c0 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x20
 >> Updated instruction            :  38 c0 94 e5          	: ldr ip, [r4, #0x38]
 >> Lifespan countdown: 2. (0x80000698)
 >> Lifespan countdown: 1. (0x8000069c)
 >> Reverting instruction          :  18 c0 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x40
 >> Updated instruction            :  58 c0 94 e5          	: ldr ip, [r4, #0x58]
 >> Lifespan countdown: 2. (0x80000698)
 >> Lifespan countdown: 1. (0x8000069c)
 >> Reverting instruction          :  18 c0 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x80
 >> Updated instruction            :  98 c0 94 e5          	: ldr ip, [r4, #0x98]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110010, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x100
 >> Updated instruction            :  18 c1 94 e5          	: ldr ip, [r4, #0x118]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110090, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x200
 >> Updated instruction            :  18 c2 94 e5          	: ldr ip, [r4, #0x218]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110190, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x400
 >> Updated instruction            :  18 c4 94 e5          	: ldr ip, [r4, #0x418]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110390, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x800
 >> Updated instruction            :  18 c8 94 e5          	: ldr ip, [r4, #0x818]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110790, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x1000
 >> Updated instruction            :  18 d0 94 e5          	: ldr sp, [r4, #0x18]
 >> Lifespan countdown: 2. (0x80000698)
 >> Lifespan countdown: 1. (0x8000069c)
 >> Reverting instruction          :  18 c0 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x2000
 >> Updated instruction            :  18 e0 94 e5          	: ldr lr, [r4, #0x18]
 >> Lifespan countdown: 2. (0x80000698)
 >> Lifespan countdown: 1. (0x8000069c)
 >> Reverting instruction          :  18 c0 94 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x70, value: 0x486affa7!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x4000
 >> Updated instruction            :  18 80 94 e5          	: ldr r8, [r4, #0x18]
 >> Lifespan countdown: 2. (0x80000698)
 >> Lifespan countdown: 1. (0x8000069c)
 >> Reverting instruction          :  18 c0 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000694. Hit: 1. Lifespan: 2. Instruction: 00000448. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 c0 94 e5          	: ldr ip, [r4, #0x18]
 >> Mask                           :  0x8000
 >> Updated instruction            :  18 40 94 e5          	: ldr r4, [r4, #0x18]
 >> Lifespan countdown: 2. (0x80000698)
 >> Lifespan countdown: 1. (0x8000069c)
 >> Reverting instruction          :  18 c0 94 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000001c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 0. Instruction: 00000451. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006a0
 >> Updated                     : 0x00000000800006a4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x1
 >> Updated instruction            :  67 6a 88 e0          	: add r6, r8, r7, ror #20
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x2
 >> Updated instruction            :  64 6a 88 e0          	: add r6, r8, r4, ror #20
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x4
 >> Updated instruction            :  62 6a 88 e0          	: add r6, r8, r2, ror #20
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x8
 >> Updated instruction            :  6e 6a 88 e0          	: add r6, r8, lr, ror #20
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x10
 >> Updated instruction            :  76 6a 88 e0          	: add r6, r8, r6, ror sl
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x20
 >> Updated instruction            :  46 6a 88 e0          	: add r6, r8, r6, asr #20
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x40
 >> Updated instruction            :  26 6a 88 e0          	: add r6, r8, r6, lsr #20
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x80
 >> Updated instruction            :  e6 6a 88 e0          	: add r6, r8, r6, ror #21
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x100
 >> Updated instruction            :  66 6b 88 e0          	: add r6, r8, r6, ror #22
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x200
 >> Updated instruction            :  66 68 88 e0          	: add r6, r8, r6, ror #16
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x400
 >> Updated instruction            :  66 6e 88 e0          	: add r6, r8, r6, ror #28
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x800
 >> Updated instruction            :  66 62 88 e0          	: add r6, r8, r6, ror #4
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x1000
 >> Updated instruction            :  66 7a 88 e0          	: add r7, r8, r6, ror #20
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x2000
 >> Updated instruction            :  66 4a 88 e0          	: add r4, r8, r6, ror #20
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c5970051, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x4000
 >> Updated instruction            :  66 2a 88 e0          	: add r2, r8, r6, ror #20
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a0. Hit: 1. Lifespan: 2. Instruction: 00000451. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  66 6a 88 e0          	: add r6, r8, r6, ror #20
 >> Mask                           :  0x8000
 >> Updated instruction            :  66 ea 88 e0          	: add lr, r8, r6, ror #20
 >> Lifespan countdown: 2. (0x800006a4)
 >> Lifespan countdown: 1. (0x800006a8)
 >> Reverting instruction          :  66 6a 88 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc59700a5, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 0. Instruction: 00000462. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006cc
 >> Updated                     : 0x00000000800006d0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 20 28 e0          	: eor r2, r8, r7
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 20 28 e0          	: eor r2, r8, r4
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 20 28 e0          	: eor r2, r8, r2
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 20 28 e0          	: eor r2, r8, lr
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 20 28 e0          	: eor r2, r8, r6, lsl r0
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 20 28 e0          	: eor r2, r8, r6, lsr #32
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 20 28 e0          	: eor r2, r8, r6, asr #32
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 20 28 e0          	: eor r2, r8, r6, lsl #1
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 21 28 e0          	: eor r2, r8, r6, lsl #2
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 22 28 e0          	: eor r2, r8, r6, lsl #4
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 24 28 e0          	: eor r2, r8, r6, lsl #8
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 28 28 e0          	: eor r2, r8, r6, lsl #16
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 30 28 e0          	: eor r3, r8, r6
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 00 28 e0          	: eor r0, r8, r6
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xd54022a2, value: 0x0!! Count 473 Skipping to end.
 >> Run result: Fault errored program - last instruction: 472.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 60 28 e0          	: eor r6, r8, r6
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006cc. Hit: 1. Lifespan: 2. Instruction: 00000462. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 20 28 e0          	: eor r2, r8, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 a0 28 e0          	: eor sl, r8, r6
 >> Lifespan countdown: 2. (0x800006d0)
 >> Lifespan countdown: 1. (0x800006d4)
 >> Reverting instruction          :  06 20 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 0. Instruction: 00000471. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006f0
 >> Updated                     : 0x00000000800006f4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d e0 84 e0          	: add lr, r4, sp
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e e0 84 e0          	: add lr, r4, lr
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 e0 84 e0          	: add lr, r4, r8
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 e0 84 e0          	: add lr, r4, r4
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c e0 84 e0          	: add lr, r4, ip, lsl r0
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c e0 84 e0          	: add lr, r4, ip, lsr #32
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c e0 84 e0          	: add lr, r4, ip, asr #32
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c e0 84 e0          	: add lr, r4, ip, lsl #1
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c e1 84 e0          	: add lr, r4, ip, lsl #2
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c e2 84 e0          	: add lr, r4, ip, lsl #4
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c e4 84 e0          	: add lr, r4, ip, lsl #8
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c e8 84 e0          	: add lr, r4, ip, lsl #16
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c f0 84 e0          	: add pc, r4, ip
 >!  Erm -  fetching from unmapped memory, address: 0xfd469500, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 471.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c c0 84 e0          	: add ip, r4, ip
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c a0 84 e0          	: add sl, r4, ip
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f0. Hit: 1. Lifespan: 2. Instruction: 00000471. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 84 e0          	: add lr, r4, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 60 84 e0          	: add r6, r4, ip
 >> Lifespan countdown: 2. (0x800006f4)
 >> Lifespan countdown: 1. (0x800006f8)
 >> Reverting instruction          :  0c e0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 0. Instruction: 00000481. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000718
 >> Updated                     : 0x000000008000071c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 20 02 e0          	: and r2, r2, pc
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 20 02 e0          	: and r2, r2, ip
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 20 02 e0          	: and r2, r2, sl
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 20 02 e0          	: and r2, r2, r6
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 20 02 e0          	: and r2, r2, lr, lsl r0
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 20 02 e0          	: and r2, r2, lr, lsr #32
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 20 02 e0          	: and r2, r2, lr, asr #32
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 20 02 e0          	: and r2, r2, lr, lsl #1
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 21 02 e0          	: and r2, r2, lr, lsl #2
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 22 02 e0          	: and r2, r2, lr, lsl #4
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 24 02 e0          	: and r2, r2, lr, lsl #8
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 28 02 e0          	: and r2, r2, lr, lsl #16
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 30 02 e0          	: and r3, r2, lr
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 00 02 e0          	: and r0, r2, lr
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x200e83c, value: 0x0!! Count 493 Skipping to end.
 >> Run result: Fault errored program - last instruction: 492.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 60 02 e0          	: and r6, r2, lr
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000718. Hit: 1. Lifespan: 2. Instruction: 00000481. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 02 e0          	: and r2, r2, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e a0 02 e0          	: and sl, r2, lr
 >> Lifespan countdown: 2. (0x8000071c)
 >> Lifespan countdown: 1. (0x80000720)
 >> Reverting instruction          :  0e 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 0. Instruction: 00000488. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000734
 >> Updated                     : 0x0000000080000738
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 c0 8c e0          	: add ip, ip, sb
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a c0 8c e0          	: add ip, ip, sl
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c c0 8c e0          	: add ip, ip, ip
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 c0 8c e0          	: add ip, ip, r0
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 c0 8c e0          	: add ip, ip, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 c0 8c e0          	: add ip, ip, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 c0 8c e0          	: add ip, ip, r8, asr #32
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 c0 8c e0          	: add ip, ip, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 c1 8c e0          	: add ip, ip, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 c2 8c e0          	: add ip, ip, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 c4 8c e0          	: add ip, ip, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 c8 8c e0          	: add ip, ip, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 d0 8c e0          	: add sp, ip, r8
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 e0 8c e0          	: add lr, ip, r8
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 80 8c e0          	: add r8, ip, r8
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000734. Hit: 1. Lifespan: 2. Instruction: 00000488. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 40 8c e0          	: add r4, ip, r8
 >> Lifespan countdown: 2. (0x80000738)
 >> Lifespan countdown: 1. (0x8000073c)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 0. Instruction: 00000498. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000075c
 >> Updated                     : 0x0000000080000760
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x1
 >> Updated instruction            :  35 80 0b e5          	: str r8, [fp, #-0x35]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x2
 >> Updated instruction            :  36 80 0b e5          	: str r8, [fp, #-0x36]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x4
 >> Updated instruction            :  30 80 0b e5          	: str r8, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x8
 >> Updated instruction            :  3c 80 0b e5          	: str r8, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x10
 >> Updated instruction            :  24 80 0b e5          	: str r8, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x20
 >> Updated instruction            :  14 80 0b e5          	: str r8, [fp, #-0x14]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x40
 >> Updated instruction            :  74 80 0b e5          	: str r8, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x80
 >> Updated instruction            :  b4 80 0b e5          	: str r8, [fp, #-0xb4]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x100
 >> Updated instruction            :  34 81 0b e5          	: str r8, [fp, #-0x134]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x200
 >> Updated instruction            :  34 82 0b e5          	: str r8, [fp, #-0x234]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x400
 >> Updated instruction            :  34 84 0b e5          	: str r8, [fp, #-0x434]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x800
 >> Updated instruction            :  34 88 0b e5          	: str r8, [fp, #-0x834]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x1000
 >> Updated instruction            :  34 90 0b e5          	: str sb, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x2000
 >> Updated instruction            :  34 a0 0b e5          	: str sl, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x4000
 >> Updated instruction            :  34 c0 0b e5          	: str ip, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000075c. Hit: 1. Lifespan: 2. Instruction: 00000498. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 0b e5          	: str r8, [fp, #-0x34]
 >> Mask                           :  0x8000
 >> Updated instruction            :  34 00 0b e5          	: str r0, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000760)
 >> Lifespan countdown: 1. (0x80000764)
 >> Reverting instruction          :  34 80 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 0. Instruction: 00000505. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000778
 >> Updated                     : 0x000000008000077c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x1
 >> Updated instruction            :  29 10 1b e5          	: ldr r1, [fp, #-0x29]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff78a8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x2
 >> Updated instruction            :  2a 10 1b e5          	: ldr r1, [fp, #-0x2a]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff788038, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x4
 >> Updated instruction            :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x8
 >> Updated instruction            :  20 10 1b e5          	: ldr r1, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x10
 >> Updated instruction            :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000028, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x20
 >> Updated instruction            :  08 10 1b e5          	: ldr r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000028, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x40
 >> Updated instruction            :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000067452329, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x80
 >> Updated instruction            :  a8 10 1b e5          	: ldr r1, [fp, #-0xa8]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000028, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x100
 >> Updated instruction            :  28 11 1b e5          	: ldr r1, [fp, #-0x128]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000028, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x200
 >> Updated instruction            :  28 12 1b e5          	: ldr r1, [fp, #-0x228]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000028, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x400
 >> Updated instruction            :  28 14 1b e5          	: ldr r1, [fp, #-0x428]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000028, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x800
 >> Updated instruction            :  28 18 1b e5          	: ldr r1, [fp, #-0x828]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000028, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x1000
 >> Updated instruction            :  28 00 1b e5          	: ldr r0, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x2000
 >> Updated instruction            :  28 30 1b e5          	: ldr r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x4000
 >> Updated instruction            :  28 50 1b e5          	: ldr r5, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000778. Hit: 1. Lifespan: 2. Instruction: 00000505. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x8000
 >> Updated instruction            :  28 90 1b e5          	: ldr sb, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x8000077c)
 >> Lifespan countdown: 1. (0x80000780)
 >> Reverting instruction          :  28 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 0. Instruction: 00000513. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000798
 >> Updated                     : 0x000000008000079c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x1
 >> Updated instruction            :  4e 20 42 e2          	: sub r2, r2, #0x4e
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x2
 >> Updated instruction            :  4d 20 42 e2          	: sub r2, r2, #0x4d
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x4
 >> Updated instruction            :  4b 20 42 e2          	: sub r2, r2, #0x4b
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x8
 >> Updated instruction            :  47 20 42 e2          	: sub r2, r2, #0x47
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x10
 >> Updated instruction            :  5f 20 42 e2          	: sub r2, r2, #0x5f
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x20
 >> Updated instruction            :  6f 20 42 e2          	: sub r2, r2, #0x6f
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x40
 >> Updated instruction            :  0f 20 42 e2          	: sub r2, r2, #0xf
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x80
 >> Updated instruction            :  cf 20 42 e2          	: sub r2, r2, #0xcf
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x100
 >> Updated instruction            :  4f 21 42 e2          	: sub r2, r2, #0xc0000013
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x200
 >> Updated instruction            :  4f 22 42 e2          	: sub r2, r2, #0xf0000004
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x400
 >> Updated instruction            :  4f 24 42 e2          	: sub r2, r2, #0x4f000000
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x800
 >> Updated instruction            :  4f 28 42 e2          	: sub r2, r2, #0x4f0000
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x1000
 >> Updated instruction            :  4f 30 42 e2          	: sub r3, r2, #0x4f
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x2000
 >> Updated instruction            :  4f 00 42 e2          	: sub r0, r2, #0x4f
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x4000
 >> Updated instruction            :  4f 60 42 e2          	: sub r6, r2, #0x4f
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000798. Hit: 1. Lifespan: 2. Instruction: 00000513. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f 20 42 e2          	: sub r2, r2, #0x4f
 >> Mask                           :  0x8000
 >> Updated instruction            :  4f a0 42 e2          	: sub sl, r2, #0x4f
 >> Lifespan countdown: 2. (0x8000079c)
 >> Lifespan countdown: 1. (0x800007a0)
 >> Reverting instruction          :  4f 20 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 0. Instruction: 00000523. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007c0
 >> Updated                     : 0x00000000800007c4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x1
 >> Updated instruction            :  2d 10 91 e5          	: ldr r1, [r1, #0x2d]
 >> Lifespan countdown: 2. (0x800007c4)
 >> Lifespan countdown: 1. (0x800007c8)
 >> Reverting instruction          :  2c 10 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x2
 >> Updated instruction            :  2e 10 91 e5          	: ldr r1, [r1, #0x2e]
 >> Lifespan countdown: 2. (0x800007c4)
 >> Lifespan countdown: 1. (0x800007c8)
 >> Reverting instruction          :  2c 10 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x4
 >> Updated instruction            :  28 10 91 e5          	: ldr r1, [r1, #0x28]
 >> Lifespan countdown: 2. (0x800007c4)
 >> Lifespan countdown: 1. (0x800007c8)
 >> Reverting instruction          :  2c 10 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x8
 >> Updated instruction            :  24 10 91 e5          	: ldr r1, [r1, #0x24]
 >> Lifespan countdown: 2. (0x800007c4)
 >> Lifespan countdown: 1. (0x800007c8)
 >> Reverting instruction          :  2c 10 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x10
 >> Updated instruction            :  3c 10 91 e5          	: ldr r1, [r1, #0x3c]
 >> Lifespan countdown: 2. (0x800007c4)
 >> Lifespan countdown: 1. (0x800007c8)
 >> Reverting instruction          :  2c 10 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x20
 >> Updated instruction            :  0c 10 91 e5          	: ldr r1, [r1, #0xc]
 >> Lifespan countdown: 2. (0x800007c4)
 >> Lifespan countdown: 1. (0x800007c8)
 >> Reverting instruction          :  2c 10 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x40
 >> Updated instruction            :  6c 10 91 e5          	: ldr r1, [r1, #0x6c]
 >> Lifespan countdown: 2. (0x800007c4)
 >> Lifespan countdown: 1. (0x800007c8)
 >> Reverting instruction          :  2c 10 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x80
 >> Updated instruction            :  ac 10 91 e5          	: ldr r1, [r1, #0xac]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x100
 >> Updated instruction            :  2c 11 91 e5          	: ldr r1, [r1, #0x12c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801100a4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x200
 >> Updated instruction            :  2c 12 91 e5          	: ldr r1, [r1, #0x22c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801101a4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x400
 >> Updated instruction            :  2c 14 91 e5          	: ldr r1, [r1, #0x42c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801103a4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x800
 >> Updated instruction            :  2c 18 91 e5          	: ldr r1, [r1, #0x82c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801107a4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  2c 00 91 e5          	: ldr r0, [r1, #0x2c]
 >> Lifespan countdown: 2. (0x800007c4)
 >> Lifespan countdown: 1. (0x800007c8)
 >> Reverting instruction          :  2c 10 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  2c 30 91 e5          	: ldr r3, [r1, #0x2c]
 >> Lifespan countdown: 2. (0x800007c4)
 >> Lifespan countdown: 1. (0x800007c8)
 >> Reverting instruction          :  2c 10 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  2c 50 91 e5          	: ldr r5, [r1, #0x2c]
 >> Lifespan countdown: 2. (0x800007c4)
 >> Lifespan countdown: 1. (0x800007c8)
 >> Reverting instruction          :  2c 10 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c0. Hit: 1. Lifespan: 2. Instruction: 00000523. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 10 91 e5          	: ldr r1, [r1, #0x2c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  2c 90 91 e5          	: ldr sb, [r1, #0x2c]
 >> Lifespan countdown: 2. (0x800007c4)
 >> Lifespan countdown: 1. (0x800007c8)
 >> Reverting instruction          :  2c 10 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 0. Instruction: 00000530. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007dc
 >> Updated                     : 0x00000000800007e0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 10 81 e0          	: add r1, r1, pc
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 10 81 e0          	: add r1, r1, ip
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 10 81 e0          	: add r1, r1, sl
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 10 81 e0          	: add r1, r1, r6
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 10 81 e0          	: add r1, r1, lr, lsl r0
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 10 81 e0          	: add r1, r1, lr, lsr #32
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 10 81 e0          	: add r1, r1, lr, asr #32
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 10 81 e0          	: add r1, r1, lr, lsl #1
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 11 81 e0          	: add r1, r1, lr, lsl #2
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 12 81 e0          	: add r1, r1, lr, lsl #4
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 14 81 e0          	: add r1, r1, lr, lsl #8
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 18 81 e0          	: add r1, r1, lr, lsl #16
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 00 81 e0          	: add r0, r1, lr
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 30 81 e0          	: add r3, r1, lr
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 50 81 e0          	: add r5, r1, lr
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007dc. Hit: 1. Lifespan: 2. Instruction: 00000530. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 90 81 e0          	: add sb, r1, lr
 >> Lifespan countdown: 2. (0x800007e0)
 >> Lifespan countdown: 1. (0x800007e4)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 0. Instruction: 00000538. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007fc
 >> Updated                     : 0x0000000080000800
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x1
 >> Updated instruction            :  31 60 9e e5          	: ldr r6, [lr, #0x31]
 >> Lifespan countdown: 2. (0x80000800)
 >> Lifespan countdown: 1. (0x80000804)
 >> Reverting instruction          :  30 60 9e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x2
 >> Updated instruction            :  32 60 9e e5          	: ldr r6, [lr, #0x32]
 >> Lifespan countdown: 2. (0x80000800)
 >> Lifespan countdown: 1. (0x80000804)
 >> Reverting instruction          :  30 60 9e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x4
 >> Updated instruction            :  34 60 9e e5          	: ldr r6, [lr, #0x34]
 >> Lifespan countdown: 2. (0x80000800)
 >> Lifespan countdown: 1. (0x80000804)
 >> Reverting instruction          :  30 60 9e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x8
 >> Updated instruction            :  38 60 9e e5          	: ldr r6, [lr, #0x38]
 >> Lifespan countdown: 2. (0x80000800)
 >> Lifespan countdown: 1. (0x80000804)
 >> Reverting instruction          :  30 60 9e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x10
 >> Updated instruction            :  20 60 9e e5          	: ldr r6, [lr, #0x20]
 >> Lifespan countdown: 2. (0x80000800)
 >> Lifespan countdown: 1. (0x80000804)
 >> Reverting instruction          :  30 60 9e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x20
 >> Updated instruction            :  10 60 9e e5          	: ldr r6, [lr, #0x10]
 >> Lifespan countdown: 2. (0x80000800)
 >> Lifespan countdown: 1. (0x80000804)
 >> Reverting instruction          :  30 60 9e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x40
 >> Updated instruction            :  70 60 9e e5          	: ldr r6, [lr, #0x70]
 >> Lifespan countdown: 2. (0x80000800)
 >> Lifespan countdown: 1. (0x80000804)
 >> Reverting instruction          :  30 60 9e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x80
 >> Updated instruction            :  b0 60 9e e5          	: ldr r6, [lr, #0xb0]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110028, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x100
 >> Updated instruction            :  30 61 9e e5          	: ldr r6, [lr, #0x130]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801100a8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x200
 >> Updated instruction            :  30 62 9e e5          	: ldr r6, [lr, #0x230]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801101a8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x400
 >> Updated instruction            :  30 64 9e e5          	: ldr r6, [lr, #0x430]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801103a8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x800
 >> Updated instruction            :  30 68 9e e5          	: ldr r6, [lr, #0x830]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801107a8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x1000
 >> Updated instruction            :  30 70 9e e5          	: ldr r7, [lr, #0x30]
 >> Lifespan countdown: 2. (0x80000800)
 >> Lifespan countdown: 1. (0x80000804)
 >> Reverting instruction          :  30 60 9e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x2000
 >> Updated instruction            :  30 40 9e e5          	: ldr r4, [lr, #0x30]
 >> Lifespan countdown: 2. (0x80000800)
 >> Lifespan countdown: 1. (0x80000804)
 >> Reverting instruction          :  30 60 9e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x4000
 >> Updated instruction            :  30 20 9e e5          	: ldr r2, [lr, #0x30]
 >> Lifespan countdown: 2. (0x80000800)
 >> Lifespan countdown: 1. (0x80000804)
 >> Reverting instruction          :  30 60 9e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007fc. Hit: 1. Lifespan: 2. Instruction: 00000538. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 60 9e e5          	: ldr r6, [lr, #0x30]
 >> Mask                           :  0x8000
 >> Updated instruction            :  30 e0 9e e5          	: ldr lr, [lr, #0x30]
 >> Lifespan countdown: 2. (0x80000800)
 >> Lifespan countdown: 1. (0x80000804)
 >> Reverting instruction          :  30 60 9e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 0. Instruction: 00000546. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000081c
 >> Updated                     : 0x0000000080000820
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x1
 >> Updated instruction            :  ef ec 81 e0          	: add lr, r1, pc, ror #25
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x2
 >> Updated instruction            :  ec ec 81 e0          	: add lr, r1, ip, ror #25
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x4
 >> Updated instruction            :  ea ec 81 e0          	: add lr, r1, sl, ror #25
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x8
 >> Updated instruction            :  e6 ec 81 e0          	: add lr, r1, r6, ror #25
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x10
 >> Updated instruction            :  fe ec 81 e0          	: strd lr, pc, [r1], lr
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa0612c9f, value: 0xe4f369b!! Count 547 Skipping to end.
 >> Run result: Fault errored program - last instruction: 546.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x20
 >> Updated instruction            :  ce ec 81 e0          	: add lr, r1, lr, asr #25
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x40
 >> Updated instruction            :  ae ec 81 e0          	: add lr, r1, lr, lsr #25
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x80
 >> Updated instruction            :  6e ec 81 e0          	: add lr, r1, lr, ror #24
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x100
 >> Updated instruction            :  ee ed 81 e0          	: add lr, r1, lr, ror #27
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x200
 >> Updated instruction            :  ee ee 81 e0          	: add lr, r1, lr, ror #29
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x400
 >> Updated instruction            :  ee e8 81 e0          	: add lr, r1, lr, ror #17
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x800
 >> Updated instruction            :  ee e4 81 e0          	: add lr, r1, lr, ror #9
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x1000
 >> Updated instruction            :  ee fc 81 e0          	: add pc, r1, lr, ror #25
 >!  Erm -  fetching from unmapped memory, address: 0xc7fc7a26, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 546.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x2000
 >> Updated instruction            :  ee cc 81 e0          	: add ip, r1, lr, ror #25
 >> Lifespan countdown: 2. (0x80000820)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c7fc7a5a, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x4000
 >> Updated instruction            :  ee ac 81 e0          	: add sl, r1, lr, ror #25
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000081c. Hit: 1. Lifespan: 2. Instruction: 00000546. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ec 81 e0          	: add lr, r1, lr, ror #25
 >> Mask                           :  0x8000
 >> Updated instruction            :  ee 6c 81 e0          	: add r6, r1, lr, ror #25
 >> Lifespan countdown: 2. (0x80000820)
 >> Lifespan countdown: 1. (0x80000824)
 >> Reverting instruction          :  ee ec 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 0. Instruction: 00000554. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000083c
 >> Updated                     : 0x0000000080000840
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 8c e0          	: add r0, ip, r1
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 8c e0          	: add r0, ip, r2
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 8c e0          	: add r0, ip, r4
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 8c e0          	: add r0, ip, r8
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 8c e0          	: add r0, ip, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 8c e0          	: add r0, ip, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 8c e0          	: add r0, ip, r0, asr #32
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 8c e0          	: add r0, ip, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 8c e0          	: add r0, ip, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 8c e0          	: add r0, ip, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 8c e0          	: add r0, ip, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 8c e0          	: add r0, ip, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 8c e0          	: add r1, ip, r0
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 8c e0          	: add r2, ip, r0
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 8c e0          	: add r4, ip, r0
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000083c. Hit: 1. Lifespan: 2. Instruction: 00000554. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8c e0          	: add r0, ip, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 8c e0          	: add r8, ip, r0
 >> Lifespan countdown: 2. (0x80000840)
 >> Lifespan countdown: 1. (0x80000844)
 >> Reverting instruction          :  00 00 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 0. Instruction: 00000563. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000860
 >> Updated                     : 0x0000000080000864
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b a0 87 e0          	: add sl, r7, fp
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 a0 87 e0          	: add sl, r7, r8
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e a0 87 e0          	: add sl, r7, lr
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 a0 87 e0          	: add sl, r7, r2
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a a0 87 e0          	: add sl, r7, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a a0 87 e0          	: add sl, r7, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a a0 87 e0          	: add sl, r7, sl, asr #32
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a a0 87 e0          	: add sl, r7, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a a1 87 e0          	: add sl, r7, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a a2 87 e0          	: add sl, r7, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a a4 87 e0          	: add sl, r7, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a a8 87 e0          	: add sl, r7, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a b0 87 e0          	: add fp, r7, sl
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a67943e6, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 566.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 80 87 e0          	: add r8, r7, sl
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a e0 87 e0          	: add lr, r7, sl
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000860. Hit: 1. Lifespan: 2. Instruction: 00000563. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 20 87 e0          	: add r2, r7, sl
 >> Lifespan countdown: 2. (0x80000864)
 >> Lifespan countdown: 1. (0x80000868)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 0. Instruction: 00000574. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000088c
 >> Updated                     : 0x0000000080000890
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x1
 >> Updated instruction            :  e4 57 80 e0          	: add r5, r0, r4, ror #15
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x2
 >> Updated instruction            :  e7 57 80 e0          	: add r5, r0, r7, ror #15
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x4
 >> Updated instruction            :  e1 57 80 e0          	: add r5, r0, r1, ror #15
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x8
 >> Updated instruction            :  ed 57 80 e0          	: add r5, r0, sp, ror #15
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x10
 >> Updated instruction            :  f5 57 80 e0          	: strd r5, r6, [r0], r5
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 574.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x20
 >> Updated instruction            :  c5 57 80 e0          	: add r5, r0, r5, asr #15
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x40
 >> Updated instruction            :  a5 57 80 e0          	: add r5, r0, r5, lsr #15
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x80
 >> Updated instruction            :  65 57 80 e0          	: add r5, r0, r5, ror #14
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x100
 >> Updated instruction            :  e5 56 80 e0          	: add r5, r0, r5, ror #13
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x200
 >> Updated instruction            :  e5 55 80 e0          	: add r5, r0, r5, ror #11
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x400
 >> Updated instruction            :  e5 53 80 e0          	: add r5, r0, r5, ror #7
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x800
 >> Updated instruction            :  e5 5f 80 e0          	: add r5, r0, r5, ror #31
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x1000
 >> Updated instruction            :  e5 47 80 e0          	: add r4, r0, r5, ror #15
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x2000
 >> Updated instruction            :  e5 77 80 e0          	: add r7, r0, r5, ror #15
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x4000
 >> Updated instruction            :  e5 17 80 e0          	: add r1, r0, r5, ror #15
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000088c. Hit: 1. Lifespan: 2. Instruction: 00000574. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 80 e0          	: add r5, r0, r5, ror #15
 >> Mask                           :  0x8000
 >> Updated instruction            :  e5 d7 80 e0          	: add sp, r0, r5, ror #15
 >> Lifespan countdown: 2. (0x80000890)
 >> Lifespan countdown: 1. (0x80000894)
 >> Reverting instruction          :  e5 57 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 0. Instruction: 00000581. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008a8
 >> Updated                     : 0x00000000800008ac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x1
 >> Updated instruction            :  4d 80 1b e5          	: ldr r8, [fp, #-0x4d]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x2
 >> Updated instruction            :  4e 80 1b e5          	: ldr r8, [fp, #-0x4e]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x4
 >> Updated instruction            :  48 80 1b e5          	: ldr r8, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x8
 >> Updated instruction            :  44 80 1b e5          	: ldr r8, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x10
 >> Updated instruction            :  5c 80 1b e5          	: ldr r8, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x20
 >> Updated instruction            :  6c 80 1b e5          	: ldr r8, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x40
 >> Updated instruction            :  0c 80 1b e5          	: ldr r8, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x80
 >> Updated instruction            :  cc 80 1b e5          	: ldr r8, [fp, #-0xcc]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x100
 >> Updated instruction            :  4c 81 1b e5          	: ldr r8, [fp, #-0x14c]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x200
 >> Updated instruction            :  4c 82 1b e5          	: ldr r8, [fp, #-0x24c]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x400
 >> Updated instruction            :  4c 84 1b e5          	: ldr r8, [fp, #-0x44c]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x800
 >> Updated instruction            :  4c 88 1b e5          	: ldr r8, [fp, #-0x84c]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  4c 90 1b e5          	: ldr sb, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  4c c0 1b e5          	: ldr ip, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a8. Hit: 1. Lifespan: 2. Instruction: 00000581. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  4c 00 1b e5          	: ldr r0, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x800008ac)
 >> Lifespan countdown: 1. (0x800008b0)
 >> Reverting instruction          :  4c 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 0. Instruction: 00000589. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008c8
 >> Updated                     : 0x00000000800008cc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x1
 >> Updated instruction            :  5d a0 1b e5          	: ldr sl, [fp, #-0x5d]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x2
 >> Updated instruction            :  5e a0 1b e5          	: ldr sl, [fp, #-0x5e]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x4
 >> Updated instruction            :  58 a0 1b e5          	: ldr sl, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x8
 >> Updated instruction            :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x10
 >> Updated instruction            :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x20
 >> Updated instruction            :  7c a0 1b e5          	: ldr sl, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x40
 >> Updated instruction            :  1c a0 1b e5          	: ldr sl, [fp, #-0x1c]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x80
 >> Updated instruction            :  dc a0 1b e5          	: ldr sl, [fp, #-0xdc]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x100
 >> Updated instruction            :  5c a1 1b e5          	: ldr sl, [fp, #-0x15c]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x200
 >> Updated instruction            :  5c a2 1b e5          	: ldr sl, [fp, #-0x25c]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x400
 >> Updated instruction            :  5c a4 1b e5          	: ldr sl, [fp, #-0x45c]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x800
 >> Updated instruction            :  5c a8 1b e5          	: ldr sl, [fp, #-0x85c]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  5c b0 1b e5          	: ldr fp, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffc8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 598.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  5c 80 1b e5          	: ldr r8, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  5c e0 1b e5          	: ldr lr, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c8. Hit: 1. Lifespan: 2. Instruction: 00000589. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  5c 20 1b e5          	: ldr r2, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800008cc)
 >> Lifespan countdown: 1. (0x800008d0)
 >> Reverting instruction          :  5c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 0. Instruction: 00000596. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008e4
 >> Updated                     : 0x00000000800008e8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x1
 >> Updated instruction            :  e8 9d 81 e0          	: add sb, r1, r8, ror #27
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x2
 >> Updated instruction            :  eb 9d 81 e0          	: add sb, r1, fp, ror #27
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x4
 >> Updated instruction            :  ed 9d 81 e0          	: add sb, r1, sp, ror #27
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x8
 >> Updated instruction            :  e1 9d 81 e0          	: add sb, r1, r1, ror #27
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x10
 >> Updated instruction            :  f9 9d 81 e0          	: strd sb, sl, [r1], sb
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 596.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x20
 >> Updated instruction            :  c9 9d 81 e0          	: add sb, r1, sb, asr #27
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x40
 >> Updated instruction            :  a9 9d 81 e0          	: add sb, r1, sb, lsr #27
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x80
 >> Updated instruction            :  69 9d 81 e0          	: add sb, r1, sb, ror #26
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x100
 >> Updated instruction            :  e9 9c 81 e0          	: add sb, r1, sb, ror #25
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x200
 >> Updated instruction            :  e9 9f 81 e0          	: add sb, r1, sb, ror #31
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x400
 >> Updated instruction            :  e9 99 81 e0          	: add sb, r1, sb, ror #19
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x800
 >> Updated instruction            :  e9 95 81 e0          	: add sb, r1, sb, ror #11
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x1000
 >> Updated instruction            :  e9 8d 81 e0          	: add r8, r1, sb, ror #27
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x2000
 >> Updated instruction            :  e9 bd 81 e0          	: add fp, r1, sb, ror #27
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000036252a60, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 598.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x4000
 >> Updated instruction            :  e9 dd 81 e0          	: add sp, r1, sb, ror #27
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e4. Hit: 1. Lifespan: 2. Instruction: 00000596. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 81 e0          	: add sb, r1, sb, ror #27
 >> Mask                           :  0x8000
 >> Updated instruction            :  e9 1d 81 e0          	: add r1, r1, sb, ror #27
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  e9 9d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 0. Instruction: 00000602. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008fc
 >> Updated                     : 0x0000000080000900
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 c0 0e e0          	: and ip, lr, r4
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 c0 0e e0          	: and ip, lr, r7
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 c0 0e e0          	: and ip, lr, r1
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d c0 0e e0          	: and ip, lr, sp
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 c0 0e e0          	: and ip, lr, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 c0 0e e0          	: and ip, lr, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 c0 0e e0          	: and ip, lr, r5, asr #32
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 c0 0e e0          	: and ip, lr, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 c1 0e e0          	: and ip, lr, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 c2 0e e0          	: and ip, lr, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 c4 0e e0          	: and ip, lr, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 c8 0e e0          	: and ip, lr, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 d0 0e e0          	: and sp, lr, r5
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 e0 0e e0          	: and lr, lr, r5
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 80 0e e0          	: and r8, lr, r5
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008fc. Hit: 1. Lifespan: 2. Instruction: 00000602. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0e e0          	: and ip, lr, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 40 0e e0          	: and r4, lr, r5
 >> Lifespan countdown: 2. (0x80000900)
 >> Lifespan countdown: 1. (0x80000904)
 >> Reverting instruction          :  05 c0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 0. Instruction: 00000609. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000918
 >> Updated                     : 0x000000008000091c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x1
 >> Updated instruction            :  ed cb 89 e0          	: add ip, sb, sp, ror #23
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x2
 >> Updated instruction            :  ee cb 89 e0          	: add ip, sb, lr, ror #23
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x4
 >> Updated instruction            :  e8 cb 89 e0          	: add ip, sb, r8, ror #23
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x8
 >> Updated instruction            :  e4 cb 89 e0          	: add ip, sb, r4, ror #23
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x10
 >> Updated instruction            :  fc cb 89 e0          	: strd ip, sp, [sb], ip
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x36252a98, value: 0x566db360!! Count 610 Skipping to end.
 >> Run result: Fault errored program - last instruction: 609.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x20
 >> Updated instruction            :  cc cb 89 e0          	: add ip, sb, ip, asr #23
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x40
 >> Updated instruction            :  ac cb 89 e0          	: add ip, sb, ip, lsr #23
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x80
 >> Updated instruction            :  6c cb 89 e0          	: add ip, sb, ip, ror #22
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x100
 >> Updated instruction            :  ec ca 89 e0          	: add ip, sb, ip, ror #21
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x200
 >> Updated instruction            :  ec c9 89 e0          	: add ip, sb, ip, ror #19
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x400
 >> Updated instruction            :  ec cf 89 e0          	: add ip, sb, ip, ror #31
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x800
 >> Updated instruction            :  ec c3 89 e0          	: add ip, sb, ip, ror #7
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x1000
 >> Updated instruction            :  ec db 89 e0          	: add sp, sb, ip, ror #23
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x2000
 >> Updated instruction            :  ec eb 89 e0          	: add lr, sb, ip, ror #23
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x4000
 >> Updated instruction            :  ec 8b 89 e0          	: add r8, sb, ip, ror #23
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000918. Hit: 1. Lifespan: 2. Instruction: 00000609. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec cb 89 e0          	: add ip, sb, ip, ror #23
 >> Mask                           :  0x8000
 >> Updated instruction            :  ec 4b 89 e0          	: add r4, sb, ip, ror #23
 >> Lifespan countdown: 2. (0x8000091c)
 >> Lifespan countdown: 1. (0x80000920)
 >> Reverting instruction          :  ec cb 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 0. Instruction: 00000619. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000940
 >> Updated                     : 0x0000000080000944
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x1
 >> Updated instruction            :  5c 50 01 e3          	: movw r5, #0x105c
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x2
 >> Updated instruction            :  5f 50 01 e3          	: movw r5, #0x105f
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x4
 >> Updated instruction            :  59 50 01 e3          	: movw r5, #0x1059
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x8
 >> Updated instruction            :  55 50 01 e3          	: movw r5, #0x1055
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x10
 >> Updated instruction            :  4d 50 01 e3          	: movw r5, #0x104d
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x20
 >> Updated instruction            :  7d 50 01 e3          	: movw r5, #0x107d
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x40
 >> Updated instruction            :  1d 50 01 e3          	: movw r5, #0x101d
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x80
 >> Updated instruction            :  dd 50 01 e3          	: movw r5, #0x10dd
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x100
 >> Updated instruction            :  5d 51 01 e3          	: movw r5, #0x115d
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x200
 >> Updated instruction            :  5d 52 01 e3          	: movw r5, #0x125d
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x400
 >> Updated instruction            :  5d 54 01 e3          	: movw r5, #0x145d
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x800
 >> Updated instruction            :  5d 58 01 e3          	: movw r5, #0x185d
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x1000
 >> Updated instruction            :  5d 40 01 e3          	: movw r4, #0x105d
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x2000
 >> Updated instruction            :  5d 70 01 e3          	: movw r7, #0x105d
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x4000
 >> Updated instruction            :  5d 10 01 e3          	: movw r1, #0x105d
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000940. Hit: 1. Lifespan: 2. Instruction: 00000619. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5d 50 01 e3          	: movw r5, #0x105d
 >> Mask                           :  0x8000
 >> Updated instruction            :  5d d0 01 e3          	: movw sp, #0x105d
 >> Lifespan countdown: 2. (0x80000944)
 >> Lifespan countdown: 1. (0x80000948)
 >> Reverting instruction          :  5d 50 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 0. Instruction: 00000627. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000960
 >> Updated                     : 0x0000000080000964
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 81 e0          	: add r0, r1, r1
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 81 e0          	: add r0, r1, r2
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 81 e0          	: add r0, r1, r4
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 81 e0          	: add r0, r1, r8
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 81 e0          	: add r0, r1, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 81 e0          	: add r0, r1, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 81 e0          	: add r0, r1, r0, asr #32
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 81 e0          	: add r0, r1, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 81 e0          	: add r0, r1, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 81 e0          	: add r0, r1, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 81 e0          	: add r0, r1, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 81 e0          	: add r0, r1, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 81 e0          	: add r1, r1, r0
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 81 e0          	: add r2, r1, r0
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 81 e0          	: add r4, r1, r0
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000960. Hit: 1. Lifespan: 2. Instruction: 00000627. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 81 e0          	: add r8, r1, r0
 >> Lifespan countdown: 2. (0x80000964)
 >> Lifespan countdown: 1. (0x80000968)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 0. Instruction: 00000635. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000980
 >> Updated                     : 0x0000000080000984
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b a0 82 e0          	: add sl, r2, fp
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 a0 82 e0          	: add sl, r2, r8
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e a0 82 e0          	: add sl, r2, lr
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 a0 82 e0          	: add sl, r2, r2
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a a0 82 e0          	: add sl, r2, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a a0 82 e0          	: add sl, r2, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a a0 82 e0          	: add sl, r2, sl, asr #32
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a a0 82 e0          	: add sl, r2, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a a1 82 e0          	: add sl, r2, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a a2 82 e0          	: add sl, r2, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a a4 82 e0          	: add sl, r2, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a a8 82 e0          	: add sl, r2, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a b0 82 e0          	: add fp, r2, sl
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000d8a1e62d, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 646.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 80 82 e0          	: add r8, r2, sl
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a e0 82 e0          	: add lr, r2, sl
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000980. Hit: 1. Lifespan: 2. Instruction: 00000635. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 82 e0          	: add sl, r2, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 20 82 e0          	: add r2, r2, sl
 >> Lifespan countdown: 2. (0x80000984)
 >> Lifespan countdown: 1. (0x80000988)
 >> Reverting instruction          :  0a a0 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 0. Instruction: 00000644. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009a4
 >> Updated                     : 0x00000000800009a8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x1
 >> Updated instruction            :  d2 c7 4e e3          	: movt ip, #0xe7d2
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x2
 >> Updated instruction            :  d1 c7 4e e3          	: movt ip, #0xe7d1
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x4
 >> Updated instruction            :  d7 c7 4e e3          	: movt ip, #0xe7d7
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x8
 >> Updated instruction            :  db c7 4e e3          	: movt ip, #0xe7db
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x10
 >> Updated instruction            :  c3 c7 4e e3          	: movt ip, #0xe7c3
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x20
 >> Updated instruction            :  f3 c7 4e e3          	: movt ip, #0xe7f3
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x40
 >> Updated instruction            :  93 c7 4e e3          	: movt ip, #0xe793
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x80
 >> Updated instruction            :  53 c7 4e e3          	: movt ip, #0xe753
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x100
 >> Updated instruction            :  d3 c6 4e e3          	: movt ip, #0xe6d3
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x200
 >> Updated instruction            :  d3 c5 4e e3          	: movt ip, #0xe5d3
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x400
 >> Updated instruction            :  d3 c3 4e e3          	: movt ip, #0xe3d3
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x800
 >> Updated instruction            :  d3 cf 4e e3          	: movt ip, #0xefd3
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x1000
 >> Updated instruction            :  d3 d7 4e e3          	: movt sp, #0xe7d3
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x2000
 >> Updated instruction            :  d3 e7 4e e3          	: movt lr, #0xe7d3
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x4000
 >> Updated instruction            :  d3 87 4e e3          	: movt r8, #0xe7d3
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a4. Hit: 1. Lifespan: 2. Instruction: 00000644. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 c7 4e e3          	: movt ip, #0xe7d3
 >> Mask                           :  0x8000
 >> Updated instruction            :  d3 47 4e e3          	: movt r4, #0xe7d3
 >> Lifespan countdown: 2. (0x800009a8)
 >> Lifespan countdown: 1. (0x800009ac)
 >> Reverting instruction          :  d3 c7 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 0. Instruction: 00000650. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009bc
 >> Updated                     : 0x00000000800009c0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f c0 8c e0          	: add ip, ip, pc
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c c0 8c e0          	: add ip, ip, ip
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a c0 8c e0          	: add ip, ip, sl
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 c0 8c e0          	: add ip, ip, r6
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e c0 8c e0          	: add ip, ip, lr, lsl r0
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e c0 8c e0          	: add ip, ip, lr, lsr #32
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e c0 8c e0          	: add ip, ip, lr, asr #32
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e c0 8c e0          	: add ip, ip, lr, lsl #1
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e c1 8c e0          	: add ip, ip, lr, lsl #2
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e c2 8c e0          	: add ip, ip, lr, lsl #4
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e c4 8c e0          	: add ip, ip, lr, lsl #8
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e c8 8c e0          	: add ip, ip, lr, lsl #16
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e d0 8c e0          	: add sp, ip, lr
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e e0 8c e0          	: add lr, ip, lr
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 80 8c e0          	: add r8, ip, lr
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009bc. Hit: 1. Lifespan: 2. Instruction: 00000650. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 8c e0          	: add ip, ip, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 40 8c e0          	: add r4, ip, lr
 >> Lifespan countdown: 2. (0x800009c0)
 >> Lifespan countdown: 1. (0x800009c4)
 >> Reverting instruction          :  0e c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 0. Instruction: 00000657. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009d8
 >> Updated                     : 0x00000000800009dc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 10 25 e0          	: eor r1, r5, r1
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 10 25 e0          	: eor r1, r5, r2
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 10 25 e0          	: eor r1, r5, r4
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 10 25 e0          	: eor r1, r5, r8
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 10 25 e0          	: eor r1, r5, r0, lsl r0
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 10 25 e0          	: eor r1, r5, r0, lsr #32
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 10 25 e0          	: eor r1, r5, r0, asr #32
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 10 25 e0          	: eor r1, r5, r0, lsl #1
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 11 25 e0          	: eor r1, r5, r0, lsl #2
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 12 25 e0          	: eor r1, r5, r0, lsl #4
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 14 25 e0          	: eor r1, r5, r0, lsl #8
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 18 25 e0          	: eor r1, r5, r0, lsl #16
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 00 25 e0          	: eor r0, r5, r0
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 30 25 e0          	: eor r3, r5, r0
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 50 25 e0          	: eor r5, r5, r0
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009d8. Hit: 1. Lifespan: 2. Instruction: 00000657. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 25 e0          	: eor r1, r5, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 90 25 e0          	: eor sb, r5, r0
 >> Lifespan countdown: 2. (0x800009dc)
 >> Lifespan countdown: 1. (0x800009e0)
 >> Reverting instruction          :  00 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 0. Instruction: 00000662. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009ec
 >> Updated                     : 0x00000000800009f0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x1
 >> Updated instruction            :  36 e3 4c e3          	: movt lr, #0xc336
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x2
 >> Updated instruction            :  35 e3 4c e3          	: movt lr, #0xc335
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x4
 >> Updated instruction            :  33 e3 4c e3          	: movt lr, #0xc333
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x8
 >> Updated instruction            :  3f e3 4c e3          	: movt lr, #0xc33f
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x10
 >> Updated instruction            :  27 e3 4c e3          	: movt lr, #0xc327
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x20
 >> Updated instruction            :  17 e3 4c e3          	: movt lr, #0xc317
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x40
 >> Updated instruction            :  77 e3 4c e3          	: movt lr, #0xc377
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x80
 >> Updated instruction            :  b7 e3 4c e3          	: movt lr, #0xc3b7
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x100
 >> Updated instruction            :  37 e2 4c e3          	: movt lr, #0xc237
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x200
 >> Updated instruction            :  37 e1 4c e3          	: movt lr, #0xc137
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x400
 >> Updated instruction            :  37 e7 4c e3          	: movt lr, #0xc737
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x800
 >> Updated instruction            :  37 eb 4c e3          	: movt lr, #0xcb37
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x1000
 >> Updated instruction            :  37 f3 4c e3          	: movt pc, #0xc337
 >!  Erm -  fetching from unmapped memory, address: 0xc33709f4, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 662.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x2000
 >> Updated instruction            :  37 c3 4c e3          	: movt ip, #0xc337
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x4000
 >> Updated instruction            :  37 a3 4c e3          	: movt sl, #0xc337
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ec. Hit: 1. Lifespan: 2. Instruction: 00000662. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  37 e3 4c e3          	: movt lr, #0xc337
 >> Mask                           :  0x8000
 >> Updated instruction            :  37 63 4c e3          	: movt r6, #0xc337
 >> Lifespan countdown: 2. (0x800009f0)
 >> Lifespan countdown: 1. (0x800009f4)
 >> Reverting instruction          :  37 e3 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 0. Instruction: 00000670. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a0c
 >> Updated                     : 0x0000000080000a10
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b a0 83 e0          	: add sl, r3, fp
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 a0 83 e0          	: add sl, r3, r8
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e a0 83 e0          	: add sl, r3, lr
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 a0 83 e0          	: add sl, r3, r2
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a a0 83 e0          	: add sl, r3, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a a0 83 e0          	: add sl, r3, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a a0 83 e0          	: add sl, r3, sl, asr #32
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a a0 83 e0          	: add sl, r3, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a a1 83 e0          	: add sl, r3, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a a2 83 e0          	: add sl, r3, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a a4 83 e0          	: add sl, r3, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a a8 83 e0          	: add sl, r3, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a b0 83 e0          	: add fp, r3, sl
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f4d50d57, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 672.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 80 83 e0          	: add r8, r3, sl
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a e0 83 e0          	: add lr, r3, sl
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a0c. Hit: 1. Lifespan: 2. Instruction: 00000670. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 83 e0          	: add sl, r3, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 20 83 e0          	: add r2, r3, sl
 >> Lifespan countdown: 2. (0x80000a10)
 >> Lifespan countdown: 1. (0x80000a14)
 >> Reverting instruction          :  0a a0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 0. Instruction: 00000679. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a30
 >> Updated                     : 0x0000000080000a34
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x1
 >> Updated instruction            :  ec 04 01 e3          	: movw r0, #0x14ec
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x2
 >> Updated instruction            :  ef 04 01 e3          	: movw r0, #0x14ef
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x4
 >> Updated instruction            :  e9 04 01 e3          	: movw r0, #0x14e9
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x8
 >> Updated instruction            :  e5 04 01 e3          	: movw r0, #0x14e5
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x10
 >> Updated instruction            :  fd 04 01 e3          	: movw r0, #0x14fd
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x20
 >> Updated instruction            :  cd 04 01 e3          	: movw r0, #0x14cd
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x40
 >> Updated instruction            :  ad 04 01 e3          	: movw r0, #0x14ad
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x80
 >> Updated instruction            :  6d 04 01 e3          	: movw r0, #0x146d
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x100
 >> Updated instruction            :  ed 05 01 e3          	: movw r0, #0x15ed
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x200
 >> Updated instruction            :  ed 06 01 e3          	: movw r0, #0x16ed
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x400
 >> Updated instruction            :  ed 00 01 e3          	: movw r0, #0x10ed
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x800
 >> Updated instruction            :  ed 0c 01 e3          	: movw r0, #0x1ced
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x1000
 >> Updated instruction            :  ed 14 01 e3          	: movw r1, #0x14ed
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x2000
 >> Updated instruction            :  ed 24 01 e3          	: movw r2, #0x14ed
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x4000
 >> Updated instruction            :  ed 44 01 e3          	: movw r4, #0x14ed
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a30. Hit: 1. Lifespan: 2. Instruction: 00000679. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ed 04 01 e3          	: movw r0, #0x14ed
 >> Mask                           :  0x8000
 >> Updated instruction            :  ed 84 01 e3          	: movw r8, #0x14ed
 >> Lifespan countdown: 2. (0x80000a34)
 >> Lifespan countdown: 1. (0x80000a38)
 >> Reverting instruction          :  ed 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 0. Instruction: 00000685. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a48
 >> Updated                     : 0x0000000080000a4c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 00 80 e0          	: add r0, r0, sp
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 00 80 e0          	: add r0, r0, lr
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 00 80 e0          	: add r0, r0, r8
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 00 80 e0          	: add r0, r0, r4
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 00 80 e0          	: add r0, r0, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 00 80 e0          	: add r0, r0, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 00 80 e0          	: add r0, r0, ip, asr #32
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 00 80 e0          	: add r0, r0, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 01 80 e0          	: add r0, r0, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 02 80 e0          	: add r0, r0, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 04 80 e0          	: add r0, r0, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 08 80 e0          	: add r0, r0, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 10 80 e0          	: add r1, r0, ip
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 20 80 e0          	: add r2, r0, ip
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 40 80 e0          	: add r4, r0, ip
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a48. Hit: 1. Lifespan: 2. Instruction: 00000685. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 80 80 e0          	: add r8, r0, ip
 >> Lifespan countdown: 2. (0x80000a4c)
 >> Lifespan countdown: 1. (0x80000a50)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 0. Instruction: 00000693. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a68
 >> Updated                     : 0x0000000080000a6c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 10 85 e0          	: add r1, r5, r0
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 10 85 e0          	: add r1, r5, r3
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 10 85 e0          	: add r1, r5, r5
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 10 85 e0          	: add r1, r5, sb
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 10 85 e0          	: add r1, r5, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 10 85 e0          	: add r1, r5, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 10 85 e0          	: add r1, r5, r1, asr #32
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 10 85 e0          	: add r1, r5, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 11 85 e0          	: add r1, r5, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 12 85 e0          	: add r1, r5, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 14 85 e0          	: add r1, r5, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 18 85 e0          	: add r1, r5, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 00 85 e0          	: add r0, r5, r1
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 30 85 e0          	: add r3, r5, r1
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 50 85 e0          	: add r5, r5, r1
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a68. Hit: 1. Lifespan: 2. Instruction: 00000693. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 90 85 e0          	: add sb, r5, r1
 >> Lifespan countdown: 2. (0x80000a6c)
 >> Lifespan countdown: 1. (0x80000a70)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 0. Instruction: 00000702. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a8c
 >> Updated                     : 0x0000000080000a90
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x1
 >> Updated instruction            :  51 a0 1b e5          	: ldr sl, [fp, #-0x51]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x2
 >> Updated instruction            :  52 a0 1b e5          	: ldr sl, [fp, #-0x52]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x4
 >> Updated instruction            :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x8
 >> Updated instruction            :  58 a0 1b e5          	: ldr sl, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x10
 >> Updated instruction            :  40 a0 1b e5          	: ldr sl, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x20
 >> Updated instruction            :  70 a0 1b e5          	: ldr sl, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x40
 >> Updated instruction            :  10 a0 1b e5          	: ldr sl, [fp, #-0x10]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x80
 >> Updated instruction            :  d0 a0 1b e5          	: ldr sl, [fp, #-0xd0]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x100
 >> Updated instruction            :  50 a1 1b e5          	: ldr sl, [fp, #-0x150]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x200
 >> Updated instruction            :  50 a2 1b e5          	: ldr sl, [fp, #-0x250]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x400
 >> Updated instruction            :  50 a4 1b e5          	: ldr sl, [fp, #-0x450]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x800
 >> Updated instruction            :  50 a8 1b e5          	: ldr sl, [fp, #-0x850]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x1000
 >> Updated instruction            :  50 b0 1b e5          	: ldr fp, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffa8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 732.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x2000
 >> Updated instruction            :  50 80 1b e5          	: ldr r8, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x4000
 >> Updated instruction            :  50 e0 1b e5          	: ldr lr, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a8c. Hit: 1. Lifespan: 2. Instruction: 00000702. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Mask                           :  0x8000
 >> Updated instruction            :  50 20 1b e5          	: ldr r2, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000a90)
 >> Lifespan countdown: 1. (0x80000a94)
 >> Reverting instruction          :  50 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 0. Instruction: 00000710. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000aac
 >> Updated                     : 0x0000000080000ab0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x1
 >> Updated instruction            :  6e a7 46 e3          	: movt sl, #0x676e
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x2
 >> Updated instruction            :  6d a7 46 e3          	: movt sl, #0x676d
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x4
 >> Updated instruction            :  6b a7 46 e3          	: movt sl, #0x676b
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x8
 >> Updated instruction            :  67 a7 46 e3          	: movt sl, #0x6767
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x10
 >> Updated instruction            :  7f a7 46 e3          	: movt sl, #0x677f
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x20
 >> Updated instruction            :  4f a7 46 e3          	: movt sl, #0x674f
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x40
 >> Updated instruction            :  2f a7 46 e3          	: movt sl, #0x672f
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x80
 >> Updated instruction            :  ef a7 46 e3          	: movt sl, #0x67ef
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x100
 >> Updated instruction            :  6f a6 46 e3          	: movt sl, #0x666f
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x200
 >> Updated instruction            :  6f a5 46 e3          	: movt sl, #0x656f
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x400
 >> Updated instruction            :  6f a3 46 e3          	: movt sl, #0x636f
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x800
 >> Updated instruction            :  6f af 46 e3          	: movt sl, #0x6f6f
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x1000
 >> Updated instruction            :  6f b7 46 e3          	: movt fp, #0x676f
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000676ffec4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 732.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x2000
 >> Updated instruction            :  6f 87 46 e3          	: movt r8, #0x676f
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x4000
 >> Updated instruction            :  6f e7 46 e3          	: movt lr, #0x676f
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aac. Hit: 1. Lifespan: 2. Instruction: 00000710. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6f a7 46 e3          	: movt sl, #0x676f
 >> Mask                           :  0x8000
 >> Updated instruction            :  6f 27 46 e3          	: movt r2, #0x676f
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  6f a7 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 0. Instruction: 00000717. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ac8
 >> Updated                     : 0x0000000080000acc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 e0 25 e0          	: eor lr, r5, r1
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 e0 25 e0          	: eor lr, r5, r2
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 e0 25 e0          	: eor lr, r5, r4
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 e0 25 e0          	: eor lr, r5, r8
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 e0 25 e0          	: eor lr, r5, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 e0 25 e0          	: eor lr, r5, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 e0 25 e0          	: eor lr, r5, r0, asr #32
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 e0 25 e0          	: eor lr, r5, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 e1 25 e0          	: eor lr, r5, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 e2 25 e0          	: eor lr, r5, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 e4 25 e0          	: eor lr, r5, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 e8 25 e0          	: eor lr, r5, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 f0 25 e0          	: eor pc, r5, r0
 >!  Erm -  fetching from unmapped memory, address: 0xd7bbe6a6, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 717.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 c0 25 e0          	: eor ip, r5, r0
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 a0 25 e0          	: eor sl, r5, r0
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac8. Hit: 1. Lifespan: 2. Instruction: 00000717. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 60 25 e0          	: eor r6, r5, r0
 >> Lifespan countdown: 2. (0x80000acc)
 >> Lifespan countdown: 1. (0x80000ad0)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 0. Instruction: 00000725. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ae8
 >> Updated                     : 0x0000000080000aec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x1
 >> Updated instruction            :  e0 1d 80 e0          	: add r1, r0, r0, ror #27
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x2
 >> Updated instruction            :  e3 1d 80 e0          	: add r1, r0, r3, ror #27
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x4
 >> Updated instruction            :  e5 1d 80 e0          	: add r1, r0, r5, ror #27
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x8
 >> Updated instruction            :  e9 1d 80 e0          	: add r1, r0, sb, ror #27
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x10
 >> Updated instruction            :  f1 1d 80 e0          	: strd r1, r2, [r0], r1
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 725.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x20
 >> Updated instruction            :  c1 1d 80 e0          	: add r1, r0, r1, asr #27
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x40
 >> Updated instruction            :  a1 1d 80 e0          	: add r1, r0, r1, lsr #27
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x80
 >> Updated instruction            :  61 1d 80 e0          	: add r1, r0, r1, ror #26
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x100
 >> Updated instruction            :  e1 1c 80 e0          	: add r1, r0, r1, ror #25
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x200
 >> Updated instruction            :  e1 1f 80 e0          	: add r1, r0, r1, ror #31
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x400
 >> Updated instruction            :  e1 19 80 e0          	: add r1, r0, r1, ror #19
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x800
 >> Updated instruction            :  e1 15 80 e0          	: add r1, r0, r1, ror #11
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x1000
 >> Updated instruction            :  e1 0d 80 e0          	: add r0, r0, r1, ror #27
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x2000
 >> Updated instruction            :  e1 3d 80 e0          	: add r3, r0, r1, ror #27
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x4000
 >> Updated instruction            :  e1 5d 80 e0          	: add r5, r0, r1, ror #27
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ae8. Hit: 1. Lifespan: 2. Instruction: 00000725. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 1d 80 e0          	: add r1, r0, r1, ror #27
 >> Mask                           :  0x8000
 >> Updated instruction            :  e1 9d 80 e0          	: add sb, r0, r1, ror #27
 >> Lifespan countdown: 2. (0x80000aec)
 >> Lifespan countdown: 1. (0x80000af0)
 >> Reverting instruction          :  e1 1d 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 0. Instruction: 00000734. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b0c
 >> Updated                     : 0x0000000080000b10
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 50 8c e0          	: add r5, ip, r4
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 50 8c e0          	: add r5, ip, r7
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 50 8c e0          	: add r5, ip, r1
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 50 8c e0          	: add r5, ip, sp
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 50 8c e0          	: add r5, ip, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 50 8c e0          	: add r5, ip, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 50 8c e0          	: add r5, ip, r5, asr #32
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 50 8c e0          	: add r5, ip, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 51 8c e0          	: add r5, ip, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 52 8c e0          	: add r5, ip, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 54 8c e0          	: add r5, ip, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 58 8c e0          	: add r5, ip, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 40 8c e0          	: add r4, ip, r5
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 70 8c e0          	: add r7, ip, r5
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 10 8c e0          	: add r1, ip, r5
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b0c. Hit: 1. Lifespan: 2. Instruction: 00000734. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8c e0          	: add r5, ip, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 d0 8c e0          	: add sp, ip, r5
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 50 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 0. Instruction: 00000741. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b28
 >> Updated                     : 0x0000000080000b2c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 80 80 e0          	: add r8, r0, sb
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 80 80 e0          	: add r8, r0, sl
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 80 80 e0          	: add r8, r0, ip
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 80 80 e0          	: add r8, r0, r0
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 80 80 e0          	: add r8, r0, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 80 80 e0          	: add r8, r0, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 80 80 e0          	: add r8, r0, r8, asr #32
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 80 80 e0          	: add r8, r0, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 81 80 e0          	: add r8, r0, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 82 80 e0          	: add r8, r0, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 84 80 e0          	: add r8, r0, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 88 80 e0          	: add r8, r0, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 90 80 e0          	: add sb, r0, r8
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 a0 80 e0          	: add sl, r0, r8
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 c0 80 e0          	: add ip, r0, r8
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b28. Hit: 1. Lifespan: 2. Instruction: 00000741. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 80 e0          	: add r8, r0, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 00 80 e0          	: add r0, r0, r8
 >> Lifespan countdown: 2. (0x80000b2c)
 >> Lifespan countdown: 1. (0x80000b30)
 >> Reverting instruction          :  08 80 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 0. Instruction: 00000748. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b44
 >> Updated                     : 0x0000000080000b48
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 10 21 e0          	: eor r1, r1, pc
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 10 21 e0          	: eor r1, r1, ip
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 10 21 e0          	: eor r1, r1, sl
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 10 21 e0          	: eor r1, r1, r6
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 10 21 e0          	: eor r1, r1, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 10 21 e0          	: eor r1, r1, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 10 21 e0          	: eor r1, r1, lr, asr #32
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 10 21 e0          	: eor r1, r1, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 11 21 e0          	: eor r1, r1, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 12 21 e0          	: eor r1, r1, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 14 21 e0          	: eor r1, r1, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 18 21 e0          	: eor r1, r1, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 00 21 e0          	: eor r0, r1, lr
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 30 21 e0          	: eor r3, r1, lr
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 50 21 e0          	: eor r5, r1, lr
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b44. Hit: 1. Lifespan: 2. Instruction: 00000748. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 21 e0          	: eor r1, r1, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 90 21 e0          	: eor sb, r1, lr
 >> Lifespan countdown: 2. (0x80000b48)
 >> Lifespan countdown: 1. (0x80000b4c)
 >> Reverting instruction          :  0e 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 0. Instruction: 00000754. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b5c
 >> Updated                     : 0x0000000080000b60
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 00 80 e0          	: add r0, r0, sp
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 00 80 e0          	: add r0, r0, lr
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 00 80 e0          	: add r0, r0, r8
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 00 80 e0          	: add r0, r0, r4
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 00 80 e0          	: add r0, r0, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 00 80 e0          	: add r0, r0, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 00 80 e0          	: add r0, r0, ip, asr #32
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 00 80 e0          	: add r0, r0, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 01 80 e0          	: add r0, r0, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 02 80 e0          	: add r0, r0, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 04 80 e0          	: add r0, r0, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 08 80 e0          	: add r0, r0, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 10 80 e0          	: add r1, r0, ip
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 20 80 e0          	: add r2, r0, ip
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 40 80 e0          	: add r4, r0, ip
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b5c. Hit: 1. Lifespan: 2. Instruction: 00000754. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 80 80 e0          	: add r8, r0, ip
 >> Lifespan countdown: 2. (0x80000b60)
 >> Lifespan countdown: 1. (0x80000b64)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 0. Instruction: 00000763. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b80
 >> Updated                     : 0x0000000080000b84
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f e0 8a e0          	: add lr, sl, pc
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c e0 8a e0          	: add lr, sl, ip
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a e0 8a e0          	: add lr, sl, sl
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 e0 8a e0          	: add lr, sl, r6
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e e0 8a e0          	: add lr, sl, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e e0 8a e0          	: add lr, sl, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e e0 8a e0          	: add lr, sl, lr, asr #32
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e e0 8a e0          	: add lr, sl, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e e1 8a e0          	: add lr, sl, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e e2 8a e0          	: add lr, sl, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e e4 8a e0          	: add lr, sl, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e e8 8a e0          	: add lr, sl, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e f0 8a e0          	: add pc, sl, lr
 >!  Erm -  fetching from unmapped memory, address: 0x4f0882de, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 763.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e c0 8a e0          	: add ip, sl, lr
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e a0 8a e0          	: add sl, sl, lr
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b80. Hit: 1. Lifespan: 2. Instruction: 00000763. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 8a e0          	: add lr, sl, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 60 8a e0          	: add r6, sl, lr
 >> Lifespan countdown: 2. (0x80000b84)
 >> Lifespan countdown: 1. (0x80000b88)
 >> Reverting instruction          :  0e e0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 0. Instruction: 00000771. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ba0
 >> Updated                     : 0x0000000080000ba4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 80 8a e0          	: add r8, sl, sb
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 80 8a e0          	: add r8, sl, sl
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 80 8a e0          	: add r8, sl, ip
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 80 8a e0          	: add r8, sl, r0
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 80 8a e0          	: add r8, sl, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 80 8a e0          	: add r8, sl, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 80 8a e0          	: add r8, sl, r8, asr #32
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 80 8a e0          	: add r8, sl, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 81 8a e0          	: add r8, sl, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 82 8a e0          	: add r8, sl, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 84 8a e0          	: add r8, sl, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 88 8a e0          	: add r8, sl, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 90 8a e0          	: add sb, sl, r8
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 a0 8a e0          	: add sl, sl, r8
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 c0 8a e0          	: add ip, sl, r8
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba0. Hit: 1. Lifespan: 2. Instruction: 00000771. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8a e0          	: add r8, sl, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 00 8a e0          	: add r0, sl, r8
 >> Lifespan countdown: 2. (0x80000ba4)
 >> Lifespan countdown: 1. (0x80000ba8)
 >> Reverting instruction          :  08 80 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 0. Instruction: 00000779. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bc0
 >> Updated                     : 0x0000000080000bc4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x1
 >> Updated instruction            :  61 00 1b e5          	: ldr r0, [fp, #-0x61]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x2
 >> Updated instruction            :  62 00 1b e5          	: ldr r0, [fp, #-0x62]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x4
 >> Updated instruction            :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x8
 >> Updated instruction            :  68 00 1b e5          	: ldr r0, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x10
 >> Updated instruction            :  70 00 1b e5          	: ldr r0, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x20
 >> Updated instruction            :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x40
 >> Updated instruction            :  20 00 1b e5          	: ldr r0, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x80
 >> Updated instruction            :  e0 00 1b e5          	: ldr r0, [fp, #-0xe0]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x100
 >> Updated instruction            :  60 01 1b e5          	: ldr r0, [fp, #-0x160]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x200
 >> Updated instruction            :  60 02 1b e5          	: ldr r0, [fp, #-0x260]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x400
 >> Updated instruction            :  60 04 1b e5          	: ldr r0, [fp, #-0x460]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x800
 >> Updated instruction            :  60 08 1b e5          	: ldr r0, [fp, #-0x860]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x1000
 >> Updated instruction            :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x2000
 >> Updated instruction            :  60 20 1b e5          	: ldr r2, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x4000
 >> Updated instruction            :  60 40 1b e5          	: ldr r4, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc0. Hit: 1. Lifespan: 2. Instruction: 00000779. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Mask                           :  0x8000
 >> Updated instruction            :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000bc4)
 >> Lifespan countdown: 1. (0x80000bc8)
 >> Reverting instruction          :  60 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 0. Instruction: 00000787. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000be0
 >> Updated                     : 0x0000000080000be4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 80 88 e0          	: add r8, r8, sp
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 80 88 e0          	: add r8, r8, lr
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 80 88 e0          	: add r8, r8, r8
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 80 88 e0          	: add r8, r8, r4
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 80 88 e0          	: add r8, r8, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 80 88 e0          	: add r8, r8, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 80 88 e0          	: add r8, r8, ip, asr #32
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 80 88 e0          	: add r8, r8, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 81 88 e0          	: add r8, r8, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 82 88 e0          	: add r8, r8, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 84 88 e0          	: add r8, r8, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 88 88 e0          	: add r8, r8, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 90 88 e0          	: add sb, r8, ip
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c a0 88 e0          	: add sl, r8, ip
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c c0 88 e0          	: add ip, r8, ip
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be0. Hit: 1. Lifespan: 2. Instruction: 00000787. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 00 88 e0          	: add r0, r8, ip
 >> Lifespan countdown: 2. (0x80000be4)
 >> Lifespan countdown: 1. (0x80000be8)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 0. Instruction: 00000795. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c00
 >> Updated                     : 0x0000000080000c04
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x1
 >> Updated instruction            :  65 e0 1b e5          	: ldr lr, [fp, #-0x65]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x2
 >> Updated instruction            :  66 e0 1b e5          	: ldr lr, [fp, #-0x66]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x4
 >> Updated instruction            :  60 e0 1b e5          	: ldr lr, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x8
 >> Updated instruction            :  6c e0 1b e5          	: ldr lr, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x10
 >> Updated instruction            :  74 e0 1b e5          	: ldr lr, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x20
 >> Updated instruction            :  44 e0 1b e5          	: ldr lr, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x40
 >> Updated instruction            :  24 e0 1b e5          	: ldr lr, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x80
 >> Updated instruction            :  e4 e0 1b e5          	: ldr lr, [fp, #-0xe4]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x100
 >> Updated instruction            :  64 e1 1b e5          	: ldr lr, [fp, #-0x164]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x200
 >> Updated instruction            :  64 e2 1b e5          	: ldr lr, [fp, #-0x264]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x400
 >> Updated instruction            :  64 e4 1b e5          	: ldr lr, [fp, #-0x464]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x800
 >> Updated instruction            :  64 e8 1b e5          	: ldr lr, [fp, #-0x864]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x1000
 >> Updated instruction            :  64 f0 1b e5          	: ldr pc, [fp, #-0x64]
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 795.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x2000
 >> Updated instruction            :  64 c0 1b e5          	: ldr ip, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x4000
 >> Updated instruction            :  64 a0 1b e5          	: ldr sl, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c00. Hit: 1. Lifespan: 2. Instruction: 00000795. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 e0 1b e5          	: ldr lr, [fp, #-0x64]
 >> Mask                           :  0x8000
 >> Updated instruction            :  64 60 1b e5          	: ldr r6, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000c04)
 >> Lifespan countdown: 1. (0x80000c08)
 >> Reverting instruction          :  64 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 0. Instruction: 00000804. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c24
 >> Updated                     : 0x0000000080000c28
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x1
 >> Updated instruction            :  a0 8a 4e e3          	: movt r8, #0xeaa0
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x2
 >> Updated instruction            :  a3 8a 4e e3          	: movt r8, #0xeaa3
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x4
 >> Updated instruction            :  a5 8a 4e e3          	: movt r8, #0xeaa5
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x8
 >> Updated instruction            :  a9 8a 4e e3          	: movt r8, #0xeaa9
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x10
 >> Updated instruction            :  b1 8a 4e e3          	: movt r8, #0xeab1
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x20
 >> Updated instruction            :  81 8a 4e e3          	: movt r8, #0xea81
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x40
 >> Updated instruction            :  e1 8a 4e e3          	: movt r8, #0xeae1
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x80
 >> Updated instruction            :  21 8a 4e e3          	: movt r8, #0xea21
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x100
 >> Updated instruction            :  a1 8b 4e e3          	: movt r8, #0xeba1
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x200
 >> Updated instruction            :  a1 88 4e e3          	: movt r8, #0xe8a1
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x400
 >> Updated instruction            :  a1 8e 4e e3          	: movt r8, #0xeea1
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x800
 >> Updated instruction            :  a1 82 4e e3          	: movt r8, #0xe2a1
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x1000
 >> Updated instruction            :  a1 9a 4e e3          	: movt sb, #0xeaa1
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x2000
 >> Updated instruction            :  a1 aa 4e e3          	: movt sl, #0xeaa1
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x4000
 >> Updated instruction            :  a1 ca 4e e3          	: movt ip, #0xeaa1
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c24. Hit: 1. Lifespan: 2. Instruction: 00000804. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 8a 4e e3          	: movt r8, #0xeaa1
 >> Mask                           :  0x8000
 >> Updated instruction            :  a1 0a 4e e3          	: movt r0, #0xeaa1
 >> Lifespan countdown: 2. (0x80000c28)
 >> Lifespan countdown: 1. (0x80000c2c)
 >> Reverting instruction          :  a1 8a 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 0. Instruction: 00000813. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c48
 >> Updated                     : 0x0000000080000c4c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x1
 >> Updated instruction            :  5d 90 1b e5          	: ldr sb, [fp, #-0x5d]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x2
 >> Updated instruction            :  5e 90 1b e5          	: ldr sb, [fp, #-0x5e]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x4
 >> Updated instruction            :  58 90 1b e5          	: ldr sb, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x8
 >> Updated instruction            :  54 90 1b e5          	: ldr sb, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x10
 >> Updated instruction            :  4c 90 1b e5          	: ldr sb, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x20
 >> Updated instruction            :  7c 90 1b e5          	: ldr sb, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x40
 >> Updated instruction            :  1c 90 1b e5          	: ldr sb, [fp, #-0x1c]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x80
 >> Updated instruction            :  dc 90 1b e5          	: ldr sb, [fp, #-0xdc]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x100
 >> Updated instruction            :  5c 91 1b e5          	: ldr sb, [fp, #-0x15c]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x200
 >> Updated instruction            :  5c 92 1b e5          	: ldr sb, [fp, #-0x25c]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x400
 >> Updated instruction            :  5c 94 1b e5          	: ldr sb, [fp, #-0x45c]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x800
 >> Updated instruction            :  5c 98 1b e5          	: ldr sb, [fp, #-0x85c]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  5c 80 1b e5          	: ldr r8, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  5c b0 1b e5          	: ldr fp, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffcc, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 828.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  5c d0 1b e5          	: ldr sp, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c48. Hit: 1. Lifespan: 2. Instruction: 00000813. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 90 1b e5          	: ldr sb, [fp, #-0x5c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  5c 10 1b e5          	: ldr r1, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000c4c)
 >> Lifespan countdown: 1. (0x80000c50)
 >> Reverting instruction          :  5c 90 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 0. Instruction: 00000820. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c64
 >> Updated                     : 0x0000000080000c68
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x1
 >> Updated instruction            :  89 14 40 e3          	: movt r1, #0x489
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x2
 >> Updated instruction            :  8a 14 40 e3          	: movt r1, #0x48a
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x4
 >> Updated instruction            :  8c 14 40 e3          	: movt r1, #0x48c
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x8
 >> Updated instruction            :  80 14 40 e3          	: movt r1, #0x480
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x10
 >> Updated instruction            :  98 14 40 e3          	: movt r1, #0x498
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x20
 >> Updated instruction            :  a8 14 40 e3          	: movt r1, #0x4a8
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x40
 >> Updated instruction            :  c8 14 40 e3          	: movt r1, #0x4c8
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x80
 >> Updated instruction            :  08 14 40 e3          	: movt r1, #0x408
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x100
 >> Updated instruction            :  88 15 40 e3          	: movt r1, #0x588
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x200
 >> Updated instruction            :  88 16 40 e3          	: movt r1, #0x688
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x400
 >> Updated instruction            :  88 10 40 e3          	: movt r1, #0x88
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x800
 >> Updated instruction            :  88 1c 40 e3          	: movt r1, #0xc88
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x1000
 >> Updated instruction            :  88 04 40 e3          	: movt r0, #0x488
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x2000
 >> Updated instruction            :  88 34 40 e3          	: movt r3, #0x488
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x4000
 >> Updated instruction            :  88 54 40 e3          	: movt r5, #0x488
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c64. Hit: 1. Lifespan: 2. Instruction: 00000820. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  88 14 40 e3          	: movt r1, #0x488
 >> Mask                           :  0x8000
 >> Updated instruction            :  88 94 40 e3          	: movt sb, #0x488
 >> Lifespan countdown: 2. (0x80000c68)
 >> Lifespan countdown: 1. (0x80000c6c)
 >> Reverting instruction          :  88 14 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 0. Instruction: 00000825. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c78
 >> Updated                     : 0x0000000080000c7c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 90 2e e0          	: eor sb, lr, fp
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 90 2e e0          	: eor sb, lr, r8
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 90 2e e0          	: eor sb, lr, lr
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 90 2e e0          	: eor sb, lr, r2
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 90 2e e0          	: eor sb, lr, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 90 2e e0          	: eor sb, lr, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 90 2e e0          	: eor sb, lr, sl, asr #32
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 90 2e e0          	: eor sb, lr, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 91 2e e0          	: eor sb, lr, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 92 2e e0          	: eor sb, lr, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 94 2e e0          	: eor sb, lr, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 98 2e e0          	: eor sb, lr, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 80 2e e0          	: eor r8, lr, sl
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a b0 2e e0          	: eor fp, lr, sl
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000378fba52, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 828.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a d0 2e e0          	: eor sp, lr, sl
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c78. Hit: 1. Lifespan: 2. Instruction: 00000825. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 2e e0          	: eor sb, lr, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 10 2e e0          	: eor r1, lr, sl
 >> Lifespan countdown: 2. (0x80000c7c)
 >> Lifespan countdown: 1. (0x80000c80)
 >> Reverting instruction          :  0a 90 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 0. Instruction: 00000834. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c9c
 >> Updated                     : 0x0000000080000ca0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 e0 8e e0          	: add lr, lr, sb
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a e0 8e e0          	: add lr, lr, sl
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c e0 8e e0          	: add lr, lr, ip
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 e0 8e e0          	: add lr, lr, r0
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 e0 8e e0          	: add lr, lr, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 e0 8e e0          	: add lr, lr, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 e0 8e e0          	: add lr, lr, r8, asr #32
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 e0 8e e0          	: add lr, lr, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 e1 8e e0          	: add lr, lr, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 e2 8e e0          	: add lr, lr, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 e4 8e e0          	: add lr, lr, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 e8 8e e0          	: add lr, lr, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 f0 8e e0          	: add pc, lr, r8
 >!  Erm -  fetching from unmapped memory, address: 0xc4d85196, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 834.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 c0 8e e0          	: add ip, lr, r8
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 a0 8e e0          	: add sl, lr, r8
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c9c. Hit: 1. Lifespan: 2. Instruction: 00000834. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 e0 8e e0          	: add lr, lr, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 60 8e e0          	: add r6, lr, r8
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  08 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 0. Instruction: 00000842. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cbc
 >> Updated                     : 0x0000000080000cc0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x1
 >> Updated instruction            :  f9 0c 07 e3          	: movw r0, #0x7cf9
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x2
 >> Updated instruction            :  fa 0c 07 e3          	: movw r0, #0x7cfa
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x4
 >> Updated instruction            :  fc 0c 07 e3          	: movw r0, #0x7cfc
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x8
 >> Updated instruction            :  f0 0c 07 e3          	: movw r0, #0x7cf0
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x10
 >> Updated instruction            :  e8 0c 07 e3          	: movw r0, #0x7ce8
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x20
 >> Updated instruction            :  d8 0c 07 e3          	: movw r0, #0x7cd8
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x40
 >> Updated instruction            :  b8 0c 07 e3          	: movw r0, #0x7cb8
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x80
 >> Updated instruction            :  78 0c 07 e3          	: movw r0, #0x7c78
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x100
 >> Updated instruction            :  f8 0d 07 e3          	: movw r0, #0x7df8
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x200
 >> Updated instruction            :  f8 0e 07 e3          	: movw r0, #0x7ef8
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x400
 >> Updated instruction            :  f8 08 07 e3          	: movw r0, #0x78f8
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x800
 >> Updated instruction            :  f8 04 07 e3          	: movw r0, #0x74f8
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x1000
 >> Updated instruction            :  f8 1c 07 e3          	: movw r1, #0x7cf8
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x2000
 >> Updated instruction            :  f8 2c 07 e3          	: movw r2, #0x7cf8
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x4000
 >> Updated instruction            :  f8 4c 07 e3          	: movw r4, #0x7cf8
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cbc. Hit: 1. Lifespan: 2. Instruction: 00000842. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 0c 07 e3          	: movw r0, #0x7cf8
 >> Mask                           :  0x8000
 >> Updated instruction            :  f8 8c 07 e3          	: movw r8, #0x7cf8
 >> Lifespan countdown: 2. (0x80000cc0)
 >> Lifespan countdown: 1. (0x80000cc4)
 >> Reverting instruction          :  f8 0c 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 0. Instruction: 00000850. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cdc
 >> Updated                     : 0x0000000080000ce0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 90 89 e0          	: add sb, sb, r0
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 90 89 e0          	: add sb, sb, r3
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 90 89 e0          	: add sb, sb, r5
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 90 89 e0          	: add sb, sb, sb
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 90 89 e0          	: add sb, sb, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 90 89 e0          	: add sb, sb, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 90 89 e0          	: add sb, sb, r1, asr #32
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 90 89 e0          	: add sb, sb, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 91 89 e0          	: add sb, sb, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 92 89 e0          	: add sb, sb, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 94 89 e0          	: add sb, sb, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 98 89 e0          	: add sb, sb, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 80 89 e0          	: add r8, sb, r1
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 b0 89 e0          	: add fp, sb, r1
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000004a2348af, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 860.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 d0 89 e0          	: add sp, sb, r1
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cdc. Hit: 1. Lifespan: 2. Instruction: 00000850. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 89 e0          	: add sb, sb, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 10 89 e0          	: add r1, sb, r1
 >> Lifespan countdown: 2. (0x80000ce0)
 >> Lifespan countdown: 1. (0x80000ce4)
 >> Reverting instruction          :  01 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 0. Instruction: 00000858. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cfc
 >> Updated                     : 0x0000000080000d00
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x1
 >> Updated instruction            :  45 e2 02 e3          	: movw lr, #0x2245
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x2
 >> Updated instruction            :  46 e2 02 e3          	: movw lr, #0x2246
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x4
 >> Updated instruction            :  40 e2 02 e3          	: movw lr, #0x2240
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x8
 >> Updated instruction            :  4c e2 02 e3          	: movw lr, #0x224c
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x10
 >> Updated instruction            :  54 e2 02 e3          	: movw lr, #0x2254
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x20
 >> Updated instruction            :  64 e2 02 e3          	: movw lr, #0x2264
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x40
 >> Updated instruction            :  04 e2 02 e3          	: movw lr, #0x2204
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x80
 >> Updated instruction            :  c4 e2 02 e3          	: movw lr, #0x22c4
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x100
 >> Updated instruction            :  44 e3 02 e3          	: movw lr, #0x2344
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x200
 >> Updated instruction            :  44 e0 02 e3          	: movw lr, #0x2044
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x400
 >> Updated instruction            :  44 e6 02 e3          	: movw lr, #0x2644
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x800
 >> Updated instruction            :  44 ea 02 e3          	: movw lr, #0x2a44
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x1000
 >> Updated instruction            :  44 f2 02 e3          	: movw pc, #0x2244
 >!  Erm -  fetching from unmapped memory, address: 0x2244, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 858.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x2000
 >> Updated instruction            :  44 c2 02 e3          	: movw ip, #0x2244
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x4000
 >> Updated instruction            :  44 a2 02 e3          	: movw sl, #0x2244
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cfc. Hit: 1. Lifespan: 2. Instruction: 00000858. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 e2 02 e3          	: movw lr, #0x2244
 >> Mask                           :  0x8000
 >> Updated instruction            :  44 62 02 e3          	: movw r6, #0x2244
 >> Lifespan countdown: 2. (0x80000d00)
 >> Lifespan countdown: 1. (0x80000d04)
 >> Reverting instruction          :  44 e2 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 0. Instruction: 00000867. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d20
 >> Updated                     : 0x0000000080000d24
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x1
 >> Updated instruction            :  96 8f 0f e3          	: movw r8, #0xff96
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x2
 >> Updated instruction            :  95 8f 0f e3          	: movw r8, #0xff95
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x4
 >> Updated instruction            :  93 8f 0f e3          	: movw r8, #0xff93
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x8
 >> Updated instruction            :  9f 8f 0f e3          	: movw r8, #0xff9f
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x10
 >> Updated instruction            :  87 8f 0f e3          	: movw r8, #0xff87
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x20
 >> Updated instruction            :  b7 8f 0f e3          	: movw r8, #0xffb7
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x40
 >> Updated instruction            :  d7 8f 0f e3          	: movw r8, #0xffd7
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x80
 >> Updated instruction            :  17 8f 0f e3          	: movw r8, #0xff17
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x100
 >> Updated instruction            :  97 8e 0f e3          	: movw r8, #0xfe97
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x200
 >> Updated instruction            :  97 8d 0f e3          	: movw r8, #0xfd97
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x400
 >> Updated instruction            :  97 8b 0f e3          	: movw r8, #0xfb97
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x800
 >> Updated instruction            :  97 87 0f e3          	: movw r8, #0xf797
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x1000
 >> Updated instruction            :  97 9f 0f e3          	: movw sb, #0xff97
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x2000
 >> Updated instruction            :  97 af 0f e3          	: movw sl, #0xff97
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x4000
 >> Updated instruction            :  97 cf 0f e3          	: movw ip, #0xff97
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d20. Hit: 1. Lifespan: 2. Instruction: 00000867. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  97 8f 0f e3          	: movw r8, #0xff97
 >> Mask                           :  0x8000
 >> Updated instruction            :  97 0f 0f e3          	: movw r0, #0xff97
 >> Lifespan countdown: 2. (0x80000d24)
 >> Lifespan countdown: 1. (0x80000d28)
 >> Reverting instruction          :  97 8f 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 0. Instruction: 00000875. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d40
 >> Updated                     : 0x0000000080000d44
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x1
 >> Updated instruction            :  95 ab 4a e3          	: movt sl, #0xab95
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x2
 >> Updated instruction            :  96 ab 4a e3          	: movt sl, #0xab96
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x4
 >> Updated instruction            :  90 ab 4a e3          	: movt sl, #0xab90
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x8
 >> Updated instruction            :  9c ab 4a e3          	: movt sl, #0xab9c
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x10
 >> Updated instruction            :  84 ab 4a e3          	: movt sl, #0xab84
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x20
 >> Updated instruction            :  b4 ab 4a e3          	: movt sl, #0xabb4
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x40
 >> Updated instruction            :  d4 ab 4a e3          	: movt sl, #0xabd4
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x80
 >> Updated instruction            :  14 ab 4a e3          	: movt sl, #0xab14
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x100
 >> Updated instruction            :  94 aa 4a e3          	: movt sl, #0xaa94
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x200
 >> Updated instruction            :  94 a9 4a e3          	: movt sl, #0xa994
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x400
 >> Updated instruction            :  94 af 4a e3          	: movt sl, #0xaf94
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x800
 >> Updated instruction            :  94 a3 4a e3          	: movt sl, #0xa394
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x1000
 >> Updated instruction            :  94 bb 4a e3          	: movt fp, #0xab94
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ab94fec4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 879.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x2000
 >> Updated instruction            :  94 8b 4a e3          	: movt r8, #0xab94
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x4000
 >> Updated instruction            :  94 eb 4a e3          	: movt lr, #0xab94
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d40. Hit: 1. Lifespan: 2. Instruction: 00000875. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 ab 4a e3          	: movt sl, #0xab94
 >> Mask                           :  0x8000
 >> Updated instruction            :  94 2b 4a e3          	: movt r2, #0xab94
 >> Lifespan countdown: 2. (0x80000d44)
 >> Lifespan countdown: 1. (0x80000d48)
 >> Reverting instruction          :  94 ab 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 0. Instruction: 00000882. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d5c
 >> Updated                     : 0x0000000080000d60
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 50 25 e0          	: eor r5, r5, sp
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 50 25 e0          	: eor r5, r5, lr
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 50 25 e0          	: eor r5, r5, r8
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 50 25 e0          	: eor r5, r5, r4
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 50 25 e0          	: eor r5, r5, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 50 25 e0          	: eor r5, r5, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 50 25 e0          	: eor r5, r5, ip, asr #32
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 50 25 e0          	: eor r5, r5, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 51 25 e0          	: eor r5, r5, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 52 25 e0          	: eor r5, r5, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 54 25 e0          	: eor r5, r5, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 58 25 e0          	: eor r5, r5, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 40 25 e0          	: eor r4, r5, ip
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 70 25 e0          	: eor r7, r5, ip
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 10 25 e0          	: eor r1, r5, ip
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d5c. Hit: 1. Lifespan: 2. Instruction: 00000882. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 25 e0          	: eor r5, r5, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c d0 25 e0          	: eor sp, r5, ip
 >> Lifespan countdown: 2. (0x80000d60)
 >> Lifespan countdown: 1. (0x80000d64)
 >> Reverting instruction          :  0c 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 0. Instruction: 00000890. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d7c
 >> Updated                     : 0x0000000080000d80
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 00 80 e1          	: orr r0, r0, r0
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 00 80 e1          	: orr r0, r0, r3
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 00 80 e1          	: orr r0, r0, r5
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 00 80 e1          	: orr r0, r0, sb
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 00 80 e1          	: orr r0, r0, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 00 80 e1          	: orr r0, r0, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 00 80 e1          	: orr r0, r0, r1, asr #32
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 00 80 e1          	: orr r0, r0, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 01 80 e1          	: orr r0, r0, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 02 80 e1          	: orr r0, r0, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 04 80 e1          	: orr r0, r0, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 08 80 e1          	: orr r0, r0, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 10 80 e1          	: orr r1, r0, r1
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 20 80 e1          	: orr r2, r0, r1
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 40 80 e1          	: orr r4, r0, r1
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d7c. Hit: 1. Lifespan: 2. Instruction: 00000890. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e1          	: orr r0, r0, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 80 80 e1          	: orr r8, r0, r1
 >> Lifespan countdown: 2. (0x80000d80)
 >> Lifespan countdown: 1. (0x80000d84)
 >> Reverting instruction          :  01 00 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 0. Instruction: 00000898. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d9c
 >> Updated                     : 0x0000000080000da0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x1
 >> Updated instruction            :  61 0d 81 e0          	: add r0, r1, r1, ror #26
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x2
 >> Updated instruction            :  62 0d 81 e0          	: add r0, r1, r2, ror #26
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x4
 >> Updated instruction            :  64 0d 81 e0          	: add r0, r1, r4, ror #26
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x8
 >> Updated instruction            :  68 0d 81 e0          	: add r0, r1, r8, ror #26
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x10
 >> Updated instruction            :  70 0d 81 e0          	: add r0, r1, r0, ror sp
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x20
 >> Updated instruction            :  40 0d 81 e0          	: add r0, r1, r0, asr #26
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x40
 >> Updated instruction            :  20 0d 81 e0          	: add r0, r1, r0, lsr #26
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x80
 >> Updated instruction            :  e0 0d 81 e0          	: add r0, r1, r0, ror #27
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x100
 >> Updated instruction            :  60 0c 81 e0          	: add r0, r1, r0, ror #24
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x200
 >> Updated instruction            :  60 0f 81 e0          	: add r0, r1, r0, ror #30
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x400
 >> Updated instruction            :  60 09 81 e0          	: add r0, r1, r0, ror #18
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x800
 >> Updated instruction            :  60 05 81 e0          	: add r0, r1, r0, ror #10
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x1000
 >> Updated instruction            :  60 1d 81 e0          	: add r1, r1, r0, ror #26
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x2000
 >> Updated instruction            :  60 2d 81 e0          	: add r2, r1, r0, ror #26
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x4000
 >> Updated instruction            :  60 4d 81 e0          	: add r4, r1, r0, ror #26
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d9c. Hit: 1. Lifespan: 2. Instruction: 00000898. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0d 81 e0          	: add r0, r1, r0, ror #26
 >> Mask                           :  0x8000
 >> Updated instruction            :  60 8d 81 e0          	: add r8, r1, r0, ror #26
 >> Lifespan countdown: 2. (0x80000da0)
 >> Lifespan countdown: 1. (0x80000da4)
 >> Reverting instruction          :  60 0d 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 0. Instruction: 00000906. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000dbc
 >> Updated                     : 0x0000000080000dc0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x1
 >> Updated instruction            :  7c 14 0f e3          	: movw r1, #0xf47c
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x2
 >> Updated instruction            :  7f 14 0f e3          	: movw r1, #0xf47f
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x4
 >> Updated instruction            :  79 14 0f e3          	: movw r1, #0xf479
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x8
 >> Updated instruction            :  75 14 0f e3          	: movw r1, #0xf475
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x10
 >> Updated instruction            :  6d 14 0f e3          	: movw r1, #0xf46d
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x20
 >> Updated instruction            :  5d 14 0f e3          	: movw r1, #0xf45d
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x40
 >> Updated instruction            :  3d 14 0f e3          	: movw r1, #0xf43d
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x80
 >> Updated instruction            :  fd 14 0f e3          	: movw r1, #0xf4fd
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x100
 >> Updated instruction            :  7d 15 0f e3          	: movw r1, #0xf57d
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x200
 >> Updated instruction            :  7d 16 0f e3          	: movw r1, #0xf67d
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x400
 >> Updated instruction            :  7d 10 0f e3          	: movw r1, #0xf07d
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x800
 >> Updated instruction            :  7d 1c 0f e3          	: movw r1, #0xfc7d
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x1000
 >> Updated instruction            :  7d 04 0f e3          	: movw r0, #0xf47d
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x2000
 >> Updated instruction            :  7d 34 0f e3          	: movw r3, #0xf47d
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x4000
 >> Updated instruction            :  7d 54 0f e3          	: movw r5, #0xf47d
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dbc. Hit: 1. Lifespan: 2. Instruction: 00000906. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7d 14 0f e3          	: movw r1, #0xf47d
 >> Mask                           :  0x8000
 >> Updated instruction            :  7d 94 0f e3          	: movw sb, #0xf47d
 >> Lifespan countdown: 2. (0x80000dc0)
 >> Lifespan countdown: 1. (0x80000dc4)
 >> Reverting instruction          :  7d 14 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 0. Instruction: 00000913. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000dd8
 >> Updated                     : 0x0000000080000ddc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 80 e0 e1          	: mvn r8, r5
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 80 e0 e1          	: mvn r8, r6
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 80 e0 e1          	: mvn r8, r0
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 80 e0 e1          	: mvn r8, ip
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 80 e0 e1          	: mvn r8, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 80 e0 e1          	: mvn r8, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 80 e0 e1          	: mvn r8, r4, asr #32
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 80 e0 e1          	: mvn r8, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 81 e0 e1          	: mvn r8, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 82 e0 e1          	: mvn r8, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 84 e0 e1          	: mvn r8, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 88 e0 e1          	: mvn r8, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 90 e0 e1          	: mvn sb, r4
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 a0 e0 e1          	: mvn sl, r4
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 c0 e0 e1          	: mvn ip, r4
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd8. Hit: 1. Lifespan: 2. Instruction: 00000913. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 e0 e1          	: mvn r8, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 00 e0 e1          	: mvn r0, r4
 >> Lifespan countdown: 2. (0x80000ddc)
 >> Lifespan countdown: 1. (0x80000de0)
 >> Reverting instruction          :  04 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 0. Instruction: 00000921. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000df8
 >> Updated                     : 0x0000000080000dfc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 e0 8e e0          	: add lr, lr, r5
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 e0 8e e0          	: add lr, lr, r6
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 e0 8e e0          	: add lr, lr, r0
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c e0 8e e0          	: add lr, lr, ip
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 e0 8e e0          	: add lr, lr, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 e0 8e e0          	: add lr, lr, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 e0 8e e0          	: add lr, lr, r4, asr #32
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 e0 8e e0          	: add lr, lr, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 e1 8e e0          	: add lr, lr, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 e2 8e e0          	: add lr, lr, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 e4 8e e0          	: add lr, lr, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 e8 8e e0          	: add lr, lr, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 f0 8e e0          	: add pc, lr, r4
 >!  Erm -  fetching from unmapped memory, address: 0x27242050, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 921.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 c0 8e e0          	: add ip, lr, r4
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 a0 8e e0          	: add sl, lr, r4
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df8. Hit: 1. Lifespan: 2. Instruction: 00000921. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 e0 8e e0          	: add lr, lr, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 60 8e e0          	: add r6, lr, r4
 >> Lifespan countdown: 2. (0x80000dfc)
 >> Lifespan countdown: 1. (0x80000e00)
 >> Reverting instruction          :  04 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 0. Instruction: 00000928. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e14
 >> Updated                     : 0x0000000080000e18
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x1
 >> Updated instruction            :  e7 65 87 e0          	: add r6, r7, r7, ror #11
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x2
 >> Updated instruction            :  e4 65 87 e0          	: add r6, r7, r4, ror #11
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x4
 >> Updated instruction            :  e2 65 87 e0          	: add r6, r7, r2, ror #11
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x8
 >> Updated instruction            :  ee 65 87 e0          	: add r6, r7, lr, ror #11
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x10
 >> Updated instruction            :  f6 65 87 e0          	: strd r6, r7, [r7], r6
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1cbc3b19, value: 0xabebde6a!! Count 929 Skipping to end.
 >> Run result: Fault errored program - last instruction: 928.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x20
 >> Updated instruction            :  c6 65 87 e0          	: add r6, r7, r6, asr #11
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x40
 >> Updated instruction            :  a6 65 87 e0          	: add r6, r7, r6, lsr #11
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x80
 >> Updated instruction            :  66 65 87 e0          	: add r6, r7, r6, ror #10
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x100
 >> Updated instruction            :  e6 64 87 e0          	: add r6, r7, r6, ror #9
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x200
 >> Updated instruction            :  e6 67 87 e0          	: add r6, r7, r6, ror #15
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x400
 >> Updated instruction            :  e6 61 87 e0          	: add r6, r7, r6, ror #3
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x800
 >> Updated instruction            :  e6 6d 87 e0          	: add r6, r7, r6, ror #27
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x1000
 >> Updated instruction            :  e6 75 87 e0          	: add r7, r7, r6, ror #11
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x2000
 >> Updated instruction            :  e6 45 87 e0          	: add r4, r7, r6, ror #11
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x4000
 >> Updated instruction            :  e6 25 87 e0          	: add r2, r7, r6, ror #11
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e14. Hit: 1. Lifespan: 2. Instruction: 00000928. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 65 87 e0          	: add r6, r7, r6, ror #11
 >> Mask                           :  0x8000
 >> Updated instruction            :  e6 e5 87 e0          	: add lr, r7, r6, ror #11
 >> Lifespan countdown: 2. (0x80000e18)
 >> Lifespan countdown: 1. (0x80000e1c)
 >> Reverting instruction          :  e6 65 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 0. Instruction: 00000933. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e28
 >> Updated                     : 0x0000000080000e2c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x1
 >> Updated instruction            :  5d c0 1b e5          	: ldr ip, [fp, #-0x5d]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x2
 >> Updated instruction            :  5e c0 1b e5          	: ldr ip, [fp, #-0x5e]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x4
 >> Updated instruction            :  58 c0 1b e5          	: ldr ip, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x8
 >> Updated instruction            :  54 c0 1b e5          	: ldr ip, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x10
 >> Updated instruction            :  4c c0 1b e5          	: ldr ip, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x20
 >> Updated instruction            :  7c c0 1b e5          	: ldr ip, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x40
 >> Updated instruction            :  1c c0 1b e5          	: ldr ip, [fp, #-0x1c]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x80
 >> Updated instruction            :  dc c0 1b e5          	: ldr ip, [fp, #-0xdc]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x100
 >> Updated instruction            :  5c c1 1b e5          	: ldr ip, [fp, #-0x15c]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x200
 >> Updated instruction            :  5c c2 1b e5          	: ldr ip, [fp, #-0x25c]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x400
 >> Updated instruction            :  5c c4 1b e5          	: ldr ip, [fp, #-0x45c]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x800
 >> Updated instruction            :  5c c8 1b e5          	: ldr ip, [fp, #-0x85c]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  5c d0 1b e5          	: ldr sp, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  5c e0 1b e5          	: ldr lr, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  5c 80 1b e5          	: ldr r8, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e28. Hit: 1. Lifespan: 2. Instruction: 00000933. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c c0 1b e5          	: ldr ip, [fp, #-0x5c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  5c 40 1b e5          	: ldr r4, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000e2c)
 >> Lifespan countdown: 1. (0x80000e30)
 >> Reverting instruction          :  5c c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 0. Instruction: 00000943. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e50
 >> Updated                     : 0x0000000080000e54
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 c0 e0 e1          	: mvn ip, r4
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 c0 e0 e1          	: mvn ip, r7
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 c0 e0 e1          	: mvn ip, r1
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d c0 e0 e1          	: mvn ip, sp
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 c0 e0 e1          	: mvn ip, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 c0 e0 e1          	: mvn ip, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 c0 e0 e1          	: mvn ip, r5, asr #32
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 c0 e0 e1          	: mvn ip, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 c1 e0 e1          	: mvn ip, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 c2 e0 e1          	: mvn ip, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 c4 e0 e1          	: mvn ip, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 c8 e0 e1          	: mvn ip, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 d0 e0 e1          	: mvn sp, r5
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 e0 e0 e1          	: mvn lr, r5
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 80 e0 e1          	: mvn r8, r5
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e50. Hit: 1. Lifespan: 2. Instruction: 00000943. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 e0 e1          	: mvn ip, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 40 e0 e1          	: mvn r4, r5
 >> Lifespan countdown: 2. (0x80000e54)
 >> Lifespan countdown: 1. (0x80000e58)
 >> Reverting instruction          :  05 c0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 0. Instruction: 00000951. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e70
 >> Updated                     : 0x0000000080000e74
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x1
 >> Updated instruction            :  09 7e 44 e3          	: movt r7, #0x4e09
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 7e 44 e3          	: movt r7, #0x4e0a
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 7e 44 e3          	: movt r7, #0x4e0c
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x8
 >> Updated instruction            :  00 7e 44 e3          	: movt r7, #0x4e00
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x10
 >> Updated instruction            :  18 7e 44 e3          	: movt r7, #0x4e18
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x20
 >> Updated instruction            :  28 7e 44 e3          	: movt r7, #0x4e28
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x40
 >> Updated instruction            :  48 7e 44 e3          	: movt r7, #0x4e48
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x80
 >> Updated instruction            :  88 7e 44 e3          	: movt r7, #0x4e88
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x100
 >> Updated instruction            :  08 7f 44 e3          	: movt r7, #0x4f08
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x200
 >> Updated instruction            :  08 7c 44 e3          	: movt r7, #0x4c08
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x400
 >> Updated instruction            :  08 7a 44 e3          	: movt r7, #0x4a08
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x800
 >> Updated instruction            :  08 76 44 e3          	: movt r7, #0x4608
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 6e 44 e3          	: movt r6, #0x4e08
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 5e 44 e3          	: movt r5, #0x4e08
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 3e 44 e3          	: movt r3, #0x4e08
 >> Lifespan countdown: 2. (0x80000e74)
 >> Lifespan countdown: 1. (0x80000e78)
 >> Reverting instruction          :  08 7e 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e70. Hit: 1. Lifespan: 2. Instruction: 00000951. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 7e 44 e3          	: movt r7, #0x4e08
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 fe 44 e3          	: movt pc, #0x4e08
 >!  Erm -  fetching from unmapped memory, address: 0x4e080e78, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 951.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 0. Instruction: 00000959. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e90
 >> Updated                     : 0x0000000080000e94
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x1
 >> Updated instruction            :  55 10 1b e5          	: ldr r1, [fp, #-0x55]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x2
 >> Updated instruction            :  56 10 1b e5          	: ldr r1, [fp, #-0x56]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x4
 >> Updated instruction            :  50 10 1b e5          	: ldr r1, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x8
 >> Updated instruction            :  5c 10 1b e5          	: ldr r1, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x10
 >> Updated instruction            :  44 10 1b e5          	: ldr r1, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x20
 >> Updated instruction            :  74 10 1b e5          	: ldr r1, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x40
 >> Updated instruction            :  14 10 1b e5          	: ldr r1, [fp, #-0x14]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x80
 >> Updated instruction            :  d4 10 1b e5          	: ldr r1, [fp, #-0xd4]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x100
 >> Updated instruction            :  54 11 1b e5          	: ldr r1, [fp, #-0x154]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x200
 >> Updated instruction            :  54 12 1b e5          	: ldr r1, [fp, #-0x254]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x400
 >> Updated instruction            :  54 14 1b e5          	: ldr r1, [fp, #-0x454]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x800
 >> Updated instruction            :  54 18 1b e5          	: ldr r1, [fp, #-0x854]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x1000
 >> Updated instruction            :  54 00 1b e5          	: ldr r0, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x2000
 >> Updated instruction            :  54 30 1b e5          	: ldr r3, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x4000
 >> Updated instruction            :  54 50 1b e5          	: ldr r5, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e90. Hit: 1. Lifespan: 2. Instruction: 00000959. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x8000
 >> Updated instruction            :  54 90 1b e5          	: ldr sb, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000e94)
 >> Lifespan countdown: 1. (0x80000e98)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 0. Instruction: 00000967. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000eb0
 >> Updated                     : 0x0000000080000eb4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x1
 >> Updated instruction            :  34 52 0f e3          	: movw r5, #0xf234
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x2
 >> Updated instruction            :  37 52 0f e3          	: movw r5, #0xf237
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x4
 >> Updated instruction            :  31 52 0f e3          	: movw r5, #0xf231
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x8
 >> Updated instruction            :  3d 52 0f e3          	: movw r5, #0xf23d
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x10
 >> Updated instruction            :  25 52 0f e3          	: movw r5, #0xf225
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x20
 >> Updated instruction            :  15 52 0f e3          	: movw r5, #0xf215
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x40
 >> Updated instruction            :  75 52 0f e3          	: movw r5, #0xf275
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x80
 >> Updated instruction            :  b5 52 0f e3          	: movw r5, #0xf2b5
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x100
 >> Updated instruction            :  35 53 0f e3          	: movw r5, #0xf335
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x200
 >> Updated instruction            :  35 50 0f e3          	: movw r5, #0xf035
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x400
 >> Updated instruction            :  35 56 0f e3          	: movw r5, #0xf635
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x800
 >> Updated instruction            :  35 5a 0f e3          	: movw r5, #0xfa35
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x1000
 >> Updated instruction            :  35 42 0f e3          	: movw r4, #0xf235
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x2000
 >> Updated instruction            :  35 72 0f e3          	: movw r7, #0xf235
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x4000
 >> Updated instruction            :  35 12 0f e3          	: movw r1, #0xf235
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb0. Hit: 1. Lifespan: 2. Instruction: 00000967. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  35 52 0f e3          	: movw r5, #0xf235
 >> Mask                           :  0x8000
 >> Updated instruction            :  35 d2 0f e3          	: movw sp, #0xf235
 >> Lifespan countdown: 2. (0x80000eb4)
 >> Lifespan countdown: 1. (0x80000eb8)
 >> Reverting instruction          :  35 52 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 0. Instruction: 00000976. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ed4
 >> Updated                     : 0x0000000080000ed8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 80 88 e0          	: add r8, r8, r3
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 80 88 e0          	: add r8, r8, r0
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 80 88 e0          	: add r8, r8, r6
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 80 88 e0          	: add r8, r8, sl
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 80 88 e0          	: add r8, r8, r2, lsl r0
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 80 88 e0          	: add r8, r8, r2, lsr #32
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 80 88 e0          	: add r8, r8, r2, asr #32
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 80 88 e0          	: add r8, r8, r2, lsl #1
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 81 88 e0          	: add r8, r8, r2, lsl #2
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 82 88 e0          	: add r8, r8, r2, lsl #4
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 84 88 e0          	: add r8, r8, r2, lsl #8
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 88 88 e0          	: add r8, r8, r2, lsl #16
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 90 88 e0          	: add sb, r8, r2
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 a0 88 e0          	: add sl, r8, r2
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 c0 88 e0          	: add ip, r8, r2
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed4. Hit: 1. Lifespan: 2. Instruction: 00000976. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 80 88 e0          	: add r8, r8, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 00 88 e0          	: add r0, r8, r2
 >> Lifespan countdown: 2. (0x80000ed8)
 >> Lifespan countdown: 1. (0x80000edc)
 >> Reverting instruction          :  02 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 0. Instruction: 00000984. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ef4
 >> Updated                     : 0x0000000080000ef8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 10 81 e0          	: add r1, r1, r8
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b 10 81 e0          	: add r1, r1, fp
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d 10 81 e0          	: add r1, r1, sp
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 10 81 e0          	: add r1, r1, r1
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 10 81 e0          	: add r1, r1, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 10 81 e0          	: add r1, r1, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 10 81 e0          	: add r1, r1, sb, asr #32
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 10 81 e0          	: add r1, r1, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 11 81 e0          	: add r1, r1, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 12 81 e0          	: add r1, r1, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 14 81 e0          	: add r1, r1, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 18 81 e0          	: add r1, r1, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 00 81 e0          	: add r0, r1, sb
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 30 81 e0          	: add r3, r1, sb
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 50 81 e0          	: add r5, r1, sb
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef4. Hit: 1. Lifespan: 2. Instruction: 00000984. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 90 81 e0          	: add sb, r1, sb
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 0. Instruction: 00000995. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f20
 >> Updated                     : 0x0000000080000f24
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x1
 >> Updated instruction            :  90 e3 0d e3          	: movw lr, #0xd390
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x2
 >> Updated instruction            :  93 e3 0d e3          	: movw lr, #0xd393
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x4
 >> Updated instruction            :  95 e3 0d e3          	: movw lr, #0xd395
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x8
 >> Updated instruction            :  99 e3 0d e3          	: movw lr, #0xd399
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x10
 >> Updated instruction            :  81 e3 0d e3          	: movw lr, #0xd381
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x20
 >> Updated instruction            :  b1 e3 0d e3          	: movw lr, #0xd3b1
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x40
 >> Updated instruction            :  d1 e3 0d e3          	: movw lr, #0xd3d1
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x80
 >> Updated instruction            :  11 e3 0d e3          	: movw lr, #0xd311
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x100
 >> Updated instruction            :  91 e2 0d e3          	: movw lr, #0xd291
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x200
 >> Updated instruction            :  91 e1 0d e3          	: movw lr, #0xd191
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x400
 >> Updated instruction            :  91 e7 0d e3          	: movw lr, #0xd791
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x800
 >> Updated instruction            :  91 eb 0d e3          	: movw lr, #0xdb91
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x1000
 >> Updated instruction            :  91 f3 0d e3          	: movw pc, #0xd391
 >!  Erm -  fetching from unmapped memory, address: 0xd390, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 995.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x2000
 >> Updated instruction            :  91 c3 0d e3          	: movw ip, #0xd391
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x4000
 >> Updated instruction            :  91 a3 0d e3          	: movw sl, #0xd391
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f20. Hit: 1. Lifespan: 2. Instruction: 00000995. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  91 e3 0d e3          	: movw lr, #0xd391
 >> Mask                           :  0x8000
 >> Updated instruction            :  91 63 0d e3          	: movw r6, #0xd391
 >> Lifespan countdown: 2. (0x80000f24)
 >> Lifespan countdown: 1. (0x80000f28)
 >> Reverting instruction          :  91 e3 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 0. Instruction: 00001003. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f40
 >> Updated                     : 0x0000000080000f44
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 20 e0 e1          	: mvn r2, r1
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 20 e0 e1          	: mvn r2, r2
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 20 e0 e1          	: mvn r2, r4
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 20 e0 e1          	: mvn r2, r8
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 20 e0 e1          	: mvn r2, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 20 e0 e1          	: mvn r2, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 20 e0 e1          	: mvn r2, r0, asr #32
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 20 e0 e1          	: mvn r2, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 21 e0 e1          	: mvn r2, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 22 e0 e1          	: mvn r2, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 24 e0 e1          	: mvn r2, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 28 e0 e1          	: mvn r2, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 30 e0 e1          	: mvn r3, r0
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 00 e0 e1          	: mvn r0, r0
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 60 e0 e1          	: mvn r6, r0
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f40. Hit: 1. Lifespan: 2. Instruction: 00001003. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 e0 e1          	: mvn r2, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 a0 e0 e1          	: mvn sl, r0
 >> Lifespan countdown: 2. (0x80000f44)
 >> Lifespan countdown: 1. (0x80000f48)
 >> Reverting instruction          :  00 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 0. Instruction: 00001012. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f64
 >> Updated                     : 0x0000000080000f68
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 c0 8c e0          	: add ip, ip, r7
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 c0 8c e0          	: add ip, ip, r4
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 c0 8c e0          	: add ip, ip, r2
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e c0 8c e0          	: add ip, ip, lr
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 c0 8c e0          	: add ip, ip, r6, lsl r0
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 c0 8c e0          	: add ip, ip, r6, lsr #32
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 c0 8c e0          	: add ip, ip, r6, asr #32
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 c0 8c e0          	: add ip, ip, r6, lsl #1
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 c1 8c e0          	: add ip, ip, r6, lsl #2
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 c2 8c e0          	: add ip, ip, r6, lsl #4
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 c4 8c e0          	: add ip, ip, r6, lsl #8
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 c8 8c e0          	: add ip, ip, r6, lsl #16
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 d0 8c e0          	: add sp, ip, r6
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 e0 8c e0          	: add lr, ip, r6
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 80 8c e0          	: add r8, ip, r6
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f64. Hit: 1. Lifespan: 2. Instruction: 00001012. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 8c e0          	: add ip, ip, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 40 8c e0          	: add r4, ip, r6
 >> Lifespan countdown: 2. (0x80000f68)
 >> Lifespan countdown: 1. (0x80000f6c)
 >> Reverting instruction          :  06 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 0. Instruction: 00001019. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f80
 >> Updated                     : 0x0000000080000f84
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x1
 >> Updated instruction            :  41 20 1b e5          	: ldr r2, [fp, #-0x41]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x2
 >> Updated instruction            :  42 20 1b e5          	: ldr r2, [fp, #-0x42]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x4
 >> Updated instruction            :  44 20 1b e5          	: ldr r2, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x8
 >> Updated instruction            :  48 20 1b e5          	: ldr r2, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x10
 >> Updated instruction            :  50 20 1b e5          	: ldr r2, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x20
 >> Updated instruction            :  60 20 1b e5          	: ldr r2, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x40
 >> Updated instruction            :  00 20 1b e5          	: ldr r2, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x80
 >> Updated instruction            :  c0 20 1b e5          	: ldr r2, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x100
 >> Updated instruction            :  40 21 1b e5          	: ldr r2, [fp, #-0x140]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x200
 >> Updated instruction            :  40 22 1b e5          	: ldr r2, [fp, #-0x240]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x400
 >> Updated instruction            :  40 24 1b e5          	: ldr r2, [fp, #-0x440]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x800
 >> Updated instruction            :  40 28 1b e5          	: ldr r2, [fp, #-0x840]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x1000
 >> Updated instruction            :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x2000
 >> Updated instruction            :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x4000
 >> Updated instruction            :  40 60 1b e5          	: ldr r6, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f80. Hit: 1. Lifespan: 2. Instruction: 00001019. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Mask                           :  0x8000
 >> Updated instruction            :  40 a0 1b e5          	: ldr sl, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000f84)
 >> Lifespan countdown: 1. (0x80000f88)
 >> Reverting instruction          :  40 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 0. Instruction: 00001027. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fa0
 >> Updated                     : 0x0000000080000fa4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x1
 >> Updated instruction            :  3d 40 1b e5          	: ldr r4, [fp, #-0x3d]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x2
 >> Updated instruction            :  3e 40 1b e5          	: ldr r4, [fp, #-0x3e]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x4
 >> Updated instruction            :  38 40 1b e5          	: ldr r4, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x8
 >> Updated instruction            :  34 40 1b e5          	: ldr r4, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x10
 >> Updated instruction            :  2c 40 1b e5          	: ldr r4, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x20
 >> Updated instruction            :  1c 40 1b e5          	: ldr r4, [fp, #-0x1c]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x40
 >> Updated instruction            :  7c 40 1b e5          	: ldr r4, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x80
 >> Updated instruction            :  bc 40 1b e5          	: ldr r4, [fp, #-0xbc]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x100
 >> Updated instruction            :  3c 41 1b e5          	: ldr r4, [fp, #-0x13c]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x200
 >> Updated instruction            :  3c 42 1b e5          	: ldr r4, [fp, #-0x23c]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x400
 >> Updated instruction            :  3c 44 1b e5          	: ldr r4, [fp, #-0x43c]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x800
 >> Updated instruction            :  3c 48 1b e5          	: ldr r4, [fp, #-0x83c]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  3c 50 1b e5          	: ldr r5, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  3c 60 1b e5          	: ldr r6, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  3c 00 1b e5          	: ldr r0, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa0. Hit: 1. Lifespan: 2. Instruction: 00001027. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 40 1b e5          	: ldr r4, [fp, #-0x3c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  3c c0 1b e5          	: ldr ip, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fa4)
 >> Lifespan countdown: 1. (0x80000fa8)
 >> Reverting instruction          :  3c 40 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 0. Instruction: 00001036. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fc4
 >> Updated                     : 0x0000000080000fc8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x1
 >> Updated instruction            :  3d 30 0b e5          	: str r3, [fp, #-0x3d]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x2
 >> Updated instruction            :  3e 30 0b e5          	: str r3, [fp, #-0x3e]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x4
 >> Updated instruction            :  38 30 0b e5          	: str r3, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x8
 >> Updated instruction            :  34 30 0b e5          	: str r3, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x10
 >> Updated instruction            :  2c 30 0b e5          	: str r3, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc78cb6ce, value: 0x2578ea84!! Count 1042 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1041.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x20
 >> Updated instruction            :  1c 30 0b e5          	: str r3, [fp, #-0x1c]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc78cb6c6, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x40
 >> Updated instruction            :  7c 30 0b e5          	: str r3, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x80
 >> Updated instruction            :  bc 30 0b e5          	: str r3, [fp, #-0xbc]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x100
 >> Updated instruction            :  3c 31 0b e5          	: str r3, [fp, #-0x13c]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x200
 >> Updated instruction            :  3c 32 0b e5          	: str r3, [fp, #-0x23c]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x400
 >> Updated instruction            :  3c 34 0b e5          	: str r3, [fp, #-0x43c]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x800
 >> Updated instruction            :  3c 38 0b e5          	: str r3, [fp, #-0x83c]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  3c 20 0b e5          	: str r2, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  3c 10 0b e5          	: str r1, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  3c 70 0b e5          	: str r7, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc4. Hit: 1. Lifespan: 2. Instruction: 00001036. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 0b e5          	: str r3, [fp, #-0x3c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  3c b0 0b e5          	: str fp, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fc8)
 >> Lifespan countdown: 1. (0x80000fcc)
 >> Reverting instruction          :  3c 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 0. Instruction: 00001044. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fe4
 >> Updated                     : 0x0000000080000fe8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x1
 >> Updated instruction            :  11 30 82 e5          	: str r3, [r2, #0x11]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x2
 >> Updated instruction            :  12 30 82 e5          	: str r3, [r2, #0x12]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x4
 >> Updated instruction            :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x8
 >> Updated instruction            :  18 30 82 e5          	: str r3, [r2, #0x18]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x10
 >> Updated instruction            :  00 30 82 e5          	: str r3, [r2]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x20
 >> Updated instruction            :  30 30 82 e5          	: str r3, [r2, #0x30]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x40
 >> Updated instruction            :  50 30 82 e5          	: str r3, [r2, #0x50]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x80
 >> Updated instruction            :  90 30 82 e5          	: str r3, [r2, #0x90]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x100
 >> Updated instruction            :  10 31 82 e5          	: str r3, [r2, #0x110]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110070, value: 0x760cd705!! Count 1045 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1044.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x200
 >> Updated instruction            :  10 32 82 e5          	: str r3, [r2, #0x210]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110170, value: 0x760cd705!! Count 1045 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1044.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x400
 >> Updated instruction            :  10 34 82 e5          	: str r3, [r2, #0x410]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110370, value: 0x760cd705!! Count 1045 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1044.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x800
 >> Updated instruction            :  10 38 82 e5          	: str r3, [r2, #0x810]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110770, value: 0x760cd705!! Count 1045 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1044.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x1000
 >> Updated instruction            :  10 20 82 e5          	: str r2, [r2, #0x10]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x2000
 >> Updated instruction            :  10 10 82 e5          	: str r1, [r2, #0x10]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x4000
 >> Updated instruction            :  10 70 82 e5          	: str r7, [r2, #0x10]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe4. Hit: 1. Lifespan: 2. Instruction: 00001044. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Mask                           :  0x8000
 >> Updated instruction            :  10 b0 82 e5          	: str fp, [r2, #0x10]
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  10 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 0. Instruction: 00001053. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010dc
 >> Updated                     : 0x00000000800010e0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 c5 e5          	: strb r3, [r5, #2]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 c5 e5          	: strb r3, [r5, #8]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 c5 e5          	: strb r3, [r5, #0x10]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 c5 e5          	: strb r3, [r5, #0x20]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 c5 e5          	: strb r3, [r5, #0x40]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 c5 e5          	: strb r3, [r5, #0x80]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 c5 e5          	: strb r3, [r5, #0x100]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110050, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 c5 e5          	: strb r3, [r5, #0x200]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110150, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 c5 e5          	: strb r3, [r5, #0x400]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110350, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 c5 e5          	: strb r3, [r5, #0x800]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110750, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 c5 e5          	: strb r2, [r5]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 c5 e5          	: strb r1, [r5]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 c5 e5          	: strb r7, [r5]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010dc. Hit: 1. Lifespan: 2. Instruction: 00001053. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c5 e5          	: strb r3, [r5]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 c5 e5          	: strb fp, [r5]
 >> Lifespan countdown: 2. (0x800010e0)
 >> Lifespan countdown: 1. (0x800010e4)
 >> Reverting instruction          :  00 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 0. Instruction: 00001062. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001100
 >> Updated                     : 0x0000000080001104
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x1
 >> Updated instruction            :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x2
 >> Updated instruction            :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x4
 >> Updated instruction            :  00 30 c5 e5          	: strb r3, [r5]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x10
 >> Updated instruction            :  14 30 c5 e5          	: strb r3, [r5, #0x14]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x20
 >> Updated instruction            :  24 30 c5 e5          	: strb r3, [r5, #0x24]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x40
 >> Updated instruction            :  44 30 c5 e5          	: strb r3, [r5, #0x44]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x80
 >> Updated instruction            :  84 30 c5 e5          	: strb r3, [r5, #0x84]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x100
 >> Updated instruction            :  04 31 c5 e5          	: strb r3, [r5, #0x104]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110054, value: 0xc6!! Count 1063 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x200
 >> Updated instruction            :  04 32 c5 e5          	: strb r3, [r5, #0x204]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110154, value: 0xc6!! Count 1063 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x400
 >> Updated instruction            :  04 34 c5 e5          	: strb r3, [r5, #0x404]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110354, value: 0xc6!! Count 1063 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x800
 >> Updated instruction            :  04 38 c5 e5          	: strb r3, [r5, #0x804]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110754, value: 0xc6!! Count 1063 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 20 c5 e5          	: strb r2, [r5, #4]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 10 c5 e5          	: strb r1, [r5, #4]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 70 c5 e5          	: strb r7, [r5, #4]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001100. Hit: 1. Lifespan: 2. Instruction: 00001062. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 b0 c5 e5          	: strb fp, [r5, #4]
 >> Lifespan countdown: 2. (0x80001104)
 >> Lifespan countdown: 1. (0x80001108)
 >> Reverting instruction          :  04 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 0. Instruction: 00001067. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001114
 >> Updated                     : 0x0000000080001118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x1
 >> Updated instruction            :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x2
 >> Updated instruction            :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x4
 >> Updated instruction            :  02 30 c5 e5          	: strb r3, [r5, #2]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x10
 >> Updated instruction            :  16 30 c5 e5          	: strb r3, [r5, #0x16]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x20
 >> Updated instruction            :  26 30 c5 e5          	: strb r3, [r5, #0x26]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x40
 >> Updated instruction            :  46 30 c5 e5          	: strb r3, [r5, #0x46]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x80
 >> Updated instruction            :  86 30 c5 e5          	: strb r3, [r5, #0x86]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x100
 >> Updated instruction            :  06 31 c5 e5          	: strb r3, [r5, #0x106]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110056, value: 0x8c!! Count 1068 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1067.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x200
 >> Updated instruction            :  06 32 c5 e5          	: strb r3, [r5, #0x206]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110156, value: 0x8c!! Count 1068 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1067.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x400
 >> Updated instruction            :  06 34 c5 e5          	: strb r3, [r5, #0x406]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110356, value: 0x8c!! Count 1068 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1067.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x800
 >> Updated instruction            :  06 38 c5 e5          	: strb r3, [r5, #0x806]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110756, value: 0x8c!! Count 1068 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1067.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 20 c5 e5          	: strb r2, [r5, #6]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 10 c5 e5          	: strb r1, [r5, #6]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 70 c5 e5          	: strb r7, [r5, #6]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001114. Hit: 1. Lifespan: 2. Instruction: 00001067. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 b0 c5 e5          	: strb fp, [r5, #6]
 >> Lifespan countdown: 2. (0x80001118)
 >> Lifespan countdown: 1. (0x8000111c)
 >> Reverting instruction          :  06 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 0. Instruction: 00001078. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001140
 >> Updated                     : 0x0000000080001144
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x1
 >> Updated instruction            :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x2
 >> Updated instruction            :  09 30 c5 e5          	: strb r3, [r5, #9]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x4
 >> Updated instruction            :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x8
 >> Updated instruction            :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x10
 >> Updated instruction            :  1b 30 c5 e5          	: strb r3, [r5, #0x1b]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x20
 >> Updated instruction            :  2b 30 c5 e5          	: strb r3, [r5, #0x2b]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x40
 >> Updated instruction            :  4b 30 c5 e5          	: strb r3, [r5, #0x4b]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x80
 >> Updated instruction            :  8b 30 c5 e5          	: strb r3, [r5, #0x8b]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x100
 >> Updated instruction            :  0b 31 c5 e5          	: strb r3, [r5, #0x10b]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011005b, value: 0x76!! Count 1079 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1078.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x200
 >> Updated instruction            :  0b 32 c5 e5          	: strb r3, [r5, #0x20b]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011015b, value: 0x76!! Count 1079 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1078.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x400
 >> Updated instruction            :  0b 34 c5 e5          	: strb r3, [r5, #0x40b]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011035b, value: 0x76!! Count 1079 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1078.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x800
 >> Updated instruction            :  0b 38 c5 e5          	: strb r3, [r5, #0x80b]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011075b, value: 0x76!! Count 1079 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1078.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x1000
 >> Updated instruction            :  0b 20 c5 e5          	: strb r2, [r5, #0xb]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x2000
 >> Updated instruction            :  0b 10 c5 e5          	: strb r1, [r5, #0xb]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x4000
 >> Updated instruction            :  0b 70 c5 e5          	: strb r7, [r5, #0xb]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001140. Hit: 1. Lifespan: 2. Instruction: 00001078. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Mask                           :  0x8000
 >> Updated instruction            :  0b b0 c5 e5          	: strb fp, [r5, #0xb]
 >> Lifespan countdown: 2. (0x80001144)
 >> Lifespan countdown: 1. (0x80001148)
 >> Reverting instruction          :  0b 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 0. Instruction: 00001087. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001164
 >> Updated                     : 0x0000000080001168
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x1
 >> Updated instruction            :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x2
 >> Updated instruction            :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x4
 >> Updated instruction            :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x8
 >> Updated instruction            :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x10
 >> Updated instruction            :  1f 30 c5 e5          	: strb r3, [r5, #0x1f]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x20
 >> Updated instruction            :  2f 30 c5 e5          	: strb r3, [r5, #0x2f]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x40
 >> Updated instruction            :  4f 30 c5 e5          	: strb r3, [r5, #0x4f]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x80
 >> Updated instruction            :  8f 30 c5 e5          	: strb r3, [r5, #0x8f]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x100
 >> Updated instruction            :  0f 31 c5 e5          	: strb r3, [r5, #0x10f]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011005f, value: 0x79!! Count 1088 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1087.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x200
 >> Updated instruction            :  0f 32 c5 e5          	: strb r3, [r5, #0x20f]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011015f, value: 0x79!! Count 1088 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1087.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x400
 >> Updated instruction            :  0f 34 c5 e5          	: strb r3, [r5, #0x40f]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011035f, value: 0x79!! Count 1088 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1087.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x800
 >> Updated instruction            :  0f 38 c5 e5          	: strb r3, [r5, #0x80f]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011075f, value: 0x79!! Count 1088 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1087.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x1000
 >> Updated instruction            :  0f 20 c5 e5          	: strb r2, [r5, #0xf]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x2000
 >> Updated instruction            :  0f 10 c5 e5          	: strb r1, [r5, #0xf]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x4000
 >> Updated instruction            :  0f 70 c5 e5          	: strb r7, [r5, #0xf]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001164. Hit: 1. Lifespan: 2. Instruction: 00001087. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Mask                           :  0x8000
 >> Updated instruction            :  0f b0 c5 e5          	: strb fp, [r5, #0xf]
 >> Lifespan countdown: 2. (0x80001168)
 >> Lifespan countdown: 1. (0x8000116c)
 >> Reverting instruction          :  0f 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 0. Instruction: 00001093. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000084
 >> Updated                     : 0x0000000080000088
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 60 e2          	: rsb r3, r0, #1
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 60 e2          	: rsb r3, r0, #2
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 60 e2          	: rsb r3, r0, #4
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 60 e2          	: rsb r3, r0, #8
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 60 e2          	: rsb r3, r0, #0x10
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 60 e2          	: rsb r3, r0, #0x20
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 60 e2          	: rsb r3, r0, #0x40
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 60 e2          	: rsb r3, r0, #0x80
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 60 e2          	: rsb r3, r0, #0, #2
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 60 e2          	: rsb r3, r0, #0, #4
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 60 e2          	: rsb r3, r0, #0, #8
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 60 e2          	: rsb r3, r0, #0, #16
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 60 e2          	: rsb r2, r0, #0
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1278 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1277.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 60 e2          	: rsb r1, r0, #0
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 60 e2          	: rsb r7, r0, #0
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 2. Lifespan: 2. Instruction: 00001093. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 60 e2          	: rsb fp, r0, #0
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007feeffdf, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1282.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 0. Instruction: 00001101. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000a4
 >> Updated                     : 0x00000000800000a8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x1
 >> Updated instruction            :  0d b0 8d e2          	: add fp, sp, #0xd
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x2
 >> Updated instruction            :  0e b0 8d e2          	: add fp, sp, #0xe
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x4
 >> Updated instruction            :  08 b0 8d e2          	: add fp, sp, #8
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x8
 >> Updated instruction            :  04 b0 8d e2          	: add fp, sp, #4
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x10
 >> Updated instruction            :  1c b0 8d e2          	: add fp, sp, #0x1c
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x20
 >> Updated instruction            :  2c b0 8d e2          	: add fp, sp, #0x2c
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x40
 >> Updated instruction            :  4c b0 8d e2          	: add fp, sp, #0x4c
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x80
 >> Updated instruction            :  8c b0 8d e2          	: add fp, sp, #0x8c
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x100
 >> Updated instruction            :  0c b1 8d e2          	: add fp, sp, #12, #2
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x200
 >> Updated instruction            :  0c b2 8d e2          	: add fp, sp, #12, #4
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x400
 >> Updated instruction            :  0c b4 8d e2          	: add fp, sp, #12, #8
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x800
 >> Updated instruction            :  0c b8 8d e2          	: add fp, sp, #12, #16
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c a0 8d e2          	: add sl, sp, #0xc
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 90 8d e2          	: add sb, sp, #0xc
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c f0 8d e2          	: add pc, sp, #0xc
 >> Lifespan countdown: 2. (0x8010ff34)
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1102.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000a4. Hit: 2. Lifespan: 2. Instruction: 00001101. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c b0 8d e2          	: add fp, sp, #0xc
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 30 8d e2          	: add r3, sp, #0xc
 >> Lifespan countdown: 2. (0x800000a8)
 >> Lifespan countdown: 1. (0x800000ac)
 >> Reverting instruction          :  0c b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fe94, value: 0x0!! Count 1129 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1128.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 0. Instruction: 00001108. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000f0
 >> Updated                     : 0x00000000800000f4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 20 42 e0          	: sub r2, r2, r2
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 20 42 e0          	: sub r2, r2, r1
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 20 42 e0          	: sub r2, r2, r7
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 20 42 e0          	: sub r2, r2, fp
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 20 42 e0          	: sub r2, r2, r3, lsl r0
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 20 42 e0          	: sub r2, r2, r3, lsr #32
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 20 42 e0          	: sub r2, r2, r3, asr #32
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 20 42 e0          	: sub r2, r2, r3, lsl #1
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 21 42 e0          	: sub r2, r2, r3, lsl #2
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 22 42 e0          	: sub r2, r2, r3, lsl #4
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 24 42 e0          	: sub r2, r2, r3, lsl #8
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 28 42 e0          	: sub r2, r2, r3, lsl #16
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 30 42 e0          	: sub r3, r2, r3
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1125 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1124.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 00 42 e0          	: sub r0, r2, r3
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x98, value: 0x0!! Count 1117 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1116.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 60 42 e0          	: sub r6, r2, r3
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000098, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f0. Hit: 2. Lifespan: 2. Instruction: 00001108. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 a0 42 e0          	: sub sl, r2, r3
 >> Lifespan countdown: 2. (0x800000f4)
 >> Lifespan countdown: 1. (0x800000f8)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 0. Instruction: 00001114. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000108
 >> Updated                     : 0x000000008000010c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 a0 e3          	: mov r3, #1
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 a0 e3          	: mov r3, #2
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 a0 e3          	: mov r3, #4
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 a0 e3          	: mov r3, #8
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 a0 e3          	: mov r3, #0x10
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 a0 e3          	: mov r3, #0x20
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 a0 e3          	: mov r3, #0x40
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 a0 e3          	: mov r3, #0x80
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 a0 e3          	: mov r3, #0, #2
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 a0 e3          	: mov r3, #0, #4
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 a0 e3          	: mov r3, #0, #8
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 a0 e3          	: mov r3, #0, #16
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 a0 e3          	: mov r2, #0
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 a0 e3          	: mov r1, #0
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 a0 e3          	: mov r7, #0
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000108. Hit: 2. Lifespan: 2. Instruction: 00001114. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 a0 e3          	: mov fp, #0
 >> Lifespan countdown: 2. (0x8000010c)
 >> Lifespan countdown: 1. (0x80000110)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 0. Instruction: 00001123. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 12. Lifespan: 2. Instruction: 00001123. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 0. Instruction: 00001130. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1301 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1300.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1305 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1304.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1134 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1133.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1130.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1130.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1130.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1130.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1130.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1130.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1130.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1130.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 13. Lifespan: 2. Instruction: 00001130. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1130.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 0. Instruction: 00001136. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1149 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1148.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110078, value: 0x0!! Count 1141 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110178, value: 0x0!! Count 1141 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110378, value: 0x0!! Count 1141 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110778, value: 0x0!! Count 1141 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 15. Lifespan: 2. Instruction: 00001136. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 0. Instruction: 00001145. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 17. Lifespan: 2. Instruction: 00001145. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 0. Instruction: 00001153. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 19. Lifespan: 2. Instruction: 00001153. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 0. Instruction: 00001161. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 21. Lifespan: 2. Instruction: 00001161. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 0. Instruction: 00001167. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 23. Lifespan: 2. Instruction: 00001167. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 0. Instruction: 00001176. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110020, value: 0x0!! Count 1181 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1180.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100a0, value: 0x0!! Count 1181 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1180.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101a0, value: 0x0!! Count 1181 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1180.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103a0, value: 0x0!! Count 1181 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1180.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107a0, value: 0x0!! Count 1181 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1180.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 25. Lifespan: 2. Instruction: 00001176. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 0. Instruction: 00001183. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 27. Lifespan: 2. Instruction: 00001183. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 0. Instruction: 00001190. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1273 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1289 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1288.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1289 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1288.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1194 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1193.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 28. Lifespan: 2. Instruction: 00001190. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 0. Instruction: 00001199. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 31. Lifespan: 2. Instruction: 00001199. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 0. Instruction: 00001208. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110040, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100c0, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101c0, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103c0, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107c0, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 33. Lifespan: 2. Instruction: 00001208. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 0. Instruction: 00001216. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110008, value: 0x0!! Count 1221 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1220.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110048, value: 0x0!! Count 1221 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1220.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100c8, value: 0x0!! Count 1221 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1220.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101c8, value: 0x0!! Count 1221 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1220.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103c8, value: 0x0!! Count 1221 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1220.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107c8, value: 0x0!! Count 1221 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1220.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 35. Lifespan: 2. Instruction: 00001216. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 0. Instruction: 00001223. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 37. Lifespan: 2. Instruction: 00001223. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 0. Instruction: 00001230. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1234 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1233.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1230.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1230.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1230.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1230.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1230.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1230.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1230.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1230.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 38. Lifespan: 2. Instruction: 00001230. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1230.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 0. Instruction: 00001236. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011001c, value: 0x0!! Count 1241 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1240.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011005c, value: 0x0!! Count 1241 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1240.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100dc, value: 0x0!! Count 1241 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1240.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101dc, value: 0x0!! Count 1241 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1240.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103dc, value: 0x0!! Count 1241 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1240.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107dc, value: 0x0!! Count 1241 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1240.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 40. Lifespan: 2. Instruction: 00001236. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 0. Instruction: 00001245. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 42. Lifespan: 2. Instruction: 00001245. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 0. Instruction: 00001252. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011000c, value: 0x0!! Count 1257 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1256.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011002c, value: 0x0!! Count 1257 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1256.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011006c, value: 0x0!! Count 1257 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1256.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100ec, value: 0x0!! Count 1257 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1256.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101ec, value: 0x0!! Count 1257 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1256.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103ec, value: 0x0!! Count 1257 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1256.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107ec, value: 0x0!! Count 1257 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1256.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 44. Lifespan: 2. Instruction: 00001252. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 0. Instruction: 00001260. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110004, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110014, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110034, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110074, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100f4, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101f4, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103f4, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107f4, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 46. Lifespan: 2. Instruction: 00001260. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 0. Instruction: 00001269. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000124
 >> Updated                     : 0x0000000080000128
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 85 e0          	: add r0, r5, r2
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 85 e0          	: add r0, r5, r1
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 85 e0          	: add r0, r5, r7
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 85 e0          	: add r0, r5, fp
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 85 e0          	: add r0, r5, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 85 e0          	: add r0, r5, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 85 e0          	: add r0, r5, r3, asr #32
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 85 e0          	: add r0, r5, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 85 e0          	: add r0, r5, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 85 e0          	: add r0, r5, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 85 e0          	: add r0, r5, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 85 e0          	: add r0, r5, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 85 e0          	: add r1, r5, r3
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 85 e0          	: add r2, r5, r3
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 85 e0          	: add r4, r5, r3
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 2. Lifespan: 2. Instruction: 00001269. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 85 e0          	: add r8, r5, r3
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 0. Instruction: 00001278. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001304
 >> Updated                     : 0x0000000080001308
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x1
 >> Updated instruction            :  f2 fb ff eb          	: bl #0xffffffd0
 >> Lifespan countdown: 2. (0x800002d4)
 >> Lifespan countdown: 1. (0x80001308)
 >> Reverting instruction          :  f3 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x2
 >> Updated instruction            :  f1 fb ff eb          	: bl #0xffffffcc
 >> Lifespan countdown: 2. (0x800002d0)
 >> Lifespan countdown: 1. (0x800002c4)
 >> Reverting instruction          :  f3 fb ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1983 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1982.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x4
 >> Updated instruction            :  f7 fb ff eb          	: bl #0xffffffe4
 >> Lifespan countdown: 2. (0x800002e8)
 >> Lifespan countdown: 1. (0x800002ec)
 >> Reverting instruction          :  f3 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x8
 >> Updated instruction            :  fb fb ff eb          	: bl #0xfffffff4
 >> Lifespan countdown: 2. (0x800002f8)
 >> Lifespan countdown: 1. (0x800002fc)
 >> Reverting instruction          :  f3 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x10
 >> Updated instruction            :  e3 fb ff eb          	: bl #0xffffff94
 >> Lifespan countdown: 2. (0x80000298)
 >> Lifespan countdown: 1. (0x8000029c)
 >> Reverting instruction          :  f3 fb ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x20
 >> Updated instruction            :  d3 fb ff eb          	: bl #0xffffff54
 >> Lifespan countdown: 2. (0x80000258)
 >> Lifespan countdown: 1. (0x8000025c)
 >> Reverting instruction          :  f3 fb ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1300.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x40
 >> Updated instruction            :  b3 fb ff eb          	: bl #0xfffffed4
 >> Lifespan countdown: 2. (0x800001d8)
 >> Lifespan countdown: 1. (0x800001dc)
 >> Reverting instruction          :  f3 fb ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1323.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x80
 >> Updated instruction            :  73 fb ff eb          	: bl #0xfffffdd4
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  f3 fb ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1324.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x100
 >> Updated instruction            :  f3 fa ff eb          	: bl #0xfffffbd4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffed8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x200
 >> Updated instruction            :  f3 f9 ff eb          	: bl #0xfffff7d4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffad8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x400
 >> Updated instruction            :  f3 ff ff eb          	: bl #0xfd4
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  f3 fb ff eb 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x800
 >> Updated instruction            :  f3 f3 ff eb          	: bl #0xffffdfd4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe2d8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x1000
 >> Updated instruction            :  f3 eb ff eb          	: bl #0xffffbfd4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc2d8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x2000
 >> Updated instruction            :  f3 db ff eb          	: bl #0xffff7fd4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff82d8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x4000
 >> Updated instruction            :  f3 bb ff eb          	: bl #0xfffeffd4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff02d8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001304. Hit: 1. Lifespan: 2. Instruction: 00001278. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f3 fb ff eb          	: bl #0xffffffd4
 >> Mask                           :  0x8000
 >> Updated instruction            :  f3 7b ff eb          	: bl #0xfffdffd4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe02d8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 0. Instruction: 00001284. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800002fc
 >> Updated                     : 0x0000000080000300
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x1
 >> Updated instruction            :  f8 ff ff 1a          	: bne #0xfe8
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  f9 ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x2
 >> Updated instruction            :  fb ff ff 1a          	: bne #0xff4
 >> Lifespan countdown: 2. (0x800002f0)
 >> Lifespan countdown: 1. (0x800002f4)
 >> Reverting instruction          :  f9 ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x4
 >> Updated instruction            :  fd ff ff 1a          	: bne #0xffc
 >> Lifespan countdown: 2. (0x800002f8)
 >> Lifespan countdown: 1. (0x800002fc)
 >> Reverting instruction          :  f9 ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x8
 >> Updated instruction            :  f1 ff ff 1a          	: bne #0xfcc
 >> Lifespan countdown: 2. (0x800002c8)
 >> Lifespan countdown: 1. (0x800002cc)
 >> Reverting instruction          :  f9 ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x10
 >> Updated instruction            :  e9 ff ff 1a          	: bne #0xfac
 >> Lifespan countdown: 2. (0x800002a8)
 >> Lifespan countdown: 1. (0x800002ac)
 >> Reverting instruction          :  f9 ff ff 1a 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x20
 >> Updated instruction            :  d9 ff ff 1a          	: bne #0xf6c
 >> Lifespan countdown: 2. (0x80000268)
 >> Lifespan countdown: 1. (0x8000026c)
 >> Reverting instruction          :  f9 ff ff 1a 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x40
 >> Updated instruction            :  b9 ff ff 1a          	: bne #0xeec
 >> Lifespan countdown: 2. (0x800001e8)
 >> Lifespan countdown: 1. (0x800001ec)
 >> Reverting instruction          :  f9 ff ff 1a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x84!! Count 1516 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1515.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x80
 >> Updated instruction            :  79 ff ff 1a          	: bne #0xdec
 >> Lifespan countdown: 2. (0x800000e8)
 >> Lifespan countdown: 1. (0x800000ec)
 >> Reverting instruction          :  f9 ff ff 1a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x40!! Count 1468 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1467.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x100
 >> Updated instruction            :  f9 fe ff 1a          	: bne #0xbec
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffee8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x200
 >> Updated instruction            :  f9 fd ff 1a          	: bne #0x7ec
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffae8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x400
 >> Updated instruction            :  f9 fb ff 1a          	: bne #0xffffffec
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff2e8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x800
 >> Updated instruction            :  f9 f7 ff 1a          	: bne #0xffffefec
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe2e8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x1000
 >> Updated instruction            :  f9 ef ff 1a          	: bne #0xffffcfec
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc2e8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x2000
 >> Updated instruction            :  f9 df ff 1a          	: bne #0xffff8fec
 >!  Erm -  fetching from unmapped memory, address: 0x7fff82e8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x4000
 >> Updated instruction            :  f9 bf ff 1a          	: bne #0xffff0fec
 >!  Erm -  fetching from unmapped memory, address: 0x7fff02e8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002fc. Hit: 1. Lifespan: 2. Instruction: 00001284. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f9 ff ff 1a          	: bne #0xfec
 >> Mask                           :  0x8000
 >> Updated instruction            :  f9 7f ff 1a          	: bne #0xfffe0fec
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe02e8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 0. Instruction: 00001287. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800002f0
 >> Updated                     : 0x00000000800002f4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 5c e1          	: cmp ip, r2
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 5c e1          	: cmp ip, r1
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 5c e1          	: cmp ip, r7
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 5c e1          	: cmp ip, fp
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 5c e1          	: cmp ip, r3, lsl r0
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 5c e1          	: cmp ip, r3, lsr #32
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 5c e1          	: cmp ip, r3, asr #32
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 5c e1          	: cmp ip, r3, lsl #1
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 5c e1          	: cmp ip, r3, lsl #2
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 5c e1          	: cmp ip, r3, lsl #4
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 5c e1          	: cmp ip, r3, lsl #8
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 5c e1          	: cmp ip, r3, lsl #16
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 5c e1          	: cmp ip, r3
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 5c e1          	: cmp ip, r3
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 5c e1          	: cmp ip, r3
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f0. Hit: 1. Lifespan: 2. Instruction: 00001287. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 5c e1          	: cmp ip, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 5c e1          	: cmp ip, r3
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 5c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 0. Instruction: 00001293. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000320
 >> Updated                     : 0x0000000080000324
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x1
 >> Updated instruction            :  1f ff 2f e1          	: bx pc
 >> Lifespan countdown: 2. (0x80000328)
 >> Lifespan countdown: 1. (0x80000304)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x2
 >> Updated instruction            :  1c ff 2f e1          	: bx ip
 >!  Erm -  fetching from unmapped memory, address: 0x84, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1293.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x4
 >> Updated instruction            :  1a ff 2f e1          	: bx sl
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1293.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x8
 >> Updated instruction            :  16 ff 2f e1          	: bx r6
 >> Lifespan countdown: 2. (0x8010ff40)
 >> Lifespan countdown: 1. (0x8010ff44)
 >> Reverting instruction          :  1e ff 2f e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1298.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x10
 >> Updated instruction            :  0e ff 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000324)
 >> Lifespan countdown: 1. (0x80000328)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x20
 >> Updated instruction            :  3e ff 2f e1          	: blx lr
 >> Lifespan countdown: 2. (0x80001308)
 >> Lifespan countdown: 1. (0x8000130c)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x40
 >> Updated instruction            :  5e ff 2f e1          	: qsub pc, lr, pc
 >!  Erm -  fetching from unmapped memory, address: 0xfe0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1293.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x80
 >> Updated instruction            :  9e ff 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  Erm -  fetching from unmapped memory, address: 0xeafffff4, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1293.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x100
 >> Updated instruction            :  1e fe 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80001308)
 >> Lifespan countdown: 1. (0x8000130c)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x200
 >> Updated instruction            :  1e fd 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80001308)
 >> Lifespan countdown: 1. (0x8000130c)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x400
 >> Updated instruction            :  1e fb 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80001308)
 >> Lifespan countdown: 1. (0x8000130c)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x800
 >> Updated instruction            :  1e f7 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80001308)
 >> Lifespan countdown: 1. (0x8000130c)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  1e ef 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80001308)
 >> Lifespan countdown: 1. (0x8000130c)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  1e df 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80001308)
 >> Lifespan countdown: 1. (0x8000130c)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  1e bf 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80001308)
 >> Lifespan countdown: 1. (0x8000130c)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000320. Hit: 1. Lifespan: 2. Instruction: 00001293. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  1e 7f 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80001308)
 >> Lifespan countdown: 1. (0x8000130c)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 0. Instruction: 00001297. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001314
 >> Updated                     : 0x0000000080001318
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 8f e0          	: add r0, pc, r1
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 8f e0          	: add r0, pc, r2
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 8f e0          	: add r0, pc, r4
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 8f e0          	: add r0, pc, r8
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 8f e0          	: add r0, pc, r0, lsl r0
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 8f e0          	: add r0, pc, r0, lsr #32
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 8f e0          	: add r0, pc, r0, asr #32
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 8f e0          	: add r0, pc, r0, lsl #1
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 8f e0          	: add r0, pc, r0, lsl #2
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 8f e0          	: add r0, pc, r0, lsl #4
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 8f e0          	: add r0, pc, r0, lsl #8
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 8f e0          	: add r0, pc, r0, lsl #16
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 8f e0          	: add r1, pc, r0
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 8f e0          	: add r2, pc, r0
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 8f e0          	: add r4, pc, r0
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001314. Hit: 1. Lifespan: 2. Instruction: 00001297. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 8f e0          	: add r0, pc, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 8f e0          	: add r8, pc, r0
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  00 00 8f e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02
