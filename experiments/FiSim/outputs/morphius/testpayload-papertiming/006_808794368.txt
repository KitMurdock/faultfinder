 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Filename              : /home/kit/unicorn-work/FiSim/bl1.elf
 >> Stack Address         : 0x0000000080100000
 >> Stack Size            : 0x0000000000010000
 >> Code Start Address    : 0x0000000080000000
 >> Code End Address      : 0x000000008000132c
 >> Code Offset           : 0x0000000000000054
 >> Fault Start Address   : 0x0000000080000000
 >> Fault End Address     : 0x000000008000132c
 >> Memory Address        : 0x0000000080000000
 >> Memory Size           : 0x0000000000020000
 >> Other Memory Address  : 0x0000000032000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000012000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040010800
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040004400
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x000000000aa01000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000011000000
 >> Other Memory Size     : 0x0000000000001000
 >> Hard stop             : 0x000000000000124c





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 0. Instruction: 00000003. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000008
 >> Updated                     : 0x000000008000000c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 00 54 e1          	: cmp r4, r4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000024)
 >> Reverting instruction          :  05 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 00 54 e1          	: cmp r4, r7
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  05 00 54 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126087 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126086.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 00 54 e1          	: cmp r4, r1
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  05 00 54 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126087 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126086.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 00 54 e1          	: cmp r4, sp
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  05 00 54 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126087 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126086.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 00 54 e1          	: cmp r4, r5, lsl r0
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000024)
 >> Reverting instruction          :  05 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 00 54 e1          	: cmp r4, r5, lsr #32
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  05 00 54 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126087 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126086.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 00 54 e1          	: cmp r4, r5, asr #32
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  05 00 54 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126087 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126086.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 00 54 e1          	: cmp r4, r5, lsl #1
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  05 00 54 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126087 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126086.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 01 54 e1          	: cmp r4, r5, lsl #2
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  05 00 54 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126087 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126086.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 02 54 e1          	: cmp r4, r5, lsl #4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  05 00 54 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126087 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126086.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 04 54 e1          	: cmp r4, r5, lsl #8
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  05 00 54 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126087 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126086.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 08 54 e1          	: cmp r4, r5, lsl #16
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  05 00 54 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126087 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126086.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 10 54 e1          	: cmp r4, r5
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000024)
 >> Reverting instruction          :  05 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 20 54 e1          	: cmp r4, r5
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000024)
 >> Reverting instruction          :  05 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 40 54 e1          	: cmp r4, r5
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000024)
 >> Reverting instruction          :  05 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000008. Hit: 1. Lifespan: 2. Instruction: 00000003. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 54 e1          	: cmp r4, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 80 54 e1          	: cmp r4, r5
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000024)
 >> Reverting instruction          :  05 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 0. Instruction: 00000013. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000041c
 >> Updated                     : 0x0000000080000420
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x1
 >> Updated instruction            :  0d d0 4d e2          	: sub sp, sp, #0xd
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x2
 >> Updated instruction            :  0e d0 4d e2          	: sub sp, sp, #0xe
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x4
 >> Updated instruction            :  08 d0 4d e2          	: sub sp, sp, #8
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x8
 >> Updated instruction            :  04 d0 4d e2          	: sub sp, sp, #4
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x10
 >> Updated instruction            :  1c d0 4d e2          	: sub sp, sp, #0x1c
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x20
 >> Updated instruction            :  2c d0 4d e2          	: sub sp, sp, #0x2c
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x40
 >> Updated instruction            :  4c d0 4d e2          	: sub sp, sp, #0x4c
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x80
 >> Updated instruction            :  8c d0 4d e2          	: sub sp, sp, #0x8c
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x100
 >> Updated instruction            :  0c d1 4d e2          	: sub sp, sp, #12, #2
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x200
 >> Updated instruction            :  0c d2 4d e2          	: sub sp, sp, #12, #4
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x400
 >> Updated instruction            :  0c d4 4d e2          	: sub sp, sp, #12, #8
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x800
 >> Updated instruction            :  0c d8 4d e2          	: sub sp, sp, #12, #16
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c c0 4d e2          	: sub ip, sp, #0xc
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c f0 4d e2          	: sub pc, sp, #0xc
 >> Lifespan countdown: 2. (0x8010ff28)
 >> Lifespan countdown: 1. (0x8010ff2c)
 >> Reverting instruction          :  0c d0 4d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 90 4d e2          	: sub sb, sp, #0xc
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000041c. Hit: 1. Lifespan: 2. Instruction: 00000013. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 50 4d e2          	: sub r5, sp, #0xc
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 0. Instruction: 00000019. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000434
 >> Updated                     : 0x0000000080000438
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 93 e5          	: ldr r3, [r3, #1]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 93 e5          	: ldr r3, [r3, #2]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 93 e5          	: ldr r3, [r3, #4]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 93 e5          	: ldr r3, [r3, #8]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 93 e5          	: ldr r3, [r3, #0x10]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 93 e5          	: ldr r3, [r3, #0x20]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 93 e5          	: ldr r3, [r3, #0x40]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 93 e5          	: ldr r3, [r3, #0x80]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 93 e5          	: ldr r3, [r3, #0x100]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 93 e5          	: ldr r3, [r3, #0x200]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 93 e5          	: ldr r3, [r3, #0x400]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 93 e5          	: ldr r3, [r3, #0x800]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 93 e5          	: ldr r2, [r3]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 93 e5          	: ldr r1, [r3]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 93 e5          	: ldr r7, [r3]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000434. Hit: 1. Lifespan: 2. Instruction: 00000019. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 93 e5          	: ldr fp, [r3]
 >> Lifespan countdown: 2. (0x80000438)
 >> Lifespan countdown: 1. (0x8000043c)
 >> Reverting instruction          :  00 30 93 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffffa, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 22.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 0. Instruction: 00000028. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000127c
 >> Updated                     : 0x0000000080001280
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x1
 >> Updated instruction            :  c0 00 4b e2          	: sub r0, fp, #0xc0
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x2
 >> Updated instruction            :  c3 00 4b e2          	: sub r0, fp, #0xc3
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x4
 >> Updated instruction            :  c5 00 4b e2          	: sub r0, fp, #0xc5
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x1001284, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x8
 >> Updated instruction            :  c9 00 4b e2          	: sub r0, fp, #0xc9
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000110ff3b, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x10
 >> Updated instruction            :  d1 00 4b e2          	: sub r0, fp, #0xd1
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x20
 >> Updated instruction            :  e1 00 4b e2          	: sub r0, fp, #0xe1
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x40
 >> Updated instruction            :  81 00 4b e2          	: sub r0, fp, #0x81
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x80
 >> Updated instruction            :  41 00 4b e2          	: sub r0, fp, #0x41
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x100
 >> Updated instruction            :  c1 01 4b e2          	: sub r0, fp, #0x40000030
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4010ffcc, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x200
 >> Updated instruction            :  c1 02 4b e2          	: sub r0, fp, #0x1000000c
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7010fff0, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x400
 >> Updated instruction            :  c1 04 4b e2          	: sub r0, fp, #0xc1000000
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xbf10fffc, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x800
 >> Updated instruction            :  c1 08 4b e2          	: sub r0, fp, #0xc10000
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7f4ffffc, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x1000
 >> Updated instruction            :  c1 10 4b e2          	: sub r1, fp, #0xc1
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x2000
 >> Updated instruction            :  c1 20 4b e2          	: sub r2, fp, #0xc1
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x4000
 >> Updated instruction            :  c1 40 4b e2          	: sub r4, fp, #0xc1
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000127c. Hit: 1. Lifespan: 2. Instruction: 00000028. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 00 4b e2          	: sub r0, fp, #0xc1
 >> Mask                           :  0x8000
 >> Updated instruction            :  c1 80 4b e2          	: sub r8, fp, #0xc1
 >> Lifespan countdown: 2. (0x80001280)
 >> Lifespan countdown: 1. (0x800003b0)
 >> Reverting instruction          :  c1 00 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 0. Instruction: 00000030. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800003b0
 >> Updated                     : 0x00000000800003b4
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x1
 >> Updated instruction            :  11 48 2d e9          	: push {r0, r4, fp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x2
 >> Updated instruction            :  12 48 2d e9          	: push {r1, r4, fp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x4
 >> Updated instruction            :  14 48 2d e9          	: push {r2, r4, fp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x8
 >> Updated instruction            :  18 48 2d e9          	: push {r3, r4, fp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x10
 >> Updated instruction            :  00 48 2d e9          	: push {fp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x20
 >> Updated instruction            :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x40
 >> Updated instruction            :  50 48 2d e9          	: push {r4, r6, fp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x80
 >> Updated instruction            :  90 48 2d e9          	: push {r4, r7, fp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x100
 >> Updated instruction            :  10 49 2d e9          	: push {r4, r8, fp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x200
 >> Updated instruction            :  10 4a 2d e9          	: push {r4, sb, fp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x400
 >> Updated instruction            :  10 4c 2d e9          	: push {r4, sl, fp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x800
 >> Updated instruction            :  10 40 2d e9          	: push {r4, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x1000
 >> Updated instruction            :  10 58 2d e9          	: push {r4, fp, ip, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x2000
 >> Updated instruction            :  10 68 2d e9          	: push {r4, fp, sp, lr}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 121.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x4000
 >> Updated instruction            :  10 08 2d e9          	: push {r4, fp}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003b0. Hit: 1. Lifespan: 2. Instruction: 00000030. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 48 2d e9          	: push {r4, fp, lr}
 >> Mask                           :  0x8000
 >> Updated instruction            :  10 c8 2d e9          	: push {r4, fp, lr, pc}
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  10 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 0. Instruction: 00000037. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000032c
 >> Updated                     : 0x0000000080000330
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x1
 >> Updated instruction            :  05 b0 2d e5          	: str fp, [sp, #-5]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x2
 >> Updated instruction            :  06 b0 2d e5          	: str fp, [sp, #-6]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x4
 >> Updated instruction            :  00 b0 2d e5          	: str fp, [sp, #-0]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x8
 >> Updated instruction            :  0c b0 2d e5          	: str fp, [sp, #-0xc]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x10
 >> Updated instruction            :  14 b0 2d e5          	: str fp, [sp, #-0x14]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x20
 >> Updated instruction            :  24 b0 2d e5          	: str fp, [sp, #-0x24]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x40
 >> Updated instruction            :  44 b0 2d e5          	: str fp, [sp, #-0x44]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x80
 >> Updated instruction            :  84 b0 2d e5          	: str fp, [sp, #-0x84]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x100
 >> Updated instruction            :  04 b1 2d e5          	: str fp, [sp, #-0x104]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x200
 >> Updated instruction            :  04 b2 2d e5          	: str fp, [sp, #-0x204]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x400
 >> Updated instruction            :  04 b4 2d e5          	: str fp, [sp, #-0x404]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x800
 >> Updated instruction            :  04 b8 2d e5          	: str fp, [sp, #-0x804]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 a0 2d e5          	: str sl, [sp, #-4]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 90 2d e5          	: str sb, [sp, #-4]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 f0 2d e5          	: str pc, [sp, #-4]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >!  Erm -  fetching from unmapped memory, address: 0xe3a03412, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000032c. Hit: 1. Lifespan: 2. Instruction: 00000037. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 30 2d e5          	: str r3, [sp, #-4]!
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  04 b0 2d e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000011fffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 0. Instruction: 00000045. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000034c
 >> Updated                     : 0x0000000080000350
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x1
 >> Updated instruction            :  12 00 00 0a          	: beq #0x1050
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x2
 >> Updated instruction            :  11 00 00 0a          	: beq #0x104c
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x4
 >> Updated instruction            :  17 00 00 0a          	: beq #0x1064
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x8
 >> Updated instruction            :  1b 00 00 0a          	: beq #0x1074
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x10
 >> Updated instruction            :  03 00 00 0a          	: beq #0x1014
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x20
 >> Updated instruction            :  33 00 00 0a          	: beq #0x10d4
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x40
 >> Updated instruction            :  53 00 00 0a          	: beq #0x1154
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x80
 >> Updated instruction            :  93 00 00 0a          	: beq #0x1254
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x100
 >> Updated instruction            :  13 01 00 0a          	: beq #0x1454
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x200
 >> Updated instruction            :  13 02 00 0a          	: beq #0x1854
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x400
 >> Updated instruction            :  13 04 00 0a          	: beq #0x2054
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x800
 >> Updated instruction            :  13 08 00 0a          	: beq #0x3054
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x1000
 >> Updated instruction            :  13 10 00 0a          	: beq #0x5054
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x2000
 >> Updated instruction            :  13 20 00 0a          	: beq #0x9054
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x4000
 >> Updated instruction            :  13 40 00 0a          	: beq #0x11054
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000034c. Hit: 1. Lifespan: 2. Instruction: 00000045. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 00 00 0a          	: beq #0x1054
 >> Mask                           :  0x8000
 >> Updated instruction            :  13 80 00 0a          	: beq #0x21054
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  13 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 0. Instruction: 00000054. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000370
 >> Updated                     : 0x0000000080000374
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 1a          	: bne #0xff0
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 1a          	: bne #0xfec
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 1a          	: bne #0x1004
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 1a          	: bne #0xfd4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 1a          	: bne #0xfb4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 1a          	: bne #0xf74
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 1a          	: bne #0xef4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 1a          	: bne #0xdf4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 1a          	: bne #0xbf4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 1a          	: bne #0x7f4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 1a          	: bne #0xfffffff4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 1a          	: bne #0xffffeff4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 1a          	: bne #0xffffcff4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 1a          	: bne #0xffff8ff4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 1a          	: bne #0xffff0ff4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000370. Hit: 1. Lifespan: 2. Instruction: 00000054. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 1a          	: bne #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 1a          	: bne #0xfffe0ff4
 >> Lifespan countdown: 2. (0x80000374)
 >> Lifespan countdown: 1. (0x80000378)
 >> Reverting instruction          :  fb ff ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 0. Instruction: 00000063. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000394
 >> Updated                     : 0x0000000080000398
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 d0 8b e2          	: add sp, fp, #1
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000008010ef, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 d0 8b e2          	: add sp, fp, #2
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000008000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 d0 8b e2          	: add sp, fp, #4
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 d0 8b e2          	: add sp, fp, #8
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000001fff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 d0 8b e2          	: add sp, fp, #0x10
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x61656100, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 d0 8b e2          	: add sp, fp, #0x20
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 d0 8b e2          	: add sp, fp, #0x40
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 d0 8b e2          	: add sp, fp, #0x80
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 d1 8b e2          	: add sp, fp, #0, #2
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 d2 8b e2          	: add sp, fp, #0, #4
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 d4 8b e2          	: add sp, fp, #0, #8
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 d8 8b e2          	: add sp, fp, #0, #16
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 c0 8b e2          	: add ip, fp, #0
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 f0 8b e2          	: add pc, fp, #0
 >> Lifespan countdown: 2. (0x8010ff1c)
 >> Lifespan countdown: 1. (0x8010ff20)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 90 8b e2          	: add sb, fp, #0
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000394. Hit: 1. Lifespan: 2. Instruction: 00000063. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 50 8b e2          	: add r5, fp, #0
 >> Lifespan countdown: 2. (0x80000398)
 >> Lifespan countdown: 1. (0x8000039c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 0. Instruction: 00000071. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800003e0
 >> Updated                     : 0x00000000800003e4
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x20000!! Count 106 Skipping to end.
 >> Run result: Fault errored program - last instruction: 105.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x1
 >> Updated instruction            :  11 88 bd e8          	: pop {r0, r4, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x2
 >> Updated instruction            :  12 88 bd e8          	: pop {r1, r4, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x4
 >> Updated instruction            :  14 88 bd e8          	: pop {r2, r4, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x8
 >> Updated instruction            :  18 88 bd e8          	: pop {r3, r4, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x10
 >> Updated instruction            :  00 88 bd e8          	: pop {fp, pc}
 >> Lifespan countdown: 2. (0x8010fffc)
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x20
 >> Updated instruction            :  30 88 bd e8          	: pop {r4, r5, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x40
 >> Updated instruction            :  50 88 bd e8          	: pop {r4, r6, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x80
 >> Updated instruction            :  90 88 bd e8          	: pop {r4, r7, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x100
 >> Updated instruction            :  10 89 bd e8          	: pop {r4, r8, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x200
 >> Updated instruction            :  10 8a bd e8          	: pop {r4, sb, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x400
 >> Updated instruction            :  10 8c bd e8          	: pop {r4, sl, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x800
 >> Updated instruction            :  10 80 bd e8          	: pop {r4, pc}
 >> Lifespan countdown: 2. (0x8010fffc)
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x1000
 >> Updated instruction            :  10 98 bd e8          	: pop {r4, fp, ip, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x2000
 >> Updated instruction            :  10 a8 bd e8          	: pop {r4, fp, sp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x4000
 >> Updated instruction            :  10 c8 bd e8          	: pop {r4, fp, lr, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003e0. Hit: 1. Lifespan: 2. Instruction: 00000071. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 88 bd e8          	: pop {r4, fp, pc}
 >> Mask                           :  0x8000
 >> Updated instruction            :  10 08 bd e8          	: pop {r4, fp}
 >> Lifespan countdown: 2. (0x800003e4)
 >> Lifespan countdown: 1. (0x800003e8)
 >> Reverting instruction          :  10 88 bd e8 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x20000!! Count 106 Skipping to end.
 >> Run result: Fault errored program - last instruction: 105.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 0. Instruction: 00000075. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001290
 >> Updated                     : 0x0000000080001294
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x1
 >> Updated instruction            :  99 00 9f e5          	: ldr r0, [pc, #0x99]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x2
 >> Updated instruction            :  9a 00 9f e5          	: ldr r0, [pc, #0x9a]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x4
 >> Updated instruction            :  9c 00 9f e5          	: ldr r0, [pc, #0x9c]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x8
 >> Updated instruction            :  90 00 9f e5          	: ldr r0, [pc, #0x90]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x10
 >> Updated instruction            :  88 00 9f e5          	: ldr r0, [pc, #0x88]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x20
 >> Updated instruction            :  b8 00 9f e5          	: ldr r0, [pc, #0xb8]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x40
 >> Updated instruction            :  d8 00 9f e5          	: ldr r0, [pc, #0xd8]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x80
 >> Updated instruction            :  18 00 9f e5          	: ldr r0, [pc, #0x18]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x100
 >> Updated instruction            :  98 01 9f e5          	: ldr r0, [pc, #0x198]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x200
 >> Updated instruction            :  98 02 9f e5          	: ldr r0, [pc, #0x298]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x400
 >> Updated instruction            :  98 04 9f e5          	: ldr r0, [pc, #0x498]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x800
 >> Updated instruction            :  98 08 9f e5          	: ldr r0, [pc, #0x898]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x1000
 >> Updated instruction            :  98 10 9f e5          	: ldr r1, [pc, #0x98]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x2000
 >> Updated instruction            :  98 20 9f e5          	: ldr r2, [pc, #0x98]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x4000
 >> Updated instruction            :  98 40 9f e5          	: ldr r4, [pc, #0x98]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001290. Hit: 1. Lifespan: 2. Instruction: 00000075. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 00 9f e5          	: ldr r0, [pc, #0x98]
 >> Mask                           :  0x8000
 >> Updated instruction            :  98 80 9f e5          	: ldr r8, [pc, #0x98]
 >> Lifespan countdown: 2. (0x80001294)
 >> Lifespan countdown: 1. (0x80001298)
 >> Reverting instruction          :  98 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 0. Instruction: 00000084. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012b4
 >> Updated                     : 0x00000000800012b8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x1
 >> Updated instruction            :  33 04 a0 e3          	: mov r0, #0x33000000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x2
 >> Updated instruction            :  30 04 a0 e3          	: mov r0, #48, #8
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x4
 >> Updated instruction            :  36 04 a0 e3          	: mov r0, #0x36000000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x8
 >> Updated instruction            :  3a 04 a0 e3          	: mov r0, #0x3a000000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x10
 >> Updated instruction            :  22 04 a0 e3          	: mov r0, #0x22000000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x20
 >> Updated instruction            :  12 04 a0 e3          	: mov r0, #0x12000000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x40
 >> Updated instruction            :  72 04 a0 e3          	: mov r0, #0x72000000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x80
 >> Updated instruction            :  b2 04 a0 e3          	: mov r0, #0xb2000000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x100
 >> Updated instruction            :  32 05 a0 e3          	: mov r0, #0xc800000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x200
 >> Updated instruction            :  32 06 a0 e3          	: mov r0, #0x3200000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x400
 >> Updated instruction            :  32 00 a0 e3          	: mov r0, #0x32
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x800
 >> Updated instruction            :  32 0c a0 e3          	: mov r0, #0x3200
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x1000
 >> Updated instruction            :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x2000
 >> Updated instruction            :  32 24 a0 e3          	: mov r2, #0x32000000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x4000
 >> Updated instruction            :  32 44 a0 e3          	: mov r4, #0x32000000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b4. Hit: 1. Lifespan: 2. Instruction: 00000084. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Mask                           :  0x8000
 >> Updated instruction            :  32 84 a0 e3          	: mov r8, #0x32000000
 >> Lifespan countdown: 2. (0x800012b8)
 >> Lifespan countdown: 1. (0x80001250)
 >> Reverting instruction          :  32 04 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 0. Instruction: 00000088. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001258
 >> Updated                     : 0x000000008000125c
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007fffff68, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 b0 8d e2          	: add fp, sp, #1
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000080103f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 b0 8d e2          	: add fp, sp, #2
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000007f50, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 b0 8d e2          	: add fp, sp, #4
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000ffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 b0 8d e2          	: add fp, sp, #8
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff50, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 b0 8d e2          	: add fp, sp, #0x40
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000103253b6, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 b0 8d e2          	: add fp, sp, #0x80
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 b1 8d e2          	: add fp, sp, #0, #2
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 b2 8d e2          	: add fp, sp, #0, #4
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 b4 8d e2          	: add fp, sp, #0, #8
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 b8 8d e2          	: add fp, sp, #0, #16
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 a0 8d e2          	: add sl, sp, #0
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007fffff68, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 90 8d e2          	: add sb, sp, #0
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007fffff68, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 f0 8d e2          	: add pc, sp, #0
 >> Lifespan countdown: 2. (0x8010ff34)
 >!  Erm -  fetching from unmapped memory, address: 0xffff90aa, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 89.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001258. Hit: 1. Lifespan: 2. Instruction: 00000088. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 30 8d e2          	: add r3, sp, #0
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007fffff68, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 0. Instruction: 00000092. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001268
 >> Updated                     : 0x000000008000126c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x1
 >> Updated instruction            :  1f ff 2f e1          	: bx pc
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x2
 >> Updated instruction            :  1c ff 2f e1          	: bx ip
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 92.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x4
 >> Updated instruction            :  1a ff 2f e1          	: bx sl
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 92.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x8
 >> Updated instruction            :  16 ff 2f e1          	: bx r6
 >> Lifespan countdown: 2. (0x8010ff40)
 >> Lifespan countdown: 1. (0x8010ff44)
 >> Reverting instruction          :  1e ff 2f e1 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x10
 >> Updated instruction            :  0e ff 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x8000126c)
 >> Lifespan countdown: 1. (0x80001270)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x20
 >> Updated instruction            :  3e ff 2f e1          	: blx lr
 >> Lifespan countdown: 2. (0x800012bc)
 >> Lifespan countdown: 1. (0x800012c0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x40
 >> Updated instruction            :  5e ff 2f e1          	: qsub pc, lr, pc
 >!  Erm -  fetching from unmapped memory, address: 0x4c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 92.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x80
 >> Updated instruction            :  9e ff 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  Erm -  fetching from unmapped memory, address: 0xe28db004, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 92.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x100
 >> Updated instruction            :  1e fe 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800012bc)
 >> Lifespan countdown: 1. (0x800012c0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x200
 >> Updated instruction            :  1e fd 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800012bc)
 >> Lifespan countdown: 1. (0x800012c0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x400
 >> Updated instruction            :  1e fb 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800012bc)
 >> Lifespan countdown: 1. (0x800012c0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x800
 >> Updated instruction            :  1e f7 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800012bc)
 >> Lifespan countdown: 1. (0x800012c0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  1e ef 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800012bc)
 >> Lifespan countdown: 1. (0x800012c0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  1e df 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800012bc)
 >> Lifespan countdown: 1. (0x800012c0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  1e bf 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800012bc)
 >> Lifespan countdown: 1. (0x800012c0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001268. Hit: 1. Lifespan: 2. Instruction: 00000092. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  1e 7f 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800012bc)
 >> Lifespan countdown: 1. (0x800012c0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 0. Instruction: 00000098. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000464
 >> Updated                     : 0x0000000080000468
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x1
 >> Updated instruction            :  44 27 46 e3          	: movt r2, #0x6744
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x2
 >> Updated instruction            :  47 27 46 e3          	: movt r2, #0x6747
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x4
 >> Updated instruction            :  41 27 46 e3          	: movt r2, #0x6741
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x8
 >> Updated instruction            :  4d 27 46 e3          	: movt r2, #0x674d
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x10
 >> Updated instruction            :  55 27 46 e3          	: movt r2, #0x6755
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x20
 >> Updated instruction            :  65 27 46 e3          	: movt r2, #0x6765
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x40
 >> Updated instruction            :  05 27 46 e3          	: movt r2, #0x6705
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x80
 >> Updated instruction            :  c5 27 46 e3          	: movt r2, #0x67c5
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x100
 >> Updated instruction            :  45 26 46 e3          	: movt r2, #0x6645
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x200
 >> Updated instruction            :  45 25 46 e3          	: movt r2, #0x6545
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x400
 >> Updated instruction            :  45 23 46 e3          	: movt r2, #0x6345
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x800
 >> Updated instruction            :  45 2f 46 e3          	: movt r2, #0x6f45
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x1000
 >> Updated instruction            :  45 37 46 e3          	: movt r3, #0x6745
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x2000
 >> Updated instruction            :  45 07 46 e3          	: movt r0, #0x6745
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6745ff68, value: 0x2301!! Count 102 Skipping to end.
 >> Run result: Fault errored program - last instruction: 101.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x4000
 >> Updated instruction            :  45 67 46 e3          	: movt r6, #0x6745
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006745ff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000464. Hit: 1. Lifespan: 2. Instruction: 00000098. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 27 46 e3          	: movt r2, #0x6745
 >> Mask                           :  0x8000
 >> Updated instruction            :  45 a7 46 e3          	: movt sl, #0x6745
 >> Lifespan countdown: 2. (0x80000468)
 >> Lifespan countdown: 1. (0x8000046c)
 >> Reverting instruction          :  45 27 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 0. Instruction: 00000107. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000488
 >> Updated                     : 0x000000008000048c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 a0 e3          	: mov r3, #1
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 a0 e3          	: mov r3, #2
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 a0 e3          	: mov r3, #4
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 a0 e3          	: mov r3, #8
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 a0 e3          	: mov r3, #0x10
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 a0 e3          	: mov r3, #0x20
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 a0 e3          	: mov r3, #0x40
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 a0 e3          	: mov r3, #0x80
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 a0 e3          	: mov r3, #0, #2
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 a0 e3          	: mov r3, #0, #4
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 a0 e3          	: mov r3, #0, #8
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 a0 e3          	: mov r3, #0, #16
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 a0 e3          	: mov r2, #0
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 a0 e3          	: mov r1, #0
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 a0 e3          	: mov r7, #0
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000488. Hit: 1. Lifespan: 2. Instruction: 00000107. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 a0 e3          	: mov fp, #0
 >> Lifespan countdown: 2. (0x8000048c)
 >> Lifespan countdown: 1. (0x80000490)
 >> Reverting instruction          :  00 30 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 111.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 0. Instruction: 00000119. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001180
 >> Updated                     : 0x0000000080001184
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 50 a0 e1          	: mov r5, r3
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 50 a0 e1          	: mov r5, r0
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 50 a0 e1          	: mov r5, r6
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 50 a0 e1          	: mov r5, sl
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 50 a0 e1          	: lsl r5, r2, r0
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 50 a0 e1          	: lsr r5, r2, #0x20
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 50 a0 e1          	: asr r5, r2, #0x20
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 50 a0 e1          	: lsl r5, r2, #1
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 51 a0 e1          	: lsl r5, r2, #2
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 52 a0 e1          	: lsl r5, r2, #4
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 54 a0 e1          	: lsl r5, r2, #8
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 58 a0 e1          	: lsl r5, r2, #0x10
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 40 a0 e1          	: mov r4, r2
 >> Lifespan countdown: 2. (0x80001184)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000014, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 70 a0 e1          	: mov r7, r2
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 10 a0 e1          	: mov r1, r2
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000010, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 187.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001180. Hit: 1. Lifespan: 2. Instruction: 00000119. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 a0 e1          	: mov r5, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 d0 a0 e1          	: mov sp, r2
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  02 50 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffffec, value: 0x8010ff60!! Count 142 Skipping to end.
 >> Run result: Fault errored program - last instruction: 141.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 0. Instruction: 00000126. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000119c
 >> Updated                     : 0x00000000800011a0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 52 e1          	: cmp r2, r1
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 52 e1          	: cmp r2, r2
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 52 e1          	: cmp r2, r4
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 52 e1          	: cmp r2, r8
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 52 e1          	: cmp r2, r0, lsl r0
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 52 e1          	: cmp r2, r0, lsr #32
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 52 e1          	: cmp r2, r0, asr #32
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 52 e1          	: cmp r2, r0, lsl #1
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 52 e1          	: cmp r2, r0, lsl #2
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 52 e1          	: cmp r2, r0, lsl #4
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 52 e1          	: cmp r2, r0, lsl #8
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 52 e1          	: cmp r2, r0, lsl #16
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 52 e1          	: cmp r2, r0
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 52 e1          	: cmp r2, r0
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 52 e1          	: cmp r2, r0
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000119c. Hit: 1. Lifespan: 2. Instruction: 00000126. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e1          	: cmp r2, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 52 e1          	: cmp r2, r0
 >> Lifespan countdown: 2. (0x800011a0)
 >> Lifespan countdown: 1. (0x800011a4)
 >> Reverting instruction          :  00 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 0. Instruction: 00000131. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800011b0
 >> Updated                     : 0x00000000800011b4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x1
 >> Updated instruction            :  05 30 84 e5          	: str r3, [r4, #5]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x2
 >> Updated instruction            :  06 30 84 e5          	: str r3, [r4, #6]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x4
 >> Updated instruction            :  00 30 84 e5          	: str r3, [r4]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 30 84 e5          	: str r3, [r4, #0xc]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x10
 >> Updated instruction            :  14 30 84 e5          	: str r3, [r4, #0x14]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x20
 >> Updated instruction            :  24 30 84 e5          	: str r3, [r4, #0x24]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x40
 >> Updated instruction            :  44 30 84 e5          	: str r3, [r4, #0x44]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x80
 >> Updated instruction            :  84 30 84 e5          	: str r3, [r4, #0x84]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x100
 >> Updated instruction            :  04 31 84 e5          	: str r3, [r4, #0x104]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110064, value: 0x0!! Count 132 Skipping to end.
 >> Run result: Fault errored program - last instruction: 131.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x200
 >> Updated instruction            :  04 32 84 e5          	: str r3, [r4, #0x204]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110164, value: 0x0!! Count 132 Skipping to end.
 >> Run result: Fault errored program - last instruction: 131.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x400
 >> Updated instruction            :  04 34 84 e5          	: str r3, [r4, #0x404]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110364, value: 0x0!! Count 132 Skipping to end.
 >> Run result: Fault errored program - last instruction: 131.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x800
 >> Updated instruction            :  04 38 84 e5          	: str r3, [r4, #0x804]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110764, value: 0x0!! Count 132 Skipping to end.
 >> Run result: Fault errored program - last instruction: 131.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 20 84 e5          	: str r2, [r4, #4]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 10 84 e5          	: str r1, [r4, #4]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 70 84 e5          	: str r7, [r4, #4]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b0. Hit: 1. Lifespan: 2. Instruction: 00000131. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 84 e5          	: str r3, [r4, #4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 b0 84 e5          	: str fp, [r4, #4]
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011f8)
 >> Reverting instruction          :  04 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 0. Instruction: 00000137. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001208
 >> Updated                     : 0x000000008000120c
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 00 a0 e1          	: mov r0, r6
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 00 a0 e1          	: mov r0, r5
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 00 a0 e1          	: mov r0, r3
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 00 a0 e1          	: mov r0, pc
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 00 a0 e1          	: lsl r0, r7, r0
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 00 a0 e1          	: lsr r0, r7, #0x20
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 00 a0 e1          	: asr r0, r7, #0x20
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffffff, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 00 a0 e1          	: lsl r0, r7, #1
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fef0, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 01 a0 e1          	: lsl r0, r7, #2
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x43fde0, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 02 a0 e1          	: lsl r0, r7, #4
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff780, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 04 a0 e1          	: lsl r0, r7, #8
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff7800, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 08 a0 e1          	: lsl r0, r7, #0x10
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff780000, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 10 a0 e1          	: mov r1, r7
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 20 a0 e1          	: mov r2, r7
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 40 a0 e1          	: mov r4, r7
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001208. Hit: 1. Lifespan: 2. Instruction: 00000137. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 a0 e1          	: mov r0, r7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 80 a0 e1          	: mov r8, r7
 >> Lifespan countdown: 2. (0x8000120c)
 >> Lifespan countdown: 1. (0x80001210)
 >> Reverting instruction          :  07 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 0. Instruction: 00000143. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000178
 >> Updated                     : 0x000000008000017c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 30 80 e2          	: add r3, r0, #5
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 30 80 e2          	: add r3, r0, #6
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 30 80 e2          	: add r3, r0, #0
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 30 80 e2          	: add r3, r0, #0xc
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 30 80 e2          	: add r3, r0, #0x14
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 30 80 e2          	: add r3, r0, #0x24
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 30 80 e2          	: add r3, r0, #0x44
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 30 80 e2          	: add r3, r0, #0x84
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 31 80 e2          	: add r3, r0, #4, #2
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 32 80 e2          	: add r3, r0, #4, #4
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 34 80 e2          	: add r3, r0, #4, #8
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 38 80 e2          	: add r3, r0, #4, #16
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 20 80 e2          	: add r2, r0, #4
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 10 80 e2          	: add r1, r0, #4
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 70 80 e2          	: add r7, r0, #4
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000178. Hit: 1. Lifespan: 2. Instruction: 00000143. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e2          	: add r3, r0, #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 b0 80 e2          	: add fp, r0, #4
 >> Lifespan countdown: 2. (0x8000017c)
 >> Lifespan countdown: 1. (0x80000180)
 >> Reverting instruction          :  04 30 80 e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 0. Instruction: 00000150. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000194
 >> Updated                     : 0x0000000080000198
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 a0 93          	: movls r3, #1
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 a0 93          	: movls r3, #2
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 a0 93          	: movls r3, #4
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 a0 93          	: movls r3, #8
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 a0 93          	: movls r3, #0x10
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 a0 93          	: movls r3, #0x20
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 a0 93          	: movls r3, #0x40
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 a0 93          	: movls r3, #0x80
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 a0 93          	: movls r3, #0, #2
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 a0 93          	: movls r3, #0, #4
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 a0 93          	: movls r3, #0, #8
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 a0 93          	: movls r3, #0, #16
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 a0 93          	: movls r2, #0
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 a0 93          	: movls r1, #0
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 a0 93          	: movls r7, #0
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000194. Hit: 1. Lifespan: 2. Instruction: 00000150. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 93          	: movls r3, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 a0 93          	: movls fp, #0
 >> Lifespan countdown: 2. (0x80000198)
 >> Lifespan countdown: 1. (0x8000019c)
 >> Reverting instruction          :  00 30 a0 93 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 0. Instruction: 00000159. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800001b8
 >> Updated                     : 0x00000000800001bc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x1
 >> Updated instruction            :  11 b0 8d e2          	: add fp, sp, #0x11
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x2
 >> Updated instruction            :  12 b0 8d e2          	: add fp, sp, #0x12
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x4
 >> Updated instruction            :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x8
 >> Updated instruction            :  18 b0 8d e2          	: add fp, sp, #0x18
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x10
 >> Updated instruction            :  00 b0 8d e2          	: add fp, sp, #0
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x20
 >> Updated instruction            :  30 b0 8d e2          	: add fp, sp, #0x30
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x40
 >> Updated instruction            :  50 b0 8d e2          	: add fp, sp, #0x50
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x80
 >> Updated instruction            :  90 b0 8d e2          	: add fp, sp, #0x90
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x100
 >> Updated instruction            :  10 b1 8d e2          	: add fp, sp, #16, #2
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x200
 >> Updated instruction            :  10 b2 8d e2          	: add fp, sp, #16, #4
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x400
 >> Updated instruction            :  10 b4 8d e2          	: add fp, sp, #16, #8
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x800
 >> Updated instruction            :  10 b8 8d e2          	: add fp, sp, #16, #16
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x1000
 >> Updated instruction            :  10 a0 8d e2          	: add sl, sp, #0x10
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x2000
 >> Updated instruction            :  10 90 8d e2          	: add sb, sp, #0x10
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x4000
 >> Updated instruction            :  10 f0 8d e2          	: add pc, sp, #0x10
 >> Lifespan countdown: 2. (0x8010ff34)
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 160.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001b8. Hit: 1. Lifespan: 2. Instruction: 00000159. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Mask                           :  0x8000
 >> Updated instruction            :  10 30 8d e2          	: add r3, sp, #0x10
 >> Lifespan countdown: 2. (0x800001bc)
 >> Lifespan countdown: 1. (0x800001c0)
 >> Reverting instruction          :  10 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000b210ff34, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 184.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 0. Instruction: 00000167. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000218
 >> Updated                     : 0x000000008000021c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 20 42 e0          	: sub r2, r2, r2
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 20 42 e0          	: sub r2, r2, r1
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 20 42 e0          	: sub r2, r2, r7
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 20 42 e0          	: sub r2, r2, fp
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 20 42 e0          	: sub r2, r2, r3, lsl r0
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 20 42 e0          	: sub r2, r2, r3, lsr #32
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 20 42 e0          	: sub r2, r2, r3, asr #32
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 20 42 e0          	: sub r2, r2, r3, lsl #1
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 21 42 e0          	: sub r2, r2, r3, lsl #2
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 22 42 e0          	: sub r2, r2, r3, lsl #4
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 24 42 e0          	: sub r2, r2, r3, lsl #8
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 28 42 e0          	: sub r2, r2, r3, lsl #16
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 30 42 e0          	: sub r3, r2, r3
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 00 42 e0          	: sub r0, r2, r3
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 60 42 e0          	: sub r6, r2, r3
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000218. Hit: 1. Lifespan: 2. Instruction: 00000167. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 20 42 e0          	: sub r2, r2, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 a0 42 e0          	: sub sl, r2, r3
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  03 20 42 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 0. Instruction: 00000177. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000022c
 >> Updated                     : 0x0000000080000230
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 178.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 2. Lifespan: 2. Instruction: 00000177. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 0. Instruction: 00000184. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000234
 >> Updated                     : 0x0000000080000238
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 54 e1          	: cmp r4, r2
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 54 e1          	: cmp r4, r1
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 54 e1          	: cmp r4, r7
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 54 e1          	: cmp r4, fp
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 54 e1          	: cmp r4, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 54 e1          	: cmp r4, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 54 e1          	: cmp r4, r3, asr #32
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 54 e1          	: cmp r4, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 54 e1          	: cmp r4, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 54 e1          	: cmp r4, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 54 e1          	: cmp r4, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 54 e1          	: cmp r4, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 3. Lifespan: 2. Instruction: 00000184. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 0. Instruction: 00000191. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000023c
 >> Updated                     : 0x0000000080000240
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x1
 >> Updated instruction            :  fb ff ff 8a          	: bhi #0xff4
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x2
 >> Updated instruction            :  f8 ff ff 8a          	: bhi #0xfe8
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x4
 >> Updated instruction            :  fe ff ff 8a          	: bhi #0x1000
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x8
 >> Updated instruction            :  f2 ff ff 8a          	: bhi #0xfd0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x10
 >> Updated instruction            :  ea ff ff 8a          	: bhi #0xfb0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x20
 >> Updated instruction            :  da ff ff 8a          	: bhi #0xf70
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x40
 >> Updated instruction            :  ba ff ff 8a          	: bhi #0xef0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x80
 >> Updated instruction            :  7a ff ff 8a          	: bhi #0xdf0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x100
 >> Updated instruction            :  fa fe ff 8a          	: bhi #0xbf0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x200
 >> Updated instruction            :  fa fd ff 8a          	: bhi #0x7f0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x400
 >> Updated instruction            :  fa fb ff 8a          	: bhi #0xfffffff0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x800
 >> Updated instruction            :  fa f7 ff 8a          	: bhi #0xffffeff0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x1000
 >> Updated instruction            :  fa ef ff 8a          	: bhi #0xffffcff0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x2000
 >> Updated instruction            :  fa df ff 8a          	: bhi #0xffff8ff0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x4000
 >> Updated instruction            :  fa bf ff 8a          	: bhi #0xffff0ff0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 4. Lifespan: 2. Instruction: 00000191. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x8000
 >> Updated instruction            :  fa 7f ff 8a          	: bhi #0xfffe0ff0
 >> Lifespan countdown: 2. (0x80000240)
 >> Lifespan countdown: 1. (0x80000244)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 0. Instruction: 00000197. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000254
 >> Updated                     : 0x0000000080000258
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x1
 >> Updated instruction            :  71 88 bd 08          	: popeq {r0, r4, r5, r6, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x2
 >> Updated instruction            :  72 88 bd 08          	: popeq {r1, r4, r5, r6, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x4
 >> Updated instruction            :  74 88 bd 08          	: popeq {r2, r4, r5, r6, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x8
 >> Updated instruction            :  78 88 bd 08          	: popeq {r3, r4, r5, r6, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x10
 >> Updated instruction            :  60 88 bd 08          	: popeq {r5, r6, fp, pc}
 >> Lifespan countdown: 2. (0x8010fffc)
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x20
 >> Updated instruction            :  50 88 bd 08          	: popeq {r4, r6, fp, pc}
 >> Lifespan countdown: 2. (0x8010fffc)
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x40
 >> Updated instruction            :  30 88 bd 08          	: popeq {r4, r5, fp, pc}
 >> Lifespan countdown: 2. (0x8010fffc)
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x80
 >> Updated instruction            :  f0 88 bd 08          	: popeq {r4, r5, r6, r7, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x100
 >> Updated instruction            :  70 89 bd 08          	: popeq {r4, r5, r6, r8, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x200
 >> Updated instruction            :  70 8a bd 08          	: popeq {r4, r5, r6, sb, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x400
 >> Updated instruction            :  70 8c bd 08          	: popeq {r4, r5, r6, sl, fp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x800
 >> Updated instruction            :  70 80 bd 08          	: popeq {r4, r5, r6, pc}
 >> Lifespan countdown: 2. (0x8010fffc)
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x1000
 >> Updated instruction            :  70 98 bd 08          	: popeq {r4, r5, r6, fp, ip, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x2000
 >> Updated instruction            :  70 a8 bd 08          	: popeq {r4, r5, r6, fp, sp, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x4000
 >> Updated instruction            :  70 c8 bd 08          	: popeq {r4, r5, r6, fp, lr, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000254. Hit: 1. Lifespan: 2. Instruction: 00000197. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 88 bd 08          	: popeq {r4, r5, r6, fp, pc}
 >> Mask                           :  0x8000
 >> Updated instruction            :  70 08 bd 08          	: popeq {r4, r5, r6, fp}
 >> Lifespan countdown: 2. (0x80000258)
 >> Lifespan countdown: 1. (0x8000025c)
 >> Reverting instruction          :  70 88 bd 08 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 219.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 0. Instruction: 00000200. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012d8
 >> Updated                     : 0x00000000800012dc
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x1
 >> Updated instruction            :  47 ff ff eb          	: bl #0xd24
 >> Lifespan countdown: 2. (0x80000ffc)
 >> Lifespan countdown: 1. (0x80001000)
 >> Reverting instruction          :  46 ff ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1270.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x2
 >> Updated instruction            :  44 ff ff eb          	: bl #0xd18
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  46 ff ff eb 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x4
 >> Updated instruction            :  42 ff ff eb          	: bl #0xd10
 >> Lifespan countdown: 2. (0x80000fe8)
 >> Lifespan countdown: 1. (0x80000fec)
 >> Reverting instruction          :  46 ff ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x24, value: 0x0!! Count 203 Skipping to end.
 >> Run result: Fault errored program - last instruction: 202.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x8
 >> Updated instruction            :  4e ff ff eb          	: bl #0xd40
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  46 ff ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fec8, value: 0x0!! Count 208 Skipping to end.
 >> Run result: Fault errored program - last instruction: 207.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x10
 >> Updated instruction            :  56 ff ff eb          	: bl #0xd60
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000103c)
 >> Reverting instruction          :  46 ff ff eb 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x20
 >> Updated instruction            :  66 ff ff eb          	: bl #0xda0
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  46 ff ff eb 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x40
 >> Updated instruction            :  06 ff ff eb          	: bl #0xc20
 >> Lifespan countdown: 2. (0x80000ef8)
 >> Lifespan countdown: 1. (0x80000efc)
 >> Reverting instruction          :  46 ff ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x879e7fa2!! Count 258 Skipping to end.
 >> Run result: Fault errored program - last instruction: 257.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x80
 >> Updated instruction            :  c6 ff ff eb          	: bl #0xf20
 >> Lifespan countdown: 2. (0x800011f8)
 >> Lifespan countdown: 1. (0x800011fc)
 >> Reverting instruction          :  46 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 2274.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x100
 >> Updated instruction            :  46 fe ff eb          	: bl #0x920
 >> Lifespan countdown: 2. (0x80000bf8)
 >> Lifespan countdown: 1. (0x80000bfc)
 >> Reverting instruction          :  46 ff ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x8154c322!! Count 450 Skipping to end.
 >> Run result: Fault errored program - last instruction: 449.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x200
 >> Updated instruction            :  46 fd ff eb          	: bl #0x520
 >> Lifespan countdown: 2. (0x800007f8)
 >> Lifespan countdown: 1. (0x800007fc)
 >> Reverting instruction          :  46 ff ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x88, value: 0xafffff5!! Count 210 Skipping to end.
 >> Run result: Fault errored program - last instruction: 209.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x400
 >> Updated instruction            :  46 fb ff eb          	: bl #0xfffffd20
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffff8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 200.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x800
 >> Updated instruction            :  46 f7 ff eb          	: bl #0xffffed20
 >!  Erm -  fetching from unmapped memory, address: 0x7fffeff8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 200.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x1000
 >> Updated instruction            :  46 ef ff eb          	: bl #0xffffcd20
 >!  Erm -  fetching from unmapped memory, address: 0x7fffcff8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 200.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x2000
 >> Updated instruction            :  46 df ff eb          	: bl #0xffff8d20
 >!  Erm -  fetching from unmapped memory, address: 0x7fff8ff8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 200.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x4000
 >> Updated instruction            :  46 bf ff eb          	: bl #0xffff0d20
 >!  Erm -  fetching from unmapped memory, address: 0x7fff0ff8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 200.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d8. Hit: 1. Lifespan: 2. Instruction: 00000200. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 ff ff eb          	: bl #0xd20
 >> Mask                           :  0x8000
 >> Updated instruction            :  46 7f ff eb          	: bl #0xfffe0d20
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe0ff8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 200.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 0. Instruction: 00000238. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000c4
 >> Updated                     : 0x00000000800000c8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 e0 42 e2          	: sub lr, r2, #3
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 e0 42 e2          	: sub lr, r2, #0
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 e0 42 e2          	: sub lr, r2, #6
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a e0 42 e2          	: sub lr, r2, #0xa
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 e0 42 e2          	: sub lr, r2, #0x12
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 e0 42 e2          	: sub lr, r2, #0x22
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 e0 42 e2          	: sub lr, r2, #0x42
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 e0 42 e2          	: sub lr, r2, #0x82
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 e1 42 e2          	: sub lr, r2, #0x80000000
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 e2 42 e2          	: sub lr, r2, #0x20000000
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 e4 42 e2          	: sub lr, r2, #0x2000000
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 e8 42 e2          	: sub lr, r2, #0x20000
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 f0 42 e2          	: sub pc, r2, #2
 >!  Erm -  fetching from unmapped memory, address: 0x24, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 238.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 c0 42 e2          	: sub ip, r2, #2
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 a0 42 e2          	: sub sl, r2, #2
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c4. Hit: 1. Lifespan: 2. Instruction: 00000238. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 e0 42 e2          	: sub lr, r2, #2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 60 42 e2          	: sub r6, r2, #2
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000cc)
 >> Reverting instruction          :  02 e0 42 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000025, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 0. Instruction: 00000243. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000d8
 >> Updated                     : 0x00000000800000dc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 50 80 02          	: addeq r5, r0, #2
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 50 80 02          	: addeq r5, r0, #1
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 50 80 02          	: addeq r5, r0, #7
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 50 80 02          	: addeq r5, r0, #0xb
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 50 80 02          	: addeq r5, r0, #0x13
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 50 80 02          	: addeq r5, r0, #0x23
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 50 80 02          	: addeq r5, r0, #0x43
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 50 80 02          	: addeq r5, r0, #0x83
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 51 80 02          	: addeq r5, r0, #0xc0000000
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 52 80 02          	: addeq r5, r0, #0x30000000
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 54 80 02          	: addeq r5, r0, #0x3000000
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 58 80 02          	: addeq r5, r0, #0x30000
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 40 80 02          	: addeq r4, r0, #3
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 70 80 02          	: addeq r7, r0, #3
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 10 80 02          	: addeq r1, r0, #3
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d8. Hit: 1. Lifespan: 2. Instruction: 00000243. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 50 80 02          	: addeq r5, r0, #3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 d0 80 02          	: addeq sp, r0, #3
 >> Lifespan countdown: 2. (0x800000dc)
 >> Lifespan countdown: 1. (0x800000e0)
 >> Reverting instruction          :  03 50 80 02 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 0. Instruction: 00000247. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000e8
 >> Updated                     : 0x00000000800000ec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 c0 a0 e3          	: mov ip, #1
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 c0 a0 e3          	: mov ip, #2
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 c0 a0 e3          	: mov ip, #4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 c0 a0 e3          	: mov ip, #8
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 c0 a0 e3          	: mov ip, #0x10
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 c0 a0 e3          	: mov ip, #0x20
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 c0 a0 e3          	: mov ip, #0x40
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 c0 a0 e3          	: mov ip, #0x80
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 c1 a0 e3          	: mov ip, #0, #2
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 c2 a0 e3          	: mov ip, #0, #4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 c4 a0 e3          	: mov ip, #0, #8
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 c8 a0 e3          	: mov ip, #0, #16
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 d0 a0 e3          	: mov sp, #0
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 e0 a0 e3          	: mov lr, #0
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 80 a0 e3          	: mov r8, #0
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 1. Lifespan: 2. Instruction: 00000247. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 40 a0 e3          	: mov r4, #0
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 0. Instruction: 00000256. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 1. Lifespan: 2. Instruction: 00000256. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 0. Instruction: 00000262. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 2. Lifespan: 2. Instruction: 00000262. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 0. Instruction: 00000273. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110020, value: 0x0!! Count 278 Skipping to end.
 >> Run result: Fault errored program - last instruction: 277.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100a0, value: 0x0!! Count 278 Skipping to end.
 >> Run result: Fault errored program - last instruction: 277.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101a0, value: 0x0!! Count 278 Skipping to end.
 >> Run result: Fault errored program - last instruction: 277.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103a0, value: 0x0!! Count 278 Skipping to end.
 >> Run result: Fault errored program - last instruction: 277.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107a0, value: 0x0!! Count 278 Skipping to end.
 >> Run result: Fault errored program - last instruction: 277.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 5. Lifespan: 2. Instruction: 00000273. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 0. Instruction: 00000285. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011002c, value: 0x0!! Count 290 Skipping to end.
 >> Run result: Fault errored program - last instruction: 289.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100ac, value: 0x0!! Count 290 Skipping to end.
 >> Run result: Fault errored program - last instruction: 289.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101ac, value: 0x0!! Count 290 Skipping to end.
 >> Run result: Fault errored program - last instruction: 289.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103ac, value: 0x0!! Count 290 Skipping to end.
 >> Run result: Fault errored program - last instruction: 289.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107ac, value: 0x0!! Count 290 Skipping to end.
 >> Run result: Fault errored program - last instruction: 289.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 8. Lifespan: 2. Instruction: 00000285. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 0. Instruction: 00000290. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 9. Lifespan: 2. Instruction: 00000290. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 0. Instruction: 00000299. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000106c
 >> Updated                     : 0x0000000080001070
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 c0 a0 e3          	: mov ip, #1
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 c0 a0 e3          	: mov ip, #2
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 c0 a0 e3          	: mov ip, #4
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 c0 a0 e3          	: mov ip, #8
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 c0 a0 e3          	: mov ip, #0x10
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 c0 a0 e3          	: mov ip, #0x20
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 c0 a0 e3          	: mov ip, #0x40
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 c0 a0 e3          	: mov ip, #0x80
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 c1 a0 e3          	: mov ip, #0, #2
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 c2 a0 e3          	: mov ip, #0, #4
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 c4 a0 e3          	: mov ip, #0, #8
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 c8 a0 e3          	: mov ip, #0, #16
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 d0 a0 e3          	: mov sp, #0
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffffdc, value: 0x8010ff60!! Count 325 Skipping to end.
 >> Run result: Fault errored program - last instruction: 324.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 e0 a0 e3          	: mov lr, #0
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 80 a0 e3          	: mov r8, #0
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000106c. Hit: 1. Lifespan: 2. Instruction: 00000299. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 40 a0 e3          	: mov r4, #0
 >> Lifespan countdown: 2. (0x80001070)
 >> Lifespan countdown: 1. (0x80001074)
 >> Reverting instruction          :  00 c0 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x80!! Count 306 Skipping to end.
 >> Run result: Fault errored program - last instruction: 305.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 0. Instruction: 00000306. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001088
 >> Updated                     : 0x000000008000108c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  21 e4 a0 e1          	: lsr lr, r1, #8
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  27 e4 a0 e1          	: lsr lr, r7, #8
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  2b e4 a0 e1          	: lsr lr, fp, #8
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  33 e4 a0 e1          	: lsr lr, r3, r4
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  03 e4 a0 e1          	: lsl lr, r3, #8
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  63 e4 a0 e1          	: ror lr, r3, #8
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  a3 e4 a0 e1          	: lsr lr, r3, #9
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  23 e5 a0 e1          	: lsr lr, r3, #0xa
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  23 e6 a0 e1          	: lsr lr, r3, #0xc
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  23 e0 a0 e1          	: lsr lr, r3, #0x20
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  23 ec a0 e1          	: lsr lr, r3, #0x18
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  23 f4 a0 e1          	: lsr pc, r3, #8
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 306.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  23 c4 a0 e1          	: lsr ip, r3, #8
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  23 a4 a0 e1          	: lsr sl, r3, #8
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001088. Hit: 1. Lifespan: 2. Instruction: 00000306. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  23 64 a0 e1          	: lsr r6, r3, #8
 >> Lifespan countdown: 2. (0x8000108c)
 >> Lifespan countdown: 1. (0x80001090)
 >> Reverting instruction          :  23 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 0. Instruction: 00000314. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010a8
 >> Updated                     : 0x00000000800010ac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x1
 >> Updated instruction            :  23 38 a0 e1          	: lsr r3, r3, #0x10
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x2
 >> Updated instruction            :  20 38 a0 e1          	: lsr r3, r0, #0x10
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x4
 >> Updated instruction            :  26 38 a0 e1          	: lsr r3, r6, #0x10
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x8
 >> Updated instruction            :  2a 38 a0 e1          	: lsr r3, sl, #0x10
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x10
 >> Updated instruction            :  32 38 a0 e1          	: lsr r3, r2, r8
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x20
 >> Updated instruction            :  02 38 a0 e1          	: lsl r3, r2, #0x10
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x40
 >> Updated instruction            :  62 38 a0 e1          	: ror r3, r2, #0x10
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x80
 >> Updated instruction            :  a2 38 a0 e1          	: lsr r3, r2, #0x11
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x100
 >> Updated instruction            :  22 39 a0 e1          	: lsr r3, r2, #0x12
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x200
 >> Updated instruction            :  22 3a a0 e1          	: lsr r3, r2, #0x14
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x400
 >> Updated instruction            :  22 3c a0 e1          	: lsr r3, r2, #0x18
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x800
 >> Updated instruction            :  22 30 a0 e1          	: lsr r3, r2, #0x20
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x1000
 >> Updated instruction            :  22 28 a0 e1          	: lsr r2, r2, #0x10
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x2000
 >> Updated instruction            :  22 18 a0 e1          	: lsr r1, r2, #0x10
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x4000
 >> Updated instruction            :  22 78 a0 e1          	: lsr r7, r2, #0x10
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a8. Hit: 1. Lifespan: 2. Instruction: 00000314. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 38 a0 e1          	: lsr r3, r2, #0x10
 >> Mask                           :  0x8000
 >> Updated instruction            :  22 b8 a0 e1          	: lsr fp, r2, #0x10
 >> Lifespan countdown: 2. (0x800010ac)
 >> Lifespan countdown: 1. (0x800010b0)
 >> Reverting instruction          :  22 38 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffec, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 0. Instruction: 00000323. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004a0
 >> Updated                     : 0x00000000800004a4
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 a0 e1          	: mov r3, r1
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 a0 e1          	: mov r3, r2
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000048, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 a0 e1          	: mov r3, r4
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 a0 e1          	: mov r3, r8
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 a0 e1          	: lsl r3, r0, r0
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 a0 e1          	: lsr r3, r0, #0x20
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 a0 e1          	: asr r3, r0, #0x20
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000007, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 a0 e1          	: lsl r3, r0, #1
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000021fec8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 a0 e1          	: lsl r3, r0, #2
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000043fd88, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 a0 e1          	: lsl r3, r0, #4
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000010ff608, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 a0 e1          	: lsl r3, r0, #8
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff6008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 a0 e1          	: lsl r3, r0, #0x10
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff600008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 a0 e1          	: mov r2, r0
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 a0 e1          	: mov r1, r0
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 a0 e1          	: mov r7, r0
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a0. Hit: 1. Lifespan: 2. Instruction: 00000323. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e1          	: mov r3, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 a0 e1          	: mov fp, r0
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  00 30 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 0. Instruction: 00000329. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004b8
 >> Updated                     : 0x00000000800004bc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x1
 >> Updated instruction            :  79 04 0a e3          	: movw r0, #0xa479
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x2
 >> Updated instruction            :  7a 04 0a e3          	: movw r0, #0xa47a
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x4
 >> Updated instruction            :  7c 04 0a e3          	: movw r0, #0xa47c
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x8
 >> Updated instruction            :  70 04 0a e3          	: movw r0, #0xa470
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x10
 >> Updated instruction            :  68 04 0a e3          	: movw r0, #0xa468
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x20
 >> Updated instruction            :  58 04 0a e3          	: movw r0, #0xa458
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x40
 >> Updated instruction            :  38 04 0a e3          	: movw r0, #0xa438
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x80
 >> Updated instruction            :  f8 04 0a e3          	: movw r0, #0xa4f8
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x100
 >> Updated instruction            :  78 05 0a e3          	: movw r0, #0xa578
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x200
 >> Updated instruction            :  78 06 0a e3          	: movw r0, #0xa678
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x400
 >> Updated instruction            :  78 00 0a e3          	: movw r0, #0xa078
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x800
 >> Updated instruction            :  78 0c 0a e3          	: movw r0, #0xac78
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x1000
 >> Updated instruction            :  78 14 0a e3          	: movw r1, #0xa478
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000a478, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x2000
 >> Updated instruction            :  78 24 0a e3          	: movw r2, #0xa478
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x4000
 >> Updated instruction            :  78 44 0a e3          	: movw r4, #0xa478
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b8. Hit: 1. Lifespan: 2. Instruction: 00000329. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 04 0a e3          	: movw r0, #0xa478
 >> Mask                           :  0x8000
 >> Updated instruction            :  78 84 0a e3          	: movw r8, #0xa478
 >> Lifespan countdown: 2. (0x800004bc)
 >> Lifespan countdown: 1. (0x800004c0)
 >> Reverting instruction          :  78 04 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 0. Instruction: 00000335. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004d0
 >> Updated                     : 0x00000000800004d4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x1
 >> Updated instruction            :  15 30 93 e5          	: ldr r3, [r3, #0x15]
 >> Lifespan countdown: 2. (0x800004d4)
 >> Lifespan countdown: 1. (0x800004d8)
 >> Reverting instruction          :  14 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x2
 >> Updated instruction            :  16 30 93 e5          	: ldr r3, [r3, #0x16]
 >> Lifespan countdown: 2. (0x800004d4)
 >> Lifespan countdown: 1. (0x800004d8)
 >> Reverting instruction          :  14 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x4
 >> Updated instruction            :  10 30 93 e5          	: ldr r3, [r3, #0x10]
 >> Lifespan countdown: 2. (0x800004d4)
 >> Lifespan countdown: 1. (0x800004d8)
 >> Reverting instruction          :  14 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x8
 >> Updated instruction            :  1c 30 93 e5          	: ldr r3, [r3, #0x1c]
 >> Lifespan countdown: 2. (0x800004d4)
 >> Lifespan countdown: 1. (0x800004d8)
 >> Reverting instruction          :  14 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x10
 >> Updated instruction            :  04 30 93 e5          	: ldr r3, [r3, #4]
 >> Lifespan countdown: 2. (0x800004d4)
 >> Lifespan countdown: 1. (0x800004d8)
 >> Reverting instruction          :  14 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x20
 >> Updated instruction            :  34 30 93 e5          	: ldr r3, [r3, #0x34]
 >> Lifespan countdown: 2. (0x800004d4)
 >> Lifespan countdown: 1. (0x800004d8)
 >> Reverting instruction          :  14 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x40
 >> Updated instruction            :  54 30 93 e5          	: ldr r3, [r3, #0x54]
 >> Lifespan countdown: 2. (0x800004d4)
 >> Lifespan countdown: 1. (0x800004d8)
 >> Reverting instruction          :  14 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x80
 >> Updated instruction            :  94 30 93 e5          	: ldr r3, [r3, #0x94]
 >> Lifespan countdown: 2. (0x800004d4)
 >> Lifespan countdown: 1. (0x800004d8)
 >> Reverting instruction          :  14 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x100
 >> Updated instruction            :  14 31 93 e5          	: ldr r3, [r3, #0x114]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110074, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 335.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x200
 >> Updated instruction            :  14 32 93 e5          	: ldr r3, [r3, #0x214]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110174, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 335.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x400
 >> Updated instruction            :  14 34 93 e5          	: ldr r3, [r3, #0x414]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110374, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 335.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x800
 >> Updated instruction            :  14 38 93 e5          	: ldr r3, [r3, #0x814]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110774, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 335.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x1000
 >> Updated instruction            :  14 20 93 e5          	: ldr r2, [r3, #0x14]
 >> Lifespan countdown: 2. (0x800004d4)
 >> Lifespan countdown: 1. (0x800004d8)
 >> Reverting instruction          :  14 30 93 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x2000
 >> Updated instruction            :  14 10 93 e5          	: ldr r1, [r3, #0x14]
 >> Lifespan countdown: 2. (0x800004d4)
 >> Lifespan countdown: 1. (0x800004d8)
 >> Reverting instruction          :  14 30 93 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010325476, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x4000
 >> Updated instruction            :  14 70 93 e5          	: ldr r7, [r3, #0x14]
 >> Lifespan countdown: 2. (0x800004d4)
 >> Lifespan countdown: 1. (0x800004d8)
 >> Reverting instruction          :  14 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d0. Hit: 1. Lifespan: 2. Instruction: 00000335. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 93 e5          	: ldr r3, [r3, #0x14]
 >> Mask                           :  0x8000
 >> Updated instruction            :  14 b0 93 e5          	: ldr fp, [r3, #0x14]
 >> Lifespan countdown: 2. (0x800004d4)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1032543a, value: 0xefcdab89!! Count 337 Skipping to end.
 >> Run result: Fault errored program - last instruction: 336.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 0. Instruction: 00000342. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004ec
 >> Updated                     : 0x00000000800004f0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x1
 >> Updated instruction            :  75 00 0b e5          	: str r0, [fp, #-0x75]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x2
 >> Updated instruction            :  76 00 0b e5          	: str r0, [fp, #-0x76]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x4
 >> Updated instruction            :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x8
 >> Updated instruction            :  7c 00 0b e5          	: str r0, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x10
 >> Updated instruction            :  64 00 0b e5          	: str r0, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x20
 >> Updated instruction            :  54 00 0b e5          	: str r0, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x40
 >> Updated instruction            :  34 00 0b e5          	: str r0, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x80
 >> Updated instruction            :  f4 00 0b e5          	: str r0, [fp, #-0xf4]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x100
 >> Updated instruction            :  74 01 0b e5          	: str r0, [fp, #-0x174]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x200
 >> Updated instruction            :  74 02 0b e5          	: str r0, [fp, #-0x274]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x400
 >> Updated instruction            :  74 04 0b e5          	: str r0, [fp, #-0x474]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x800
 >> Updated instruction            :  74 08 0b e5          	: str r0, [fp, #-0x874]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x1000
 >> Updated instruction            :  74 10 0b e5          	: str r1, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x2000
 >> Updated instruction            :  74 20 0b e5          	: str r2, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x4000
 >> Updated instruction            :  74 40 0b e5          	: str r4, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004ec. Hit: 1. Lifespan: 2. Instruction: 00000342. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Mask                           :  0x8000
 >> Updated instruction            :  74 80 0b e5          	: str r8, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x800004f0)
 >> Lifespan countdown: 1. (0x800004f4)
 >> Reverting instruction          :  74 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 0. Instruction: 00000352. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000514
 >> Updated                     : 0x0000000080000518
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x1
 >> Updated instruction            :  31 08 4a e3          	: movt r0, #0xa831
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x2
 >> Updated instruction            :  32 08 4a e3          	: movt r0, #0xa832
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x4
 >> Updated instruction            :  34 08 4a e3          	: movt r0, #0xa834
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x8
 >> Updated instruction            :  38 08 4a e3          	: movt r0, #0xa838
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x10
 >> Updated instruction            :  20 08 4a e3          	: movt r0, #0xa820
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x20
 >> Updated instruction            :  10 08 4a e3          	: movt r0, #0xa810
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x40
 >> Updated instruction            :  70 08 4a e3          	: movt r0, #0xa870
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x80
 >> Updated instruction            :  b0 08 4a e3          	: movt r0, #0xa8b0
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x100
 >> Updated instruction            :  30 09 4a e3          	: movt r0, #0xa930
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x200
 >> Updated instruction            :  30 0a 4a e3          	: movt r0, #0xaa30
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x400
 >> Updated instruction            :  30 0c 4a e3          	: movt r0, #0xac30
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x800
 >> Updated instruction            :  30 00 4a e3          	: movt r0, #0xa030
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x1000
 >> Updated instruction            :  30 18 4a e3          	: movt r1, #0xa830
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a830ff78, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x2000
 >> Updated instruction            :  30 28 4a e3          	: movt r2, #0xa830
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x4000
 >> Updated instruction            :  30 48 4a e3          	: movt r4, #0xa830
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000514. Hit: 1. Lifespan: 2. Instruction: 00000352. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 08 4a e3          	: movt r0, #0xa830
 >> Mask                           :  0x8000
 >> Updated instruction            :  30 88 4a e3          	: movt r8, #0xa830
 >> Lifespan countdown: 2. (0x80000518)
 >> Lifespan countdown: 1. (0x8000051c)
 >> Reverting instruction          :  30 08 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 0. Instruction: 00000359. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000530
 >> Updated                     : 0x0000000080000534
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x1
 >> Updated instruction            :  bf 37 0d e3          	: movw r3, #0xd7bf
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x2
 >> Updated instruction            :  bc 37 0d e3          	: movw r3, #0xd7bc
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x4
 >> Updated instruction            :  ba 37 0d e3          	: movw r3, #0xd7ba
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x8
 >> Updated instruction            :  b6 37 0d e3          	: movw r3, #0xd7b6
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x10
 >> Updated instruction            :  ae 37 0d e3          	: movw r3, #0xd7ae
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x20
 >> Updated instruction            :  9e 37 0d e3          	: movw r3, #0xd79e
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x40
 >> Updated instruction            :  fe 37 0d e3          	: movw r3, #0xd7fe
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x80
 >> Updated instruction            :  3e 37 0d e3          	: movw r3, #0xd73e
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x100
 >> Updated instruction            :  be 36 0d e3          	: movw r3, #0xd6be
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x200
 >> Updated instruction            :  be 35 0d e3          	: movw r3, #0xd5be
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x400
 >> Updated instruction            :  be 33 0d e3          	: movw r3, #0xd3be
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x800
 >> Updated instruction            :  be 3f 0d e3          	: movw r3, #0xdfbe
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x1000
 >> Updated instruction            :  be 27 0d e3          	: movw r2, #0xd7be
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x2000
 >> Updated instruction            :  be 17 0d e3          	: movw r1, #0xd7be
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000d7be, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x4000
 >> Updated instruction            :  be 77 0d e3          	: movw r7, #0xd7be
 >> Lifespan countdown: 2. (0x80000534)
 >> Lifespan countdown: 1. (0x80000538)
 >> Reverting instruction          :  be 37 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000530. Hit: 1. Lifespan: 2. Instruction: 00000359. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 37 0d e3          	: movw r3, #0xd7be
 >> Mask                           :  0x8000
 >> Updated instruction            :  be b7 0d e3          	: movw fp, #0xd7be
 >> Lifespan countdown: 2. (0x80000534)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xd732, value: 0x698098d8!! Count 361 Skipping to end.
 >> Run result: Fault errored program - last instruction: 360.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 0. Instruction: 00000369. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000558
 >> Updated                     : 0x000000008000055c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x1
 >> Updated instruction            :  41 00 1b e5          	: ldr r0, [fp, #-0x41]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x2
 >> Updated instruction            :  42 00 1b e5          	: ldr r0, [fp, #-0x42]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x4
 >> Updated instruction            :  44 00 1b e5          	: ldr r0, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x8
 >> Updated instruction            :  48 00 1b e5          	: ldr r0, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x10
 >> Updated instruction            :  50 00 1b e5          	: ldr r0, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x20
 >> Updated instruction            :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x40
 >> Updated instruction            :  00 00 1b e5          	: ldr r0, [fp, #-0]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x80
 >> Updated instruction            :  c0 00 1b e5          	: ldr r0, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x100
 >> Updated instruction            :  40 01 1b e5          	: ldr r0, [fp, #-0x140]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x200
 >> Updated instruction            :  40 02 1b e5          	: ldr r0, [fp, #-0x240]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x400
 >> Updated instruction            :  40 04 1b e5          	: ldr r0, [fp, #-0x440]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x800
 >> Updated instruction            :  40 08 1b e5          	: ldr r0, [fp, #-0x840]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x1000
 >> Updated instruction            :  40 10 1b e5          	: ldr r1, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x2000
 >> Updated instruction            :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x4000
 >> Updated instruction            :  40 40 1b e5          	: ldr r4, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000558. Hit: 1. Lifespan: 2. Instruction: 00000369. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 00 1b e5          	: ldr r0, [fp, #-0x40]
 >> Mask                           :  0x8000
 >> Updated instruction            :  40 80 1b e5          	: ldr r8, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x8000055c)
 >> Lifespan countdown: 1. (0x80000560)
 >> Reverting instruction          :  40 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 0. Instruction: 00000378. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000057c
 >> Updated                     : 0x0000000080000580
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 80 8e e0          	: add r8, lr, r5
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 80 8e e0          	: add r8, lr, r6
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 80 8e e0          	: add r8, lr, r0
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 80 8e e0          	: add r8, lr, ip
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 80 8e e0          	: add r8, lr, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 80 8e e0          	: add r8, lr, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 80 8e e0          	: add r8, lr, r4, asr #32
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 80 8e e0          	: add r8, lr, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 81 8e e0          	: add r8, lr, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 82 8e e0          	: add r8, lr, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 84 8e e0          	: add r8, lr, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 88 8e e0          	: add r8, lr, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 90 8e e0          	: add sb, lr, r4
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 a0 8e e0          	: add sl, lr, r4
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 c0 8e e0          	: add ip, lr, r4
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000057c. Hit: 1. Lifespan: 2. Instruction: 00000378. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 80 8e e0          	: add r8, lr, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 00 8e e0          	: add r0, lr, r4
 >> Lifespan countdown: 2. (0x80000580)
 >> Lifespan countdown: 1. (0x80000584)
 >> Reverting instruction          :  04 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 0. Instruction: 00000388. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005a4
 >> Updated                     : 0x00000000800005a8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x1
 >> Updated instruction            :  05 40 97 e5          	: ldr r4, [r7, #5]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x2
 >> Updated instruction            :  06 40 97 e5          	: ldr r4, [r7, #6]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x4
 >> Updated instruction            :  00 40 97 e5          	: ldr r4, [r7]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 40 97 e5          	: ldr r4, [r7, #0xc]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x10
 >> Updated instruction            :  14 40 97 e5          	: ldr r4, [r7, #0x14]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x20
 >> Updated instruction            :  24 40 97 e5          	: ldr r4, [r7, #0x24]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x40
 >> Updated instruction            :  44 40 97 e5          	: ldr r4, [r7, #0x44]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x80
 >> Updated instruction            :  84 40 97 e5          	: ldr r4, [r7, #0x84]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x100
 >> Updated instruction            :  04 41 97 e5          	: ldr r4, [r7, #0x104]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011007c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 388.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x200
 >> Updated instruction            :  04 42 97 e5          	: ldr r4, [r7, #0x204]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011017c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 388.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x400
 >> Updated instruction            :  04 44 97 e5          	: ldr r4, [r7, #0x404]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011037c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 388.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x800
 >> Updated instruction            :  04 48 97 e5          	: ldr r4, [r7, #0x804]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011077c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 388.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 50 97 e5          	: ldr r5, [r7, #4]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 60 97 e5          	: ldr r6, [r7, #4]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 00 97 e5          	: ldr r0, [r7, #4]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a4. Hit: 1. Lifespan: 2. Instruction: 00000388. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 97 e5          	: ldr r4, [r7, #4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 c0 97 e5          	: ldr ip, [r7, #4]
 >> Lifespan countdown: 2. (0x800005a8)
 >> Lifespan countdown: 1. (0x800005ac)
 >> Reverting instruction          :  04 40 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 0. Instruction: 00000395. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005c0
 >> Updated                     : 0x00000000800005c4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 00 80 e0          	: add r0, r0, r7
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 00 80 e0          	: add r0, r0, r4
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 00 80 e0          	: add r0, r0, r2
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 00 80 e0          	: add r0, r0, lr
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 00 80 e0          	: add r0, r0, r6, lsl r0
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 00 80 e0          	: add r0, r0, r6, lsr #32
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 00 80 e0          	: add r0, r0, r6, asr #32
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 00 80 e0          	: add r0, r0, r6, lsl #1
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 01 80 e0          	: add r0, r0, r6, lsl #2
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 02 80 e0          	: add r0, r0, r6, lsl #4
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 04 80 e0          	: add r0, r0, r6, lsl #8
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 08 80 e0          	: add r0, r0, r6, lsl #16
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 10 80 e0          	: add r1, r0, r6
 >> Lifespan countdown: 2. (0x800005c4)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9c1e8d60, value: 0xaa49989b!! Count 397 Skipping to end.
 >> Run result: Fault errored program - last instruction: 396.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 20 80 e0          	: add r2, r0, r6
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 40 80 e0          	: add r4, r0, r6
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c0. Hit: 1. Lifespan: 2. Instruction: 00000395. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 80 80 e0          	: add r8, r0, r6
 >> Lifespan countdown: 2. (0x800005c4)
 >> Lifespan countdown: 1. (0x800005c8)
 >> Reverting instruction          :  06 00 80 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000009c1e8d10, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 0. Instruction: 00000404. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005e4
 >> Updated                     : 0x00000000800005e8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 20 02 e0          	: and r2, r2, r1
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 20 02 e0          	: and r2, r2, r2
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 20 02 e0          	: and r2, r2, r4
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 20 02 e0          	: and r2, r2, r8
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 20 02 e0          	: and r2, r2, r0, lsl r0
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 20 02 e0          	: and r2, r2, r0, lsr #32
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 20 02 e0          	: and r2, r2, r0, asr #32
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 20 02 e0          	: and r2, r2, r0, lsl #1
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 21 02 e0          	: and r2, r2, r0, lsl #2
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 22 02 e0          	: and r2, r2, r0, lsl #4
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 24 02 e0          	: and r2, r2, r0, lsl #8
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 28 02 e0          	: and r2, r2, r0, lsl #16
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 30 02 e0          	: and r3, r2, r0
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 00 02 e0          	: and r0, r2, r0
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 60 02 e0          	: and r6, r2, r0
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e4. Hit: 1. Lifespan: 2. Instruction: 00000404. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 20 02 e0          	: and r2, r2, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 a0 02 e0          	: and sl, r2, r0
 >> Lifespan countdown: 2. (0x800005e8)
 >> Lifespan countdown: 1. (0x800005ec)
 >> Reverting instruction          :  00 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 0. Instruction: 00000410. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005fc
 >> Updated                     : 0x0000000080000600
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x1
 >> Updated instruction            :  7d 70 1b e5          	: ldr r7, [fp, #-0x7d]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x2
 >> Updated instruction            :  7e 70 1b e5          	: ldr r7, [fp, #-0x7e]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x4
 >> Updated instruction            :  78 70 1b e5          	: ldr r7, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x8
 >> Updated instruction            :  74 70 1b e5          	: ldr r7, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x10
 >> Updated instruction            :  6c 70 1b e5          	: ldr r7, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x20
 >> Updated instruction            :  5c 70 1b e5          	: ldr r7, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x40
 >> Updated instruction            :  3c 70 1b e5          	: ldr r7, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x80
 >> Updated instruction            :  fc 70 1b e5          	: ldr r7, [fp, #-0xfc]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x100
 >> Updated instruction            :  7c 71 1b e5          	: ldr r7, [fp, #-0x17c]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x200
 >> Updated instruction            :  7c 72 1b e5          	: ldr r7, [fp, #-0x27c]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x400
 >> Updated instruction            :  7c 74 1b e5          	: ldr r7, [fp, #-0x47c]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x800
 >> Updated instruction            :  7c 78 1b e5          	: ldr r7, [fp, #-0x87c]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  7c 60 1b e5          	: ldr r6, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  7c 50 1b e5          	: ldr r5, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  7c 30 1b e5          	: ldr r3, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x80000600)
 >> Lifespan countdown: 1. (0x80000604)
 >> Reverting instruction          :  7c 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005fc. Hit: 1. Lifespan: 2. Instruction: 00000410. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 70 1b e5          	: ldr r7, [fp, #-0x7c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  7c f0 1b e5          	: ldr pc, [fp, #-0x7c]
 >!  Erm -  fetching from unmapped memory, address: 0xc1bdceee, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 410.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 0. Instruction: 00000418. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000061c
 >> Updated                     : 0x0000000080000620
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 e0 8e e0          	: add lr, lr, r6
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 e0 8e e0          	: add lr, lr, r5
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 e0 8e e0          	: add lr, lr, r3
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f e0 8e e0          	: add lr, lr, pc
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 e0 8e e0          	: add lr, lr, r7, lsl r0
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 e0 8e e0          	: add lr, lr, r7, lsr #32
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 e0 8e e0          	: add lr, lr, r7, asr #32
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 e0 8e e0          	: add lr, lr, r7, lsl #1
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 e1 8e e0          	: add lr, lr, r7, lsl #2
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 e2 8e e0          	: add lr, lr, r7, lsl #4
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 e4 8e e0          	: add lr, lr, r7, lsl #8
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 e8 8e e0          	: add lr, lr, r7, lsl #16
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 f0 8e e0          	: add pc, lr, r7
 >!  Erm -  fetching from unmapped memory, address: 0xb18b7a76, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 418.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 c0 8e e0          	: add ip, lr, r7
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 a0 8e e0          	: add sl, lr, r7
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000061c. Hit: 1. Lifespan: 2. Instruction: 00000418. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 e0 8e e0          	: add lr, lr, r7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 60 8e e0          	: add r6, lr, r7
 >> Lifespan countdown: 2. (0x80000620)
 >> Lifespan countdown: 1. (0x80000624)
 >> Reverting instruction          :  07 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 0. Instruction: 00000428. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000644
 >> Updated                     : 0x0000000080000648
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x1
 >> Updated instruction            :  7d 45 4f e3          	: movt r4, #0xf57d
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x2
 >> Updated instruction            :  7e 45 4f e3          	: movt r4, #0xf57e
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x4
 >> Updated instruction            :  78 45 4f e3          	: movt r4, #0xf578
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x8
 >> Updated instruction            :  74 45 4f e3          	: movt r4, #0xf574
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x10
 >> Updated instruction            :  6c 45 4f e3          	: movt r4, #0xf56c
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x20
 >> Updated instruction            :  5c 45 4f e3          	: movt r4, #0xf55c
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x40
 >> Updated instruction            :  3c 45 4f e3          	: movt r4, #0xf53c
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x80
 >> Updated instruction            :  fc 45 4f e3          	: movt r4, #0xf5fc
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x100
 >> Updated instruction            :  7c 44 4f e3          	: movt r4, #0xf47c
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x200
 >> Updated instruction            :  7c 47 4f e3          	: movt r4, #0xf77c
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x400
 >> Updated instruction            :  7c 41 4f e3          	: movt r4, #0xf17c
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x800
 >> Updated instruction            :  7c 4d 4f e3          	: movt r4, #0xfd7c
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x1000
 >> Updated instruction            :  7c 55 4f e3          	: movt r5, #0xf57c
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xf57cffc8, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x2000
 >> Updated instruction            :  7c 65 4f e3          	: movt r6, #0xf57c
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x4000
 >> Updated instruction            :  7c 05 4f e3          	: movt r0, #0xf57c
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000644. Hit: 1. Lifespan: 2. Instruction: 00000428. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c 45 4f e3          	: movt r4, #0xf57c
 >> Mask                           :  0x8000
 >> Updated instruction            :  7c c5 4f e3          	: movt ip, #0xf57c
 >> Lifespan countdown: 2. (0x80000648)
 >> Lifespan countdown: 1. (0x8000064c)
 >> Reverting instruction          :  7c 45 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 0. Instruction: 00000436. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000664
 >> Updated                     : 0x0000000080000668
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x1
 >> Updated instruction            :  15 90 96 e5          	: ldr sb, [r6, #0x15]
 >> Lifespan countdown: 2. (0x80000668)
 >> Lifespan countdown: 1. (0x8000066c)
 >> Reverting instruction          :  14 90 96 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x2
 >> Updated instruction            :  16 90 96 e5          	: ldr sb, [r6, #0x16]
 >> Lifespan countdown: 2. (0x80000668)
 >> Lifespan countdown: 1. (0x8000066c)
 >> Reverting instruction          :  14 90 96 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x4
 >> Updated instruction            :  10 90 96 e5          	: ldr sb, [r6, #0x10]
 >> Lifespan countdown: 2. (0x80000668)
 >> Lifespan countdown: 1. (0x8000066c)
 >> Reverting instruction          :  14 90 96 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x8
 >> Updated instruction            :  1c 90 96 e5          	: ldr sb, [r6, #0x1c]
 >> Lifespan countdown: 2. (0x80000668)
 >> Lifespan countdown: 1. (0x8000066c)
 >> Reverting instruction          :  14 90 96 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x10
 >> Updated instruction            :  04 90 96 e5          	: ldr sb, [r6, #4]
 >> Lifespan countdown: 2. (0x80000668)
 >> Lifespan countdown: 1. (0x8000066c)
 >> Reverting instruction          :  14 90 96 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x20
 >> Updated instruction            :  34 90 96 e5          	: ldr sb, [r6, #0x34]
 >> Lifespan countdown: 2. (0x80000668)
 >> Lifespan countdown: 1. (0x8000066c)
 >> Reverting instruction          :  14 90 96 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x40
 >> Updated instruction            :  54 90 96 e5          	: ldr sb, [r6, #0x54]
 >> Lifespan countdown: 2. (0x80000668)
 >> Lifespan countdown: 1. (0x8000066c)
 >> Reverting instruction          :  14 90 96 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x80
 >> Updated instruction            :  94 90 96 e5          	: ldr sb, [r6, #0x94]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x100
 >> Updated instruction            :  14 91 96 e5          	: ldr sb, [r6, #0x114]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011008c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x200
 >> Updated instruction            :  14 92 96 e5          	: ldr sb, [r6, #0x214]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011018c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x400
 >> Updated instruction            :  14 94 96 e5          	: ldr sb, [r6, #0x414]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011038c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x800
 >> Updated instruction            :  14 98 96 e5          	: ldr sb, [r6, #0x814]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011078c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x1000
 >> Updated instruction            :  14 80 96 e5          	: ldr r8, [r6, #0x14]
 >> Lifespan countdown: 2. (0x80000668)
 >> Lifespan countdown: 1. (0x8000066c)
 >> Reverting instruction          :  14 90 96 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x2000
 >> Updated instruction            :  14 b0 96 e5          	: ldr fp, [r6, #0x14]
 >> Lifespan countdown: 2. (0x80000668)
 >> Lifespan countdown: 1. (0x8000066c)
 >> Reverting instruction          :  14 90 96 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff80, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 438.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x4000
 >> Updated instruction            :  14 d0 96 e5          	: ldr sp, [r6, #0x14]
 >> Lifespan countdown: 2. (0x80000668)
 >> Lifespan countdown: 1. (0x8000066c)
 >> Reverting instruction          :  14 90 96 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000664. Hit: 1. Lifespan: 2. Instruction: 00000436. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 90 96 e5          	: ldr sb, [r6, #0x14]
 >> Mask                           :  0x8000
 >> Updated instruction            :  14 10 96 e5          	: ldr r1, [r6, #0x14]
 >> Lifespan countdown: 2. (0x80000668)
 >> Lifespan countdown: 1. (0x8000066c)
 >> Reverting instruction          :  14 90 96 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 0. Instruction: 00000444. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000684
 >> Updated                     : 0x0000000080000688
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 c0 2c e0          	: eor ip, ip, r3
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 c0 2c e0          	: eor ip, ip, r0
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 c0 2c e0          	: eor ip, ip, r6
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a c0 2c e0          	: eor ip, ip, sl
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 c0 2c e0          	: eor ip, ip, r2, lsl r0
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 c0 2c e0          	: eor ip, ip, r2, lsr #32
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 c0 2c e0          	: eor ip, ip, r2, asr #32
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 c0 2c e0          	: eor ip, ip, r2, lsl #1
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 c1 2c e0          	: eor ip, ip, r2, lsl #2
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 c2 2c e0          	: eor ip, ip, r2, lsl #4
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 c4 2c e0          	: eor ip, ip, r2, lsl #8
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 c8 2c e0          	: eor ip, ip, r2, lsl #16
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 d0 2c e0          	: eor sp, ip, r2
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 e0 2c e0          	: eor lr, ip, r2
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x486b0013, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 80 2c e0          	: eor r8, ip, r2
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000684. Hit: 1. Lifespan: 2. Instruction: 00000444. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 40 2c e0          	: eor r4, ip, r2
 >> Lifespan countdown: 2. (0x80000688)
 >> Lifespan countdown: 1. (0x8000068c)
 >> Reverting instruction          :  02 c0 2c e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000486affbf, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 0. Instruction: 00000454. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006ac
 >> Updated                     : 0x00000000800006b0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 70 a0 e1          	: mov r7, sp
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 70 a0 e1          	: mov r7, lr
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 70 a0 e1          	: mov r7, r8
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 70 a0 e1          	: mov r7, r4
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 70 a0 e1          	: lsl r7, ip, r0
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 70 a0 e1          	: lsr r7, ip, #0x20
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 70 a0 e1          	: asr r7, ip, #0x20
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 70 a0 e1          	: lsl r7, ip, #1
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 71 a0 e1          	: lsl r7, ip, #2
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 72 a0 e1          	: lsl r7, ip, #4
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 74 a0 e1          	: lsl r7, ip, #8
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 78 a0 e1          	: lsl r7, ip, #0x10
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 60 a0 e1          	: mov r6, ip
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 50 a0 e1          	: mov r5, ip
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 30 a0 e1          	: mov r3, ip
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  0c 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ac. Hit: 1. Lifespan: 2. Instruction: 00000454. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 70 a0 e1          	: mov r7, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c f0 a0 e1          	: mov pc, ip
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 454.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 0. Instruction: 00000464. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006d4
 >> Updated                     : 0x00000000800006d8
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000020, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 70 a0 e1          	: mov r7, r5
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f3c5a2c2, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 70 a0 e1          	: mov r7, r6
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c5970055, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 70 a0 e1          	: mov r7, r0
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 70 a0 e1          	: mov r7, ip
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a8304633, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 70 a0 e1          	: lsl r7, r4, r0
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000020, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 70 a0 e1          	: lsr r7, r4, #0x20
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000020, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 70 a0 e1          	: asr r7, r4, #0x20
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000001f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 70 a0 e1          	: lsl r7, r4, #1
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000021ff10, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 71 a0 e1          	: lsl r7, r4, #2
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000043fe00, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 72 a0 e1          	: lsl r7, r4, #4
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000010ff7a0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 74 a0 e1          	: lsl r7, r4, #8
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff7820, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 78 a0 e1          	: lsl r7, r4, #0x10
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff780020, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 60 a0 e1          	: mov r6, r4
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000020, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 50 a0 e1          	: mov r5, r4
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000020, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 30 a0 e1          	: mov r3, r4
 >> Lifespan countdown: 2. (0x800006d8)
 >> Lifespan countdown: 1. (0x800006dc)
 >> Reverting instruction          :  04 70 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000020, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d4. Hit: 1. Lifespan: 2. Instruction: 00000464. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 70 a0 e1          	: mov r7, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 f0 a0 e1          	: mov pc, r4
 >> Lifespan countdown: 2. (0x8010ff78)
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 0. Instruction: 00000472. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006f4
 >> Updated                     : 0x00000000800006f8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x1
 >> Updated instruction            :  75 40 80 e5          	: str r4, [r0, #0x75]
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  74 40 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x2
 >> Updated instruction            :  76 40 80 e5          	: str r4, [r0, #0x76]
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  74 40 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x4
 >> Updated instruction            :  70 40 80 e5          	: str r4, [r0, #0x70]
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  74 40 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x8
 >> Updated instruction            :  7c 40 80 e5          	: str r4, [r0, #0x7c]
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  74 40 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x10
 >> Updated instruction            :  64 40 80 e5          	: str r4, [r0, #0x64]
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  74 40 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x20
 >> Updated instruction            :  54 40 80 e5          	: str r4, [r0, #0x54]
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  74 40 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x40
 >> Updated instruction            :  34 40 80 e5          	: str r4, [r0, #0x34]
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  74 40 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x80
 >> Updated instruction            :  f4 40 80 e5          	: str r4, [r0, #0xf4]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110054, value: 0x0!! Count 473 Skipping to end.
 >> Run result: Fault errored program - last instruction: 472.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x100
 >> Updated instruction            :  74 41 80 e5          	: str r4, [r0, #0x174]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100d4, value: 0x0!! Count 473 Skipping to end.
 >> Run result: Fault errored program - last instruction: 472.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x200
 >> Updated instruction            :  74 42 80 e5          	: str r4, [r0, #0x274]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101d4, value: 0x0!! Count 473 Skipping to end.
 >> Run result: Fault errored program - last instruction: 472.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x400
 >> Updated instruction            :  74 44 80 e5          	: str r4, [r0, #0x474]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103d4, value: 0x0!! Count 473 Skipping to end.
 >> Run result: Fault errored program - last instruction: 472.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x800
 >> Updated instruction            :  74 48 80 e5          	: str r4, [r0, #0x874]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107d4, value: 0x0!! Count 473 Skipping to end.
 >> Run result: Fault errored program - last instruction: 472.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x1000
 >> Updated instruction            :  74 50 80 e5          	: str r5, [r0, #0x74]
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  74 40 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x2000
 >> Updated instruction            :  74 60 80 e5          	: str r6, [r0, #0x74]
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  74 40 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x4000
 >> Updated instruction            :  74 00 80 e5          	: str r0, [r0, #0x74]
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  74 40 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f4. Hit: 1. Lifespan: 2. Instruction: 00000472. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  74 40 80 e5          	: str r4, [r0, #0x74]
 >> Mask                           :  0x8000
 >> Updated instruction            :  74 c0 80 e5          	: str ip, [r0, #0x74]
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  74 40 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 0. Instruction: 00000479. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000710
 >> Updated                     : 0x0000000080000714
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x1
 >> Updated instruction            :  6f e5 85 e0          	: add lr, r5, pc, ror #10
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x2
 >> Updated instruction            :  6c e5 85 e0          	: add lr, r5, ip, ror #10
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x4
 >> Updated instruction            :  6a e5 85 e0          	: add lr, r5, sl, ror #10
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x8
 >> Updated instruction            :  66 e5 85 e0          	: add lr, r5, r6, ror #10
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x10
 >> Updated instruction            :  7e e5 85 e0          	: add lr, r5, lr, ror r5
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x20
 >> Updated instruction            :  4e e5 85 e0          	: add lr, r5, lr, asr #10
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x40
 >> Updated instruction            :  2e e5 85 e0          	: add lr, r5, lr, lsr #10
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x80
 >> Updated instruction            :  ee e5 85 e0          	: add lr, r5, lr, ror #11
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x100
 >> Updated instruction            :  6e e4 85 e0          	: add lr, r5, lr, ror #8
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x200
 >> Updated instruction            :  6e e7 85 e0          	: add lr, r5, lr, ror #14
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x400
 >> Updated instruction            :  6e e1 85 e0          	: add lr, r5, lr, ror #2
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x800
 >> Updated instruction            :  6e ed 85 e0          	: add lr, r5, lr, ror #26
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x1000
 >> Updated instruction            :  6e f5 85 e0          	: add pc, r5, lr, ror #10
 >!  Erm -  fetching from unmapped memory, address: 0x2a0efc4, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 479.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x2000
 >> Updated instruction            :  6e c5 85 e0          	: add ip, r5, lr, ror #10
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x4000
 >> Updated instruction            :  6e a5 85 e0          	: add sl, r5, lr, ror #10
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000710. Hit: 1. Lifespan: 2. Instruction: 00000479. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e5 85 e0          	: add lr, r5, lr, ror #10
 >> Mask                           :  0x8000
 >> Updated instruction            :  6e 65 85 e0          	: add r6, r5, lr, ror #10
 >> Lifespan countdown: 2. (0x80000714)
 >> Lifespan countdown: 1. (0x80000718)
 >> Reverting instruction          :  6e e5 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 0. Instruction: 00000490. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000073c
 >> Updated                     : 0x0000000080000740
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x1
 >> Updated instruction            :  99 7d 4f e3          	: movt r7, #0xfd99
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x2
 >> Updated instruction            :  9a 7d 4f e3          	: movt r7, #0xfd9a
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x4
 >> Updated instruction            :  9c 7d 4f e3          	: movt r7, #0xfd9c
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x8
 >> Updated instruction            :  90 7d 4f e3          	: movt r7, #0xfd90
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x10
 >> Updated instruction            :  88 7d 4f e3          	: movt r7, #0xfd88
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x20
 >> Updated instruction            :  b8 7d 4f e3          	: movt r7, #0xfdb8
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x40
 >> Updated instruction            :  d8 7d 4f e3          	: movt r7, #0xfdd8
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x80
 >> Updated instruction            :  18 7d 4f e3          	: movt r7, #0xfd18
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x100
 >> Updated instruction            :  98 7c 4f e3          	: movt r7, #0xfc98
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x200
 >> Updated instruction            :  98 7f 4f e3          	: movt r7, #0xff98
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x400
 >> Updated instruction            :  98 79 4f e3          	: movt r7, #0xf998
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x800
 >> Updated instruction            :  98 75 4f e3          	: movt r7, #0xf598
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x1000
 >> Updated instruction            :  98 6d 4f e3          	: movt r6, #0xfd98
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x2000
 >> Updated instruction            :  98 5d 4f e3          	: movt r5, #0xfd98
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x4000
 >> Updated instruction            :  98 3d 4f e3          	: movt r3, #0xfd98
 >> Lifespan countdown: 2. (0x80000740)
 >> Lifespan countdown: 1. (0x80000744)
 >> Reverting instruction          :  98 7d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000073c. Hit: 1. Lifespan: 2. Instruction: 00000490. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 7d 4f e3          	: movt r7, #0xfd98
 >> Mask                           :  0x8000
 >> Updated instruction            :  98 fd 4f e3          	: movt pc, #0xfd98
 >!  Erm -  fetching from unmapped memory, address: 0xfd980744, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 490.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 0. Instruction: 00000499. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000760
 >> Updated                     : 0x0000000080000764
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 60 8a e0          	: add r6, sl, r7
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 60 8a e0          	: add r6, sl, r4
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 60 8a e0          	: add r6, sl, r2
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 60 8a e0          	: add r6, sl, lr
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 60 8a e0          	: add r6, sl, r6, lsl r0
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 60 8a e0          	: add r6, sl, r6, lsr #32
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 60 8a e0          	: add r6, sl, r6, asr #32
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 60 8a e0          	: add r6, sl, r6, lsl #1
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 61 8a e0          	: add r6, sl, r6, lsl #2
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 62 8a e0          	: add r6, sl, r6, lsl #4
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 64 8a e0          	: add r6, sl, r6, lsl #8
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 68 8a e0          	: add r6, sl, r6, lsl #16
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 70 8a e0          	: add r7, sl, r6
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 40 8a e0          	: add r4, sl, r6
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 20 8a e0          	: add r2, sl, r6
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000760. Hit: 1. Lifespan: 2. Instruction: 00000499. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8a e0          	: add r6, sl, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 e0 8a e0          	: add lr, sl, r6
 >> Lifespan countdown: 2. (0x80000764)
 >> Lifespan countdown: 1. (0x80000768)
 >> Reverting instruction          :  06 60 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 0. Instruction: 00000509. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000788
 >> Updated                     : 0x000000008000078c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 10 2e e0          	: eor r1, lr, sp
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 10 2e e0          	: eor r1, lr, lr
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 10 2e e0          	: eor r1, lr, r8
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 10 2e e0          	: eor r1, lr, r4
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 10 2e e0          	: eor r1, lr, ip, lsl r0
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 10 2e e0          	: eor r1, lr, ip, lsr #32
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 10 2e e0          	: eor r1, lr, ip, asr #32
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 10 2e e0          	: eor r1, lr, ip, lsl #1
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 11 2e e0          	: eor r1, lr, ip, lsl #2
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 12 2e e0          	: eor r1, lr, ip, lsl #4
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 14 2e e0          	: eor r1, lr, ip, lsl #8
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 18 2e e0          	: eor r1, lr, ip, lsl #16
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 00 2e e0          	: eor r0, lr, ip
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 30 2e e0          	: eor r3, lr, ip
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 50 2e e0          	: eor r5, lr, ip
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000788. Hit: 1. Lifespan: 2. Instruction: 00000509. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 2e e0          	: eor r1, lr, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 90 2e e0          	: eor sb, lr, ip
 >> Lifespan countdown: 2. (0x8000078c)
 >> Lifespan countdown: 1. (0x80000790)
 >> Reverting instruction          :  0c 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 0. Instruction: 00000517. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007a8
 >> Updated                     : 0x00000000800007ac
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008840862c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x1
 >> Updated instruction            :  29 10 1b e5          	: ldr r1, [fp, #-0x29]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff78ac, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x2
 >> Updated instruction            :  2a 10 1b e5          	: ldr r1, [fp, #-0x2a]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff78803c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x4
 >> Updated instruction            :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x8
 >> Updated instruction            :  20 10 1b e5          	: ldr r1, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x10
 >> Updated instruction            :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000002c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x20
 >> Updated instruction            :  08 10 1b e5          	: ldr r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000002c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x40
 >> Updated instruction            :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006745232d, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x80
 >> Updated instruction            :  a8 10 1b e5          	: ldr r1, [fp, #-0xa8]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000002c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x100
 >> Updated instruction            :  28 11 1b e5          	: ldr r1, [fp, #-0x128]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000002c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x200
 >> Updated instruction            :  28 12 1b e5          	: ldr r1, [fp, #-0x228]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000002c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x400
 >> Updated instruction            :  28 14 1b e5          	: ldr r1, [fp, #-0x428]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000002c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x800
 >> Updated instruction            :  28 18 1b e5          	: ldr r1, [fp, #-0x828]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000002c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x1000
 >> Updated instruction            :  28 00 1b e5          	: ldr r0, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008840862c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x2000
 >> Updated instruction            :  28 30 1b e5          	: ldr r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008840862c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x4000
 >> Updated instruction            :  28 50 1b e5          	: ldr r5, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008840862c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007a8. Hit: 1. Lifespan: 2. Instruction: 00000517. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Mask                           :  0x8000
 >> Updated instruction            :  28 90 1b e5          	: ldr sb, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x800007ac)
 >> Lifespan countdown: 1. (0x800007b0)
 >> Reverting instruction          :  28 10 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008840862c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 0. Instruction: 00000525. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007c8
 >> Updated                     : 0x00000000800007cc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 60 81 e0          	: add r6, r1, r7
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 60 81 e0          	: add r6, r1, r4
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 60 81 e0          	: add r6, r1, r2
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 60 81 e0          	: add r6, r1, lr
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 60 81 e0          	: add r6, r1, r6, lsl r0
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 60 81 e0          	: add r6, r1, r6, lsr #32
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 60 81 e0          	: add r6, r1, r6, asr #32
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 60 81 e0          	: add r6, r1, r6, lsl #1
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 61 81 e0          	: add r6, r1, r6, lsl #2
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 62 81 e0          	: add r6, r1, r6, lsl #4
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 64 81 e0          	: add r6, r1, r6, lsl #8
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 68 81 e0          	: add r6, r1, r6, lsl #16
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 70 81 e0          	: add r7, r1, r6
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 40 81 e0          	: add r4, r1, r6
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 20 81 e0          	: add r2, r1, r6
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007c8. Hit: 1. Lifespan: 2. Instruction: 00000525. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 e0 81 e0          	: add lr, r1, r6
 >> Lifespan countdown: 2. (0x800007cc)
 >> Lifespan countdown: 1. (0x800007d0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 0. Instruction: 00000534. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007ec
 >> Updated                     : 0x00000000800007f0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 50 05 e0          	: and r5, r5, r0
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 50 05 e0          	: and r5, r5, r3
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 50 05 e0          	: and r5, r5, r5
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 50 05 e0          	: and r5, r5, sb
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 50 05 e0          	: and r5, r5, r1, lsl r0
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 50 05 e0          	: and r5, r5, r1, lsr #32
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 50 05 e0          	: and r5, r5, r1, asr #32
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 50 05 e0          	: and r5, r5, r1, lsl #1
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 51 05 e0          	: and r5, r5, r1, lsl #2
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 52 05 e0          	: and r5, r5, r1, lsl #4
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 54 05 e0          	: and r5, r5, r1, lsl #8
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 58 05 e0          	: and r5, r5, r1, lsl #16
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 40 05 e0          	: and r4, r5, r1
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 70 05 e0          	: and r7, r5, r1
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 10 05 e0          	: and r1, r5, r1
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ec. Hit: 1. Lifespan: 2. Instruction: 00000534. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 05 e0          	: and r5, r5, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 d0 05 e0          	: and sp, r5, r1
 >> Lifespan countdown: 2. (0x800007f0)
 >> Lifespan countdown: 1. (0x800007f4)
 >> Reverting instruction          :  01 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 0. Instruction: 00000543. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000810
 >> Updated                     : 0x0000000080000814
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d e0 8e e0          	: add lr, lr, sp
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e e0 8e e0          	: add lr, lr, lr
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 e0 8e e0          	: add lr, lr, r8
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 e0 8e e0          	: add lr, lr, r4
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c e0 8e e0          	: add lr, lr, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c e0 8e e0          	: add lr, lr, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c e0 8e e0          	: add lr, lr, ip, asr #32
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c e0 8e e0          	: add lr, lr, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c e1 8e e0          	: add lr, lr, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c e2 8e e0          	: add lr, lr, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c e4 8e e0          	: add lr, lr, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c e8 8e e0          	: add lr, lr, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c f0 8e e0          	: add pc, lr, ip
 >!  Erm -  fetching from unmapped memory, address: 0xe4f369a, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 543.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c c0 8e e0          	: add ip, lr, ip
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c a0 8e e0          	: add sl, lr, ip
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000810. Hit: 1. Lifespan: 2. Instruction: 00000543. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 60 8e e0          	: add r6, lr, ip
 >> Lifespan countdown: 2. (0x80000814)
 >> Lifespan countdown: 1. (0x80000818)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 0. Instruction: 00000550. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000082c
 >> Updated                     : 0x0000000080000830
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 70 85 e0          	: add r7, r5, r6
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 70 85 e0          	: add r7, r5, r5
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 70 85 e0          	: add r7, r5, r3
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 70 85 e0          	: add r7, r5, pc
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 70 85 e0          	: add r7, r5, r7, lsl r0
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 70 85 e0          	: add r7, r5, r7, lsr #32
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 70 85 e0          	: add r7, r5, r7, asr #32
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 70 85 e0          	: add r7, r5, r7, lsl #1
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 71 85 e0          	: add r7, r5, r7, lsl #2
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 72 85 e0          	: add r7, r5, r7, lsl #4
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 74 85 e0          	: add r7, r5, r7, lsl #8
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 78 85 e0          	: add r7, r5, r7, lsl #16
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 60 85 e0          	: add r6, r5, r7
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 50 85 e0          	: add r5, r5, r7
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 30 85 e0          	: add r3, r5, r7
 >> Lifespan countdown: 2. (0x80000830)
 >> Lifespan countdown: 1. (0x80000834)
 >> Reverting instruction          :  07 70 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000082c. Hit: 1. Lifespan: 2. Instruction: 00000550. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 85 e0          	: add r7, r5, r7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 f0 85 e0          	: add pc, r5, r7
 >!  Erm -  fetching from unmapped memory, address: 0xfd987192, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 550.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 0. Instruction: 00000558. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000084c
 >> Updated                     : 0x0000000080000850
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x1
 >> Updated instruction            :  61 0a 8e e0          	: add r0, lr, r1, ror #20
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x2
 >> Updated instruction            :  62 0a 8e e0          	: add r0, lr, r2, ror #20
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x4
 >> Updated instruction            :  64 0a 8e e0          	: add r0, lr, r4, ror #20
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x8
 >> Updated instruction            :  68 0a 8e e0          	: add r0, lr, r8, ror #20
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x10
 >> Updated instruction            :  70 0a 8e e0          	: add r0, lr, r0, ror sl
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x20
 >> Updated instruction            :  40 0a 8e e0          	: add r0, lr, r0, asr #20
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x40
 >> Updated instruction            :  20 0a 8e e0          	: add r0, lr, r0, lsr #20
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x80
 >> Updated instruction            :  e0 0a 8e e0          	: add r0, lr, r0, ror #21
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x100
 >> Updated instruction            :  60 0b 8e e0          	: add r0, lr, r0, ror #22
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x200
 >> Updated instruction            :  60 08 8e e0          	: add r0, lr, r0, ror #16
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x400
 >> Updated instruction            :  60 0e 8e e0          	: add r0, lr, r0, ror #28
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x800
 >> Updated instruction            :  60 02 8e e0          	: add r0, lr, r0, ror #4
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x1000
 >> Updated instruction            :  60 1a 8e e0          	: add r1, lr, r0, ror #20
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x2000
 >> Updated instruction            :  60 2a 8e e0          	: add r2, lr, r0, ror #20
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x4000
 >> Updated instruction            :  60 4a 8e e0          	: add r4, lr, r0, ror #20
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000084c. Hit: 1. Lifespan: 2. Instruction: 00000558. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8e e0          	: add r0, lr, r0, ror #20
 >> Mask                           :  0x8000
 >> Updated instruction            :  60 8a 8e e0          	: add r8, lr, r0, ror #20
 >> Lifespan countdown: 2. (0x80000850)
 >> Lifespan countdown: 1. (0x80000854)
 >> Reverting instruction          :  60 0a 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 0. Instruction: 00000567. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000870
 >> Updated                     : 0x0000000080000874
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x1
 >> Updated instruction            :  41 50 55 e2          	: subs r5, r5, #0x41
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x2
 >> Updated instruction            :  42 50 55 e2          	: subs r5, r5, #0x42
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x4
 >> Updated instruction            :  44 50 55 e2          	: subs r5, r5, #0x44
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x8
 >> Updated instruction            :  48 50 55 e2          	: subs r5, r5, #0x48
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x10
 >> Updated instruction            :  50 50 55 e2          	: subs r5, r5, #0x50
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x20
 >> Updated instruction            :  60 50 55 e2          	: subs r5, r5, #0x60
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x40
 >> Updated instruction            :  00 50 55 e2          	: subs r5, r5, #0
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x80
 >> Updated instruction            :  c0 50 55 e2          	: subs r5, r5, #0xc0
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x100
 >> Updated instruction            :  40 51 55 e2          	: subs r5, r5, #64, #2
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x200
 >> Updated instruction            :  40 52 55 e2          	: subs r5, r5, #64, #4
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x400
 >> Updated instruction            :  40 54 55 e2          	: subs r5, r5, #64, #8
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x800
 >> Updated instruction            :  40 58 55 e2          	: subs r5, r5, #64, #16
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x1000
 >> Updated instruction            :  40 40 55 e2          	: subs r4, r5, #0x40
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x2000
 >> Updated instruction            :  40 70 55 e2          	: subs r7, r5, #0x40
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x4000
 >> Updated instruction            :  40 10 55 e2          	: subs r1, r5, #0x40
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000870. Hit: 1. Lifespan: 2. Instruction: 00000567. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 50 55 e2          	: subs r5, r5, #0x40
 >> Mask                           :  0x8000
 >> Updated instruction            :  40 d0 55 e2          	: subs sp, r5, #0x40
 >> Lifespan countdown: 2. (0x80000874)
 >> Lifespan countdown: 1. (0x80000878)
 >> Reverting instruction          :  40 50 55 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 0. Instruction: 00000575. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000890
 >> Updated                     : 0x0000000080000894
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x1
 >> Updated instruction            :  29 90 0b e5          	: str sb, [fp, #-0x29]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xb810fff4, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x2
 >> Updated instruction            :  2a 90 0b e5          	: str sb, [fp, #-0x2a]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffb8fff4, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x4
 >> Updated instruction            :  2c 90 0b e5          	: str sb, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011004c, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x8
 >> Updated instruction            :  20 90 0b e5          	: str sb, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x10
 >> Updated instruction            :  38 90 0b e5          	: str sb, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x20
 >> Updated instruction            :  08 90 0b e5          	: str sb, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x40
 >> Updated instruction            :  68 90 0b e5          	: str sb, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x80
 >> Updated instruction            :  a8 90 0b e5          	: str sb, [fp, #-0xa8]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x100
 >> Updated instruction            :  28 91 0b e5          	: str sb, [fp, #-0x128]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x200
 >> Updated instruction            :  28 92 0b e5          	: str sb, [fp, #-0x228]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x400
 >> Updated instruction            :  28 94 0b e5          	: str sb, [fp, #-0x428]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x800
 >> Updated instruction            :  28 98 0b e5          	: str sb, [fp, #-0x828]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x1000
 >> Updated instruction            :  28 80 0b e5          	: str r8, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x2000
 >> Updated instruction            :  28 b0 0b e5          	: str fp, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x4000
 >> Updated instruction            :  28 d0 0b e5          	: str sp, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000890. Hit: 1. Lifespan: 2. Instruction: 00000575. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Mask                           :  0x8000
 >> Updated instruction            :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000894)
 >> Lifespan countdown: 1. (0x80000898)
 >> Reverting instruction          :  28 90 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 0. Instruction: 00000583. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008b0
 >> Updated                     : 0x00000000800008b4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x1
 >> Updated instruction            :  1f 96 4f e3          	: movt sb, #0xf61f
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x2
 >> Updated instruction            :  1c 96 4f e3          	: movt sb, #0xf61c
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x4
 >> Updated instruction            :  1a 96 4f e3          	: movt sb, #0xf61a
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x8
 >> Updated instruction            :  16 96 4f e3          	: movt sb, #0xf616
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x10
 >> Updated instruction            :  0e 96 4f e3          	: movt sb, #0xf60e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x20
 >> Updated instruction            :  3e 96 4f e3          	: movt sb, #0xf63e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x40
 >> Updated instruction            :  5e 96 4f e3          	: movt sb, #0xf65e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x80
 >> Updated instruction            :  9e 96 4f e3          	: movt sb, #0xf69e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x100
 >> Updated instruction            :  1e 97 4f e3          	: movt sb, #0xf71e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x200
 >> Updated instruction            :  1e 94 4f e3          	: movt sb, #0xf41e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x400
 >> Updated instruction            :  1e 92 4f e3          	: movt sb, #0xf21e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x800
 >> Updated instruction            :  1e 9e 4f e3          	: movt sb, #0xfe1e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x1000
 >> Updated instruction            :  1e 86 4f e3          	: movt r8, #0xf61e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x2000
 >> Updated instruction            :  1e b6 4f e3          	: movt fp, #0xf61e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f61efec0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 589.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x4000
 >> Updated instruction            :  1e d6 4f e3          	: movt sp, #0xf61e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b0. Hit: 1. Lifespan: 2. Instruction: 00000583. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 96 4f e3          	: movt sb, #0xf61e
 >> Mask                           :  0x8000
 >> Updated instruction            :  1e 16 4f e3          	: movt r1, #0xf61e
 >> Lifespan countdown: 2. (0x800008b4)
 >> Lifespan countdown: 1. (0x800008b8)
 >> Reverting instruction          :  1e 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 0. Instruction: 00000591. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008d0
 >> Updated                     : 0x00000000800008d4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x1
 >> Updated instruction            :  41 c3 0b e3          	: movw ip, #0xb341
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x2
 >> Updated instruction            :  42 c3 0b e3          	: movw ip, #0xb342
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x4
 >> Updated instruction            :  44 c3 0b e3          	: movw ip, #0xb344
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x8
 >> Updated instruction            :  48 c3 0b e3          	: movw ip, #0xb348
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x10
 >> Updated instruction            :  50 c3 0b e3          	: movw ip, #0xb350
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x20
 >> Updated instruction            :  60 c3 0b e3          	: movw ip, #0xb360
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x40
 >> Updated instruction            :  00 c3 0b e3          	: movw ip, #0xb300
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x80
 >> Updated instruction            :  c0 c3 0b e3          	: movw ip, #0xb3c0
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x100
 >> Updated instruction            :  40 c2 0b e3          	: movw ip, #0xb240
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x200
 >> Updated instruction            :  40 c1 0b e3          	: movw ip, #0xb140
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x400
 >> Updated instruction            :  40 c7 0b e3          	: movw ip, #0xb740
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x800
 >> Updated instruction            :  40 cb 0b e3          	: movw ip, #0xbb40
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x1000
 >> Updated instruction            :  40 d3 0b e3          	: movw sp, #0xb340
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x2000
 >> Updated instruction            :  40 e3 0b e3          	: movw lr, #0xb340
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x4000
 >> Updated instruction            :  40 83 0b e3          	: movw r8, #0xb340
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d0. Hit: 1. Lifespan: 2. Instruction: 00000591. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c3 0b e3          	: movw ip, #0xb340
 >> Mask                           :  0x8000
 >> Updated instruction            :  40 43 0b e3          	: movw r4, #0xb340
 >> Lifespan countdown: 2. (0x800008d4)
 >> Lifespan countdown: 1. (0x800008d8)
 >> Reverting instruction          :  40 c3 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 0. Instruction: 00000599. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008f0
 >> Updated                     : 0x00000000800008f4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 e0 21 e0          	: eor lr, r1, r8
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b e0 21 e0          	: eor lr, r1, fp
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d e0 21 e0          	: eor lr, r1, sp
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 e0 21 e0          	: eor lr, r1, r1
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 e0 21 e0          	: eor lr, r1, sb, lsl r0
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 e0 21 e0          	: eor lr, r1, sb, lsr #32
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 e0 21 e0          	: eor lr, r1, sb, asr #32
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 e0 21 e0          	: eor lr, r1, sb, lsl #1
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 e1 21 e0          	: eor lr, r1, sb, lsl #2
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 e2 21 e0          	: eor lr, r1, sb, lsl #4
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 e4 21 e0          	: eor lr, r1, sb, lsl #8
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 e8 21 e0          	: eor lr, r1, sb, lsl #16
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 f0 21 e0          	: eor pc, r1, sb
 >!  Erm -  fetching from unmapped memory, address: 0x413d390c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 599.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 c0 21 e0          	: eor ip, r1, sb
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 a0 21 e0          	: eor sl, r1, sb
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f0. Hit: 1. Lifespan: 2. Instruction: 00000599. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 21 e0          	: eor lr, r1, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 60 21 e0          	: eor r6, r1, sb
 >> Lifespan countdown: 2. (0x800008f4)
 >> Lifespan countdown: 1. (0x800008f8)
 >> Reverting instruction          :  09 e0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 0. Instruction: 00000606. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000090c
 >> Updated                     : 0x0000000080000910
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe0519060, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x1
 >> Updated instruction            :  2d 00 1b e5          	: ldr r0, [fp, #-0x2d]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff6094, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x2
 >> Updated instruction            :  2e 00 1b e5          	: ldr r0, [fp, #-0x2e]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff600094, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x4
 >> Updated instruction            :  28 00 1b e5          	: ldr r0, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011004c, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x8
 >> Updated instruction            :  24 00 1b e5          	: ldr r0, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x10
 >> Updated instruction            :  3c 00 1b e5          	: ldr r0, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xefcdac1d, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x20
 >> Updated instruction            :  0c 00 1b e5          	: ldr r0, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x40
 >> Updated instruction            :  6c 00 1b e5          	: ldr r0, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x80
 >> Updated instruction            :  ac 00 1b e5          	: ldr r0, [fp, #-0xac]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x100
 >> Updated instruction            :  2c 01 1b e5          	: ldr r0, [fp, #-0x12c]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x200
 >> Updated instruction            :  2c 02 1b e5          	: ldr r0, [fp, #-0x22c]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x400
 >> Updated instruction            :  2c 04 1b e5          	: ldr r0, [fp, #-0x42c]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x800
 >> Updated instruction            :  2c 08 1b e5          	: ldr r0, [fp, #-0x82c]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe0519060, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  2c 20 1b e5          	: ldr r2, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe0519060, value: 0x8010ff60!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  2c 40 1b e5          	: ldr r4, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe0519060, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000090c. Hit: 1. Lifespan: 2. Instruction: 00000606. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 1b e5          	: ldr r0, [fp, #-0x2c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  2c 80 1b e5          	: ldr r8, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000910)
 >> Lifespan countdown: 1. (0x80000914)
 >> Reverting instruction          :  2c 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe0519060, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 0. Instruction: 00000611. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000920
 >> Updated                     : 0x0000000080000924
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 80 29 e0          	: eor r8, sb, sp
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 80 29 e0          	: eor r8, sb, lr
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 80 29 e0          	: eor r8, sb, r8
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 80 29 e0          	: eor r8, sb, r4
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 80 29 e0          	: eor r8, sb, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 80 29 e0          	: eor r8, sb, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 80 29 e0          	: eor r8, sb, ip, asr #32
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 80 29 e0          	: eor r8, sb, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 81 29 e0          	: eor r8, sb, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 82 29 e0          	: eor r8, sb, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 84 29 e0          	: eor r8, sb, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 88 29 e0          	: eor r8, sb, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 90 29 e0          	: eor sb, sb, ip
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c a0 29 e0          	: eor sl, sb, ip
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c c0 29 e0          	: eor ip, sb, ip
 >> Lifespan countdown: 2. (0x80000924)
 >> Lifespan countdown: 1. (0x80000928)
 >> Reverting instruction          :  0c 80 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000920. Hit: 1. Lifespan: 2. Instruction: 00000611. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 29 e0          	: eor r8, sb, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 00 29 e0          	: eor r0, sb, ip
 >> Lifespan countdown: 2. (0x80000924)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x27aec270, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 0. Instruction: 00000618. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000093c
 >> Updated                     : 0x0000000080000940
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 e0 8e e0          	: add lr, lr, r0
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 e0 8e e0          	: add lr, lr, r3
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 e0 8e e0          	: add lr, lr, r5
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 e0 8e e0          	: add lr, lr, sb
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 e0 8e e0          	: add lr, lr, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 e0 8e e0          	: add lr, lr, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 e0 8e e0          	: add lr, lr, r1, asr #32
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 e0 8e e0          	: add lr, lr, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 e1 8e e0          	: add lr, lr, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 e2 8e e0          	: add lr, lr, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 e4 8e e0          	: add lr, lr, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 e8 8e e0          	: add lr, lr, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 f0 8e e0          	: add pc, lr, r1
 >!  Erm -  fetching from unmapped memory, address: 0x4e566be8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 618.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 c0 8e e0          	: add ip, lr, r1
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 a0 8e e0          	: add sl, lr, r1
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000093c. Hit: 1. Lifespan: 2. Instruction: 00000618. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 60 8e e0          	: add r6, lr, r1
 >> Lifespan countdown: 2. (0x80000940)
 >> Lifespan countdown: 1. (0x80000944)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 0. Instruction: 00000625. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000958
 >> Updated                     : 0x000000008000095c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x1
 >> Updated instruction            :  45 02 40 e3          	: movt r0, #0x245
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x2
 >> Updated instruction            :  46 02 40 e3          	: movt r0, #0x246
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x4
 >> Updated instruction            :  40 02 40 e3          	: movt r0, #0x240
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x8
 >> Updated instruction            :  4c 02 40 e3          	: movt r0, #0x24c
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x10
 >> Updated instruction            :  54 02 40 e3          	: movt r0, #0x254
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x20
 >> Updated instruction            :  64 02 40 e3          	: movt r0, #0x264
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x40
 >> Updated instruction            :  04 02 40 e3          	: movt r0, #0x204
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x80
 >> Updated instruction            :  c4 02 40 e3          	: movt r0, #0x2c4
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x100
 >> Updated instruction            :  44 03 40 e3          	: movt r0, #0x344
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x200
 >> Updated instruction            :  44 00 40 e3          	: movt r0, #0x44
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x400
 >> Updated instruction            :  44 06 40 e3          	: movt r0, #0x644
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x800
 >> Updated instruction            :  44 0a 40 e3          	: movt r0, #0xa44
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x1000
 >> Updated instruction            :  44 12 40 e3          	: movt r1, #0x244
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x2000
 >> Updated instruction            :  44 22 40 e3          	: movt r2, #0x244
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x4000
 >> Updated instruction            :  44 42 40 e3          	: movt r4, #0x244
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000958. Hit: 1. Lifespan: 2. Instruction: 00000625. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 02 40 e3          	: movt r0, #0x244
 >> Mask                           :  0x8000
 >> Updated instruction            :  44 82 40 e3          	: movt r8, #0x244
 >> Lifespan countdown: 2. (0x8000095c)
 >> Lifespan countdown: 1. (0x80000960)
 >> Reverting instruction          :  44 02 40 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 0. Instruction: 00000634. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000097c
 >> Updated                     : 0x0000000080000980
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x1
 >> Updated instruction            :  a0 a8 4d e3          	: movt sl, #0xd8a0
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x2
 >> Updated instruction            :  a3 a8 4d e3          	: movt sl, #0xd8a3
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x4
 >> Updated instruction            :  a5 a8 4d e3          	: movt sl, #0xd8a5
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x8
 >> Updated instruction            :  a9 a8 4d e3          	: movt sl, #0xd8a9
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x10
 >> Updated instruction            :  b1 a8 4d e3          	: movt sl, #0xd8b1
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x20
 >> Updated instruction            :  81 a8 4d e3          	: movt sl, #0xd881
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x40
 >> Updated instruction            :  e1 a8 4d e3          	: movt sl, #0xd8e1
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x80
 >> Updated instruction            :  21 a8 4d e3          	: movt sl, #0xd821
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x100
 >> Updated instruction            :  a1 a9 4d e3          	: movt sl, #0xd9a1
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x200
 >> Updated instruction            :  a1 aa 4d e3          	: movt sl, #0xdaa1
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x400
 >> Updated instruction            :  a1 ac 4d e3          	: movt sl, #0xdca1
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x800
 >> Updated instruction            :  a1 a0 4d e3          	: movt sl, #0xd0a1
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x1000
 >> Updated instruction            :  a1 b8 4d e3          	: movt fp, #0xd8a1
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000d8a1fec8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 646.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x2000
 >> Updated instruction            :  a1 88 4d e3          	: movt r8, #0xd8a1
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x4000
 >> Updated instruction            :  a1 e8 4d e3          	: movt lr, #0xd8a1
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000097c. Hit: 1. Lifespan: 2. Instruction: 00000634. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 a8 4d e3          	: movt sl, #0xd8a1
 >> Mask                           :  0x8000
 >> Updated instruction            :  a1 28 4d e3          	: movt r2, #0xd8a1
 >> Lifespan countdown: 2. (0x80000980)
 >> Lifespan countdown: 1. (0x80000984)
 >> Reverting instruction          :  a1 a8 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 0. Instruction: 00000642. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000099c
 >> Updated                     : 0x00000000800009a0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x1
 >> Updated instruction            :  c9 cb 0f e3          	: movw ip, #0xfbc9
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x2
 >> Updated instruction            :  ca cb 0f e3          	: movw ip, #0xfbca
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x4
 >> Updated instruction            :  cc cb 0f e3          	: movw ip, #0xfbcc
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x8
 >> Updated instruction            :  c0 cb 0f e3          	: movw ip, #0xfbc0
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x10
 >> Updated instruction            :  d8 cb 0f e3          	: movw ip, #0xfbd8
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x20
 >> Updated instruction            :  e8 cb 0f e3          	: movw ip, #0xfbe8
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x40
 >> Updated instruction            :  88 cb 0f e3          	: movw ip, #0xfb88
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x80
 >> Updated instruction            :  48 cb 0f e3          	: movw ip, #0xfb48
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x100
 >> Updated instruction            :  c8 ca 0f e3          	: movw ip, #0xfac8
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x200
 >> Updated instruction            :  c8 c9 0f e3          	: movw ip, #0xf9c8
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x400
 >> Updated instruction            :  c8 cf 0f e3          	: movw ip, #0xffc8
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x800
 >> Updated instruction            :  c8 c3 0f e3          	: movw ip, #0xf3c8
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x1000
 >> Updated instruction            :  c8 db 0f e3          	: movw sp, #0xfbc8
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x2000
 >> Updated instruction            :  c8 eb 0f e3          	: movw lr, #0xfbc8
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x4000
 >> Updated instruction            :  c8 8b 0f e3          	: movw r8, #0xfbc8
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000099c. Hit: 1. Lifespan: 2. Instruction: 00000642. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c8 cb 0f e3          	: movw ip, #0xfbc8
 >> Mask                           :  0x8000
 >> Updated instruction            :  c8 4b 0f e3          	: movw r4, #0xfbc8
 >> Lifespan countdown: 2. (0x800009a0)
 >> Lifespan countdown: 1. (0x800009a4)
 >> Reverting instruction          :  c8 cb 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 0. Instruction: 00000652. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009c4
 >> Updated                     : 0x00000000800009c8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 80 28 e0          	: eor r8, r8, pc
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 80 28 e0          	: eor r8, r8, ip
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 80 28 e0          	: eor r8, r8, sl
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 80 28 e0          	: eor r8, r8, r6
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 80 28 e0          	: eor r8, r8, lr, lsl r0
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 80 28 e0          	: eor r8, r8, lr, lsr #32
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 80 28 e0          	: eor r8, r8, lr, asr #32
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 80 28 e0          	: eor r8, r8, lr, lsl #1
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 81 28 e0          	: eor r8, r8, lr, lsl #2
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 82 28 e0          	: eor r8, r8, lr, lsl #4
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 84 28 e0          	: eor r8, r8, lr, lsl #8
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 88 28 e0          	: eor r8, r8, lr, lsl #16
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 90 28 e0          	: eor sb, r8, lr
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e a0 28 e0          	: eor sl, r8, lr
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e c0 28 e0          	: eor ip, r8, lr
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c4. Hit: 1. Lifespan: 2. Instruction: 00000652. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 28 e0          	: eor r8, r8, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 00 28 e0          	: eor r0, r8, lr
 >> Lifespan countdown: 2. (0x800009c8)
 >> Lifespan countdown: 1. (0x800009cc)
 >> Reverting instruction          :  0e 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 0. Instruction: 00000660. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009e4
 >> Updated                     : 0x00000000800009e8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x1
 >> Updated instruction            :  d7 e7 00 e3          	: movw lr, #0x7d7
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x2
 >> Updated instruction            :  d4 e7 00 e3          	: movw lr, #0x7d4
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x4
 >> Updated instruction            :  d2 e7 00 e3          	: movw lr, #0x7d2
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x8
 >> Updated instruction            :  de e7 00 e3          	: movw lr, #0x7de
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x10
 >> Updated instruction            :  c6 e7 00 e3          	: movw lr, #0x7c6
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x20
 >> Updated instruction            :  f6 e7 00 e3          	: movw lr, #0x7f6
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x40
 >> Updated instruction            :  96 e7 00 e3          	: movw lr, #0x796
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x80
 >> Updated instruction            :  56 e7 00 e3          	: movw lr, #0x756
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x100
 >> Updated instruction            :  d6 e6 00 e3          	: movw lr, #0x6d6
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x200
 >> Updated instruction            :  d6 e5 00 e3          	: movw lr, #0x5d6
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x400
 >> Updated instruction            :  d6 e3 00 e3          	: movw lr, #0x3d6
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x800
 >> Updated instruction            :  d6 ef 00 e3          	: movw lr, #0xfd6
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x1000
 >> Updated instruction            :  d6 f7 00 e3          	: movw pc, #0x7d6
 >!  Erm -  fetching from unmapped memory, address: 0x7d6, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 660.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x2000
 >> Updated instruction            :  d6 c7 00 e3          	: movw ip, #0x7d6
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x4000
 >> Updated instruction            :  d6 a7 00 e3          	: movw sl, #0x7d6
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e4. Hit: 1. Lifespan: 2. Instruction: 00000660. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 e7 00 e3          	: movw lr, #0x7d6
 >> Mask                           :  0x8000
 >> Updated instruction            :  d6 67 00 e3          	: movw r6, #0x7d6
 >> Lifespan countdown: 2. (0x800009e8)
 >> Lifespan countdown: 1. (0x800009ec)
 >> Reverting instruction          :  d6 e7 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 0. Instruction: 00000668. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a04
 >> Updated                     : 0x0000000080000a08
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x1
 >> Updated instruction            :  d4 a4 4f e3          	: movt sl, #0xf4d4
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x2
 >> Updated instruction            :  d7 a4 4f e3          	: movt sl, #0xf4d7
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x4
 >> Updated instruction            :  d1 a4 4f e3          	: movt sl, #0xf4d1
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x8
 >> Updated instruction            :  dd a4 4f e3          	: movt sl, #0xf4dd
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x10
 >> Updated instruction            :  c5 a4 4f e3          	: movt sl, #0xf4c5
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x20
 >> Updated instruction            :  f5 a4 4f e3          	: movt sl, #0xf4f5
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x40
 >> Updated instruction            :  95 a4 4f e3          	: movt sl, #0xf495
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x80
 >> Updated instruction            :  55 a4 4f e3          	: movt sl, #0xf455
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x100
 >> Updated instruction            :  d5 a5 4f e3          	: movt sl, #0xf5d5
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x200
 >> Updated instruction            :  d5 a6 4f e3          	: movt sl, #0xf6d5
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x400
 >> Updated instruction            :  d5 a0 4f e3          	: movt sl, #0xf0d5
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x800
 >> Updated instruction            :  d5 ac 4f e3          	: movt sl, #0xfcd5
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x1000
 >> Updated instruction            :  d5 b4 4f e3          	: movt fp, #0xf4d5
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f4d5feec, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 672.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x2000
 >> Updated instruction            :  d5 84 4f e3          	: movt r8, #0xf4d5
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x4000
 >> Updated instruction            :  d5 e4 4f e3          	: movt lr, #0xf4d5
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a04. Hit: 1. Lifespan: 2. Instruction: 00000668. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 a4 4f e3          	: movt sl, #0xf4d5
 >> Mask                           :  0x8000
 >> Updated instruction            :  d5 24 4f e3          	: movt r2, #0xf4d5
 >> Lifespan countdown: 2. (0x80000a08)
 >> Lifespan countdown: 1. (0x80000a0c)
 >> Reverting instruction          :  d5 a4 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 0. Instruction: 00000676. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a24
 >> Updated                     : 0x0000000080000a28
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x1
 >> Updated instruction            :  6d c6 81 e0          	: add ip, r1, sp, ror #12
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x2
 >> Updated instruction            :  6e c6 81 e0          	: add ip, r1, lr, ror #12
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x4
 >> Updated instruction            :  68 c6 81 e0          	: add ip, r1, r8, ror #12
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x8
 >> Updated instruction            :  64 c6 81 e0          	: add ip, r1, r4, ror #12
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x10
 >> Updated instruction            :  7c c6 81 e0          	: add ip, r1, ip, ror r6
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x20
 >> Updated instruction            :  4c c6 81 e0          	: add ip, r1, ip, asr #12
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x40
 >> Updated instruction            :  2c c6 81 e0          	: add ip, r1, ip, lsr #12
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x80
 >> Updated instruction            :  ec c6 81 e0          	: add ip, r1, ip, ror #13
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x100
 >> Updated instruction            :  6c c7 81 e0          	: add ip, r1, ip, ror #14
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x200
 >> Updated instruction            :  6c c4 81 e0          	: add ip, r1, ip, ror #8
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x400
 >> Updated instruction            :  6c c2 81 e0          	: add ip, r1, ip, ror #4
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x800
 >> Updated instruction            :  6c ce 81 e0          	: add ip, r1, ip, ror #28
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x1000
 >> Updated instruction            :  6c d6 81 e0          	: add sp, r1, ip, ror #12
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x2000
 >> Updated instruction            :  6c e6 81 e0          	: add lr, r1, ip, ror #12
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x4000
 >> Updated instruction            :  6c 86 81 e0          	: add r8, r1, ip, ror #12
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a24. Hit: 1. Lifespan: 2. Instruction: 00000676. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c6 81 e0          	: add ip, r1, ip, ror #12
 >> Mask                           :  0x8000
 >> Updated instruction            :  6c 46 81 e0          	: add r4, r1, ip, ror #12
 >> Lifespan countdown: 2. (0x80000a28)
 >> Lifespan countdown: 1. (0x80000a2c)
 >> Reverting instruction          :  6c c6 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 0. Instruction: 00000684. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a44
 >> Updated                     : 0x0000000080000a48
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x1
 >> Updated instruction            :  65 50 1b e5          	: ldr r5, [fp, #-0x65]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x2
 >> Updated instruction            :  66 50 1b e5          	: ldr r5, [fp, #-0x66]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x4
 >> Updated instruction            :  60 50 1b e5          	: ldr r5, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x8
 >> Updated instruction            :  6c 50 1b e5          	: ldr r5, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x10
 >> Updated instruction            :  74 50 1b e5          	: ldr r5, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x20
 >> Updated instruction            :  44 50 1b e5          	: ldr r5, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x40
 >> Updated instruction            :  24 50 1b e5          	: ldr r5, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x80
 >> Updated instruction            :  e4 50 1b e5          	: ldr r5, [fp, #-0xe4]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x100
 >> Updated instruction            :  64 51 1b e5          	: ldr r5, [fp, #-0x164]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x200
 >> Updated instruction            :  64 52 1b e5          	: ldr r5, [fp, #-0x264]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x400
 >> Updated instruction            :  64 54 1b e5          	: ldr r5, [fp, #-0x464]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x800
 >> Updated instruction            :  64 58 1b e5          	: ldr r5, [fp, #-0x864]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x1000
 >> Updated instruction            :  64 40 1b e5          	: ldr r4, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x2000
 >> Updated instruction            :  64 70 1b e5          	: ldr r7, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x4000
 >> Updated instruction            :  64 10 1b e5          	: ldr r1, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a44. Hit: 1. Lifespan: 2. Instruction: 00000684. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 1b e5          	: ldr r5, [fp, #-0x64]
 >> Mask                           :  0x8000
 >> Updated instruction            :  64 d0 1b e5          	: ldr sp, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000a48)
 >> Lifespan countdown: 1. (0x80000a4c)
 >> Reverting instruction          :  64 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 0. Instruction: 00000694. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a6c
 >> Updated                     : 0x0000000080000a70
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 10 81 e0          	: add r1, r1, r8
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b 10 81 e0          	: add r1, r1, fp
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d 10 81 e0          	: add r1, r1, sp
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 10 81 e0          	: add r1, r1, r1
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 10 81 e0          	: add r1, r1, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 10 81 e0          	: add r1, r1, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 10 81 e0          	: add r1, r1, sb, asr #32
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 10 81 e0          	: add r1, r1, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 11 81 e0          	: add r1, r1, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 12 81 e0          	: add r1, r1, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 14 81 e0          	: add r1, r1, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 18 81 e0          	: add r1, r1, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 00 81 e0          	: add r0, r1, sb
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 30 81 e0          	: add r3, r1, sb
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 50 81 e0          	: add r5, r1, sb
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a6c. Hit: 1. Lifespan: 2. Instruction: 00000694. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 90 81 e0          	: add sb, r1, sb
 >> Lifespan countdown: 2. (0x80000a70)
 >> Lifespan countdown: 1. (0x80000a74)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 0. Instruction: 00000701. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a88
 >> Updated                     : 0x0000000080000a8c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 50 85 e0          	: add r5, r5, fp
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 50 85 e0          	: add r5, r5, r8
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 50 85 e0          	: add r5, r5, lr
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 50 85 e0          	: add r5, r5, r2
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 50 85 e0          	: add r5, r5, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 50 85 e0          	: add r5, r5, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 50 85 e0          	: add r5, r5, sl, asr #32
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 50 85 e0          	: add r5, r5, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 51 85 e0          	: add r5, r5, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 52 85 e0          	: add r5, r5, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 54 85 e0          	: add r5, r5, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 58 85 e0          	: add r5, r5, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 40 85 e0          	: add r4, r5, sl
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 70 85 e0          	: add r7, r5, sl
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a 10 85 e0          	: add r1, r5, sl
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a88. Hit: 1. Lifespan: 2. Instruction: 00000701. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a d0 85 e0          	: add sp, r5, sl
 >> Lifespan countdown: 2. (0x80000a8c)
 >> Lifespan countdown: 1. (0x80000a90)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 0. Instruction: 00000709. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000aa8
 >> Updated                     : 0x0000000080000aac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 90 29 e0          	: eor sb, sb, sb
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 90 29 e0          	: eor sb, sb, sl
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 90 29 e0          	: eor sb, sb, ip
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 90 29 e0          	: eor sb, sb, r0
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 90 29 e0          	: eor sb, sb, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 90 29 e0          	: eor sb, sb, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 90 29 e0          	: eor sb, sb, r8, asr #32
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 90 29 e0          	: eor sb, sb, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 91 29 e0          	: eor sb, sb, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 92 29 e0          	: eor sb, sb, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 94 29 e0          	: eor sb, sb, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 98 29 e0          	: eor sb, sb, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 80 29 e0          	: eor r8, sb, r8
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 b0 29 e0          	: eor fp, sb, r8
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007d3ccf39, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 732.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 d0 29 e0          	: eor sp, sb, r8
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa8. Hit: 1. Lifespan: 2. Instruction: 00000709. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 90 29 e0          	: eor sb, sb, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 10 29 e0          	: eor r1, sb, r8
 >> Lifespan countdown: 2. (0x80000aac)
 >> Lifespan countdown: 1. (0x80000ab0)
 >> Reverting instruction          :  08 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 0. Instruction: 00000718. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000acc
 >> Updated                     : 0x0000000080000ad0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 90 86 e0          	: add sb, r6, r8
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b 90 86 e0          	: add sb, r6, fp
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d 90 86 e0          	: add sb, r6, sp
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 90 86 e0          	: add sb, r6, r1
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 90 86 e0          	: add sb, r6, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 90 86 e0          	: add sb, r6, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 90 86 e0          	: add sb, r6, sb, asr #32
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 90 86 e0          	: add sb, r6, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 91 86 e0          	: add sb, r6, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 92 86 e0          	: add sb, r6, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 94 86 e0          	: add sb, r6, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 98 86 e0          	: add sb, r6, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 80 86 e0          	: add r8, r6, sb
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 b0 86 e0          	: add fp, r6, sb
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008d2a4c32, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 732.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 d0 86 e0          	: add sp, r6, sb
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000acc. Hit: 1. Lifespan: 2. Instruction: 00000718. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 86 e0          	: add sb, r6, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 10 86 e0          	: add r1, r6, sb
 >> Lifespan countdown: 2. (0x80000ad0)
 >> Lifespan countdown: 1. (0x80000ad4)
 >> Reverting instruction          :  09 90 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 0. Instruction: 00000727. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000af0
 >> Updated                     : 0x0000000080000af4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 e0 0e e0          	: and lr, lr, r4
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 e0 0e e0          	: and lr, lr, r7
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 e0 0e e0          	: and lr, lr, r1
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d e0 0e e0          	: and lr, lr, sp
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 e0 0e e0          	: and lr, lr, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 e0 0e e0          	: and lr, lr, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 e0 0e e0          	: and lr, lr, r5, asr #32
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 e0 0e e0          	: and lr, lr, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 e1 0e e0          	: and lr, lr, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 e2 0e e0          	: and lr, lr, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 e4 0e e0          	: and lr, lr, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 e8 0e e0          	: and lr, lr, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 f0 0e e0          	: and pc, lr, r5
 >!  Erm -  fetching from unmapped memory, address: 0x59200200, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 727.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 c0 0e e0          	: and ip, lr, r5
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 a0 0e e0          	: and sl, lr, r5
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af0. Hit: 1. Lifespan: 2. Instruction: 00000727. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 0e e0          	: and lr, lr, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 60 0e e0          	: and r6, lr, r5
 >> Lifespan countdown: 2. (0x80000af4)
 >> Lifespan countdown: 1. (0x80000af8)
 >> Reverting instruction          :  05 e0 0e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 0. Instruction: 00000735. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b10
 >> Updated                     : 0x0000000080000b14
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f c0 21 e0          	: eor ip, r1, pc
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c c0 21 e0          	: eor ip, r1, ip
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a c0 21 e0          	: eor ip, r1, sl
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 c0 21 e0          	: eor ip, r1, r6
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e c0 21 e0          	: eor ip, r1, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e c0 21 e0          	: eor ip, r1, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e c0 21 e0          	: eor ip, r1, lr, asr #32
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e c0 21 e0          	: eor ip, r1, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e c1 21 e0          	: eor ip, r1, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e c2 21 e0          	: eor ip, r1, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e c4 21 e0          	: eor ip, r1, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e c8 21 e0          	: eor ip, r1, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e d0 21 e0          	: eor sp, r1, lr
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e e0 21 e0          	: eor lr, r1, lr
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 80 21 e0          	: eor r8, r1, lr
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b10. Hit: 1. Lifespan: 2. Instruction: 00000735. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 40 21 e0          	: eor r4, r1, lr
 >> Lifespan countdown: 2. (0x80000b14)
 >> Lifespan countdown: 1. (0x80000b18)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 0. Instruction: 00000743. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b30
 >> Updated                     : 0x0000000080000b34
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x1
 >> Updated instruction            :  4d a0 1b e5          	: ldr sl, [fp, #-0x4d]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x2
 >> Updated instruction            :  4e a0 1b e5          	: ldr sl, [fp, #-0x4e]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x4
 >> Updated instruction            :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x8
 >> Updated instruction            :  44 a0 1b e5          	: ldr sl, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x10
 >> Updated instruction            :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x20
 >> Updated instruction            :  6c a0 1b e5          	: ldr sl, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x40
 >> Updated instruction            :  0c a0 1b e5          	: ldr sl, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x80
 >> Updated instruction            :  cc a0 1b e5          	: ldr sl, [fp, #-0xcc]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x100
 >> Updated instruction            :  4c a1 1b e5          	: ldr sl, [fp, #-0x14c]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x200
 >> Updated instruction            :  4c a2 1b e5          	: ldr sl, [fp, #-0x24c]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x400
 >> Updated instruction            :  4c a4 1b e5          	: ldr sl, [fp, #-0x44c]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x800
 >> Updated instruction            :  4c a8 1b e5          	: ldr sl, [fp, #-0x84c]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  4c b0 1b e5          	: ldr fp, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000aa499863, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 751.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  4c e0 1b e5          	: ldr lr, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b30. Hit: 1. Lifespan: 2. Instruction: 00000743. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  4c 20 1b e5          	: ldr r2, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000b34)
 >> Lifespan countdown: 1. (0x80000b38)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 0. Instruction: 00000751. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b50
 >> Updated                     : 0x0000000080000b54
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x1
 >> Updated instruction            :  39 10 1b e5          	: ldr r1, [fp, #-0x39]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x2
 >> Updated instruction            :  3a 10 1b e5          	: ldr r1, [fp, #-0x3a]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x4
 >> Updated instruction            :  3c 10 1b e5          	: ldr r1, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x8
 >> Updated instruction            :  30 10 1b e5          	: ldr r1, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x10
 >> Updated instruction            :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x20
 >> Updated instruction            :  18 10 1b e5          	: ldr r1, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x40
 >> Updated instruction            :  78 10 1b e5          	: ldr r1, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x80
 >> Updated instruction            :  b8 10 1b e5          	: ldr r1, [fp, #-0xb8]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x100
 >> Updated instruction            :  38 11 1b e5          	: ldr r1, [fp, #-0x138]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x200
 >> Updated instruction            :  38 12 1b e5          	: ldr r1, [fp, #-0x238]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x400
 >> Updated instruction            :  38 14 1b e5          	: ldr r1, [fp, #-0x438]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x800
 >> Updated instruction            :  38 18 1b e5          	: ldr r1, [fp, #-0x838]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x1000
 >> Updated instruction            :  38 00 1b e5          	: ldr r0, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x2000
 >> Updated instruction            :  38 30 1b e5          	: ldr r3, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x4000
 >> Updated instruction            :  38 50 1b e5          	: ldr r5, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b50. Hit: 1. Lifespan: 2. Instruction: 00000751. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x8000
 >> Updated instruction            :  38 90 1b e5          	: ldr sb, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000b54)
 >> Lifespan countdown: 1. (0x80000b58)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 0. Instruction: 00000758. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b6c
 >> Updated                     : 0x0000000080000b70
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 50 8e e0          	: add r5, lr, r4
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 50 8e e0          	: add r5, lr, r7
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 50 8e e0          	: add r5, lr, r1
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 50 8e e0          	: add r5, lr, sp
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 50 8e e0          	: add r5, lr, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 50 8e e0          	: add r5, lr, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 50 8e e0          	: add r5, lr, r5, asr #32
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 50 8e e0          	: add r5, lr, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 51 8e e0          	: add r5, lr, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 52 8e e0          	: add r5, lr, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 54 8e e0          	: add r5, lr, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 58 8e e0          	: add r5, lr, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 40 8e e0          	: add r4, lr, r5
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 70 8e e0          	: add r7, lr, r5
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 10 8e e0          	: add r1, lr, r5
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b6c. Hit: 1. Lifespan: 2. Instruction: 00000758. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 8e e0          	: add r5, lr, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 d0 8e e0          	: add sp, lr, r5
 >> Lifespan countdown: 2. (0x80000b70)
 >> Lifespan countdown: 1. (0x80000b74)
 >> Reverting instruction          :  05 50 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 0. Instruction: 00000765. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b88
 >> Updated                     : 0x0000000080000b8c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x1
 >> Updated instruction            :  55 a0 1b e5          	: ldr sl, [fp, #-0x55]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x2
 >> Updated instruction            :  56 a0 1b e5          	: ldr sl, [fp, #-0x56]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x4
 >> Updated instruction            :  50 a0 1b e5          	: ldr sl, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x8
 >> Updated instruction            :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x10
 >> Updated instruction            :  44 a0 1b e5          	: ldr sl, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x20
 >> Updated instruction            :  74 a0 1b e5          	: ldr sl, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x40
 >> Updated instruction            :  14 a0 1b e5          	: ldr sl, [fp, #-0x14]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x80
 >> Updated instruction            :  d4 a0 1b e5          	: ldr sl, [fp, #-0xd4]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x100
 >> Updated instruction            :  54 a1 1b e5          	: ldr sl, [fp, #-0x154]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x200
 >> Updated instruction            :  54 a2 1b e5          	: ldr sl, [fp, #-0x254]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x400
 >> Updated instruction            :  54 a4 1b e5          	: ldr sl, [fp, #-0x454]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x800
 >> Updated instruction            :  54 a8 1b e5          	: ldr sl, [fp, #-0x854]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x1000
 >> Updated instruction            :  54 b0 1b e5          	: ldr fp, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000020, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 779.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x2000
 >> Updated instruction            :  54 80 1b e5          	: ldr r8, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x4000
 >> Updated instruction            :  54 e0 1b e5          	: ldr lr, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b88. Hit: 1. Lifespan: 2. Instruction: 00000765. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 a0 1b e5          	: ldr sl, [fp, #-0x54]
 >> Mask                           :  0x8000
 >> Updated instruction            :  54 20 1b e5          	: ldr r2, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000b8c)
 >> Lifespan countdown: 1. (0x80000b90)
 >> Reverting instruction          :  54 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 0. Instruction: 00000773. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ba8
 >> Updated                     : 0x0000000080000bac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 10 87 e0          	: add r1, r7, r0
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 10 87 e0          	: add r1, r7, r3
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 10 87 e0          	: add r1, r7, r5
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 10 87 e0          	: add r1, r7, sb
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 10 87 e0          	: add r1, r7, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 10 87 e0          	: add r1, r7, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 10 87 e0          	: add r1, r7, r1, asr #32
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 10 87 e0          	: add r1, r7, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 11 87 e0          	: add r1, r7, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 12 87 e0          	: add r1, r7, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 14 87 e0          	: add r1, r7, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 18 87 e0          	: add r1, r7, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 00 87 e0          	: add r0, r7, r1
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 30 87 e0          	: add r3, r7, r1
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 50 87 e0          	: add r5, r7, r1
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ba8. Hit: 1. Lifespan: 2. Instruction: 00000773. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 87 e0          	: add r1, r7, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 90 87 e0          	: add sb, r7, r1
 >> Lifespan countdown: 2. (0x80000bac)
 >> Lifespan countdown: 1. (0x80000bb0)
 >> Reverting instruction          :  01 10 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 0. Instruction: 00000780. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bc4
 >> Updated                     : 0x0000000080000bc8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x1
 >> Updated instruction            :  6b a8 8c e0          	: add sl, ip, fp, ror #16
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x2
 >> Updated instruction            :  68 a8 8c e0          	: add sl, ip, r8, ror #16
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x4
 >> Updated instruction            :  6e a8 8c e0          	: add sl, ip, lr, ror #16
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x8
 >> Updated instruction            :  62 a8 8c e0          	: add sl, ip, r2, ror #16
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x10
 >> Updated instruction            :  7a a8 8c e0          	: add sl, ip, sl, ror r8
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x20
 >> Updated instruction            :  4a a8 8c e0          	: add sl, ip, sl, asr #16
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x40
 >> Updated instruction            :  2a a8 8c e0          	: add sl, ip, sl, lsr #16
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x80
 >> Updated instruction            :  ea a8 8c e0          	: add sl, ip, sl, ror #17
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x100
 >> Updated instruction            :  6a a9 8c e0          	: add sl, ip, sl, ror #18
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x200
 >> Updated instruction            :  6a aa 8c e0          	: add sl, ip, sl, ror #20
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x400
 >> Updated instruction            :  6a ac 8c e0          	: add sl, ip, sl, ror #24
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x800
 >> Updated instruction            :  6a a0 8c e0          	: add sl, ip, sl, rrx
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x1000
 >> Updated instruction            :  6a b8 8c e0          	: add fp, ip, sl, ror #16
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007f1902ef, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 795.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x2000
 >> Updated instruction            :  6a 88 8c e0          	: add r8, ip, sl, ror #16
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x4000
 >> Updated instruction            :  6a e8 8c e0          	: add lr, ip, sl, ror #16
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bc4. Hit: 1. Lifespan: 2. Instruction: 00000780. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a a8 8c e0          	: add sl, ip, sl, ror #16
 >> Mask                           :  0x8000
 >> Updated instruction            :  6a 28 8c e0          	: add r2, ip, sl, ror #16
 >> Lifespan countdown: 2. (0x80000bc8)
 >> Lifespan countdown: 1. (0x80000bcc)
 >> Reverting instruction          :  6a a8 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 0. Instruction: 00000788. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000be4
 >> Updated                     : 0x0000000080000be8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x1
 >> Updated instruction            :  e4 54 8a e0          	: add r5, sl, r4, ror #9
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x2
 >> Updated instruction            :  e7 54 8a e0          	: add r5, sl, r7, ror #9
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x4
 >> Updated instruction            :  e1 54 8a e0          	: add r5, sl, r1, ror #9
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x8
 >> Updated instruction            :  ed 54 8a e0          	: add r5, sl, sp, ror #9
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x10
 >> Updated instruction            :  f5 54 8a e0          	: strd r5, r6, [sl], r5
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 788.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x20
 >> Updated instruction            :  c5 54 8a e0          	: add r5, sl, r5, asr #9
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x40
 >> Updated instruction            :  a5 54 8a e0          	: add r5, sl, r5, lsr #9
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x80
 >> Updated instruction            :  65 54 8a e0          	: add r5, sl, r5, ror #8
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x100
 >> Updated instruction            :  e5 55 8a e0          	: add r5, sl, r5, ror #11
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x200
 >> Updated instruction            :  e5 56 8a e0          	: add r5, sl, r5, ror #13
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x400
 >> Updated instruction            :  e5 50 8a e0          	: add r5, sl, r5, ror #1
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x800
 >> Updated instruction            :  e5 5c 8a e0          	: add r5, sl, r5, ror #25
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x1000
 >> Updated instruction            :  e5 44 8a e0          	: add r4, sl, r5, ror #9
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x2000
 >> Updated instruction            :  e5 74 8a e0          	: add r7, sl, r5, ror #9
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x4000
 >> Updated instruction            :  e5 14 8a e0          	: add r1, sl, r5, ror #9
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be4. Hit: 1. Lifespan: 2. Instruction: 00000788. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 54 8a e0          	: add r5, sl, r5, ror #9
 >> Mask                           :  0x8000
 >> Updated instruction            :  e5 d4 8a e0          	: add sp, sl, r5, ror #9
 >> Lifespan countdown: 2. (0x80000be8)
 >> Lifespan countdown: 1. (0x80000bec)
 >> Reverting instruction          :  e5 54 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 0. Instruction: 00000797. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c08
 >> Updated                     : 0x0000000080000c0c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x1
 >> Updated instruction            :  61 0e 85 e0          	: add r0, r5, r1, ror #28
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x2
 >> Updated instruction            :  62 0e 85 e0          	: add r0, r5, r2, ror #28
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x4
 >> Updated instruction            :  64 0e 85 e0          	: add r0, r5, r4, ror #28
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x8
 >> Updated instruction            :  68 0e 85 e0          	: add r0, r5, r8, ror #28
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x10
 >> Updated instruction            :  70 0e 85 e0          	: add r0, r5, r0, ror lr
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x20
 >> Updated instruction            :  40 0e 85 e0          	: add r0, r5, r0, asr #28
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x40
 >> Updated instruction            :  20 0e 85 e0          	: add r0, r5, r0, lsr #28
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x80
 >> Updated instruction            :  e0 0e 85 e0          	: add r0, r5, r0, ror #29
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x100
 >> Updated instruction            :  60 0f 85 e0          	: add r0, r5, r0, ror #30
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x200
 >> Updated instruction            :  60 0c 85 e0          	: add r0, r5, r0, ror #24
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x400
 >> Updated instruction            :  60 0a 85 e0          	: add r0, r5, r0, ror #20
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x800
 >> Updated instruction            :  60 06 85 e0          	: add r0, r5, r0, ror #12
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x1000
 >> Updated instruction            :  60 1e 85 e0          	: add r1, r5, r0, ror #28
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x2000
 >> Updated instruction            :  60 2e 85 e0          	: add r2, r5, r0, ror #28
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x4000
 >> Updated instruction            :  60 4e 85 e0          	: add r4, r5, r0, ror #28
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c08. Hit: 1. Lifespan: 2. Instruction: 00000797. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0e 85 e0          	: add r0, r5, r0, ror #28
 >> Mask                           :  0x8000
 >> Updated instruction            :  60 8e 85 e0          	: add r8, r5, r0, ror #28
 >> Lifespan countdown: 2. (0x80000c0c)
 >> Lifespan countdown: 1. (0x80000c10)
 >> Reverting instruction          :  60 0e 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 0. Instruction: 00000807. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c30
 >> Updated                     : 0x0000000080000c34
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 00 20 e0          	: eor r0, r0, fp
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 00 20 e0          	: eor r0, r0, r8
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 00 20 e0          	: eor r0, r0, lr
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 00 20 e0          	: eor r0, r0, r2
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 00 20 e0          	: eor r0, r0, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 00 20 e0          	: eor r0, r0, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 00 20 e0          	: eor r0, r0, sl, asr #32
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 00 20 e0          	: eor r0, r0, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 01 20 e0          	: eor r0, r0, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 02 20 e0          	: eor r0, r0, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 04 20 e0          	: eor r0, r0, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 08 20 e0          	: eor r0, r0, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 10 20 e0          	: eor r1, r0, sl
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 20 20 e0          	: eor r2, r0, sl
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a 40 20 e0          	: eor r4, r0, sl
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c30. Hit: 1. Lifespan: 2. Instruction: 00000807. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 20 e0          	: eor r0, r0, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 80 20 e0          	: eor r8, r0, sl
 >> Lifespan countdown: 2. (0x80000c34)
 >> Lifespan countdown: 1. (0x80000c38)
 >> Reverting instruction          :  0a 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 0. Instruction: 00000814. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c4c
 >> Updated                     : 0x0000000080000c50
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 50 83 e0          	: add r5, r3, r4
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 50 83 e0          	: add r5, r3, r7
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 50 83 e0          	: add r5, r3, r1
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 50 83 e0          	: add r5, r3, sp
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 50 83 e0          	: add r5, r3, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 50 83 e0          	: add r5, r3, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 50 83 e0          	: add r5, r3, r5, asr #32
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 50 83 e0          	: add r5, r3, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 51 83 e0          	: add r5, r3, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 52 83 e0          	: add r5, r3, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 54 83 e0          	: add r5, r3, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 58 83 e0          	: add r5, r3, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 40 83 e0          	: add r4, r3, r5
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 70 83 e0          	: add r7, r3, r5
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 10 83 e0          	: add r1, r3, r5
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c4c. Hit: 1. Lifespan: 2. Instruction: 00000814. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 83 e0          	: add r5, r3, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 d0 83 e0          	: add sp, r3, r5
 >> Lifespan countdown: 2. (0x80000c50)
 >> Lifespan countdown: 1. (0x80000c54)
 >> Reverting instruction          :  05 50 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 0. Instruction: 00000822. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c6c
 >> Updated                     : 0x0000000080000c70
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 10 89 e0          	: add r1, sb, r0
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 10 89 e0          	: add r1, sb, r3
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 10 89 e0          	: add r1, sb, r5
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 10 89 e0          	: add r1, sb, sb
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 10 89 e0          	: add r1, sb, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 10 89 e0          	: add r1, sb, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 10 89 e0          	: add r1, sb, r1, asr #32
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 10 89 e0          	: add r1, sb, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 11 89 e0          	: add r1, sb, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 12 89 e0          	: add r1, sb, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 14 89 e0          	: add r1, sb, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 18 89 e0          	: add r1, sb, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 00 89 e0          	: add r0, sb, r1
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 30 89 e0          	: add r3, sb, r1
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 50 89 e0          	: add r5, sb, r1
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c6c. Hit: 1. Lifespan: 2. Instruction: 00000822. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 89 e0          	: add r1, sb, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 90 89 e0          	: add sb, sb, r1
 >> Lifespan countdown: 2. (0x80000c70)
 >> Lifespan countdown: 1. (0x80000c74)
 >> Reverting instruction          :  01 10 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 0. Instruction: 00000830. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c8c
 >> Updated                     : 0x0000000080000c90
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x1
 >> Updated instruction            :  68 9e 80 e0          	: add sb, r0, r8, ror #28
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x2
 >> Updated instruction            :  6b 9e 80 e0          	: add sb, r0, fp, ror #28
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x4
 >> Updated instruction            :  6d 9e 80 e0          	: add sb, r0, sp, ror #28
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x8
 >> Updated instruction            :  61 9e 80 e0          	: add sb, r0, r1, ror #28
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x10
 >> Updated instruction            :  79 9e 80 e0          	: add sb, r0, sb, ror lr
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x20
 >> Updated instruction            :  49 9e 80 e0          	: add sb, r0, sb, asr #28
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x40
 >> Updated instruction            :  29 9e 80 e0          	: add sb, r0, sb, lsr #28
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x80
 >> Updated instruction            :  e9 9e 80 e0          	: add sb, r0, sb, ror #29
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x100
 >> Updated instruction            :  69 9f 80 e0          	: add sb, r0, sb, ror #30
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x200
 >> Updated instruction            :  69 9c 80 e0          	: add sb, r0, sb, ror #24
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x400
 >> Updated instruction            :  69 9a 80 e0          	: add sb, r0, sb, ror #20
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x800
 >> Updated instruction            :  69 96 80 e0          	: add sb, r0, sb, ror #12
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x1000
 >> Updated instruction            :  69 8e 80 e0          	: add r8, r0, sb, ror #28
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x2000
 >> Updated instruction            :  69 be 80 e0          	: add fp, r0, sb, ror #28
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000dd80dc1c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 845.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x4000
 >> Updated instruction            :  69 de 80 e0          	: add sp, r0, sb, ror #28
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c8c. Hit: 1. Lifespan: 2. Instruction: 00000830. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 9e 80 e0          	: add sb, r0, sb, ror #28
 >> Mask                           :  0x8000
 >> Updated instruction            :  69 1e 80 e0          	: add r1, r0, sb, ror #28
 >> Lifespan countdown: 2. (0x80000c90)
 >> Lifespan countdown: 1. (0x80000c94)
 >> Reverting instruction          :  69 9e 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 0. Instruction: 00000835. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ca0
 >> Updated                     : 0x0000000080000ca4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x1
 >> Updated instruction            :  da c6 4e e3          	: movt ip, #0xe6da
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x2
 >> Updated instruction            :  d9 c6 4e e3          	: movt ip, #0xe6d9
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x4
 >> Updated instruction            :  df c6 4e e3          	: movt ip, #0xe6df
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x8
 >> Updated instruction            :  d3 c6 4e e3          	: movt ip, #0xe6d3
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x10
 >> Updated instruction            :  cb c6 4e e3          	: movt ip, #0xe6cb
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x20
 >> Updated instruction            :  fb c6 4e e3          	: movt ip, #0xe6fb
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x40
 >> Updated instruction            :  9b c6 4e e3          	: movt ip, #0xe69b
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x80
 >> Updated instruction            :  5b c6 4e e3          	: movt ip, #0xe65b
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x100
 >> Updated instruction            :  db c7 4e e3          	: movt ip, #0xe7db
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x200
 >> Updated instruction            :  db c4 4e e3          	: movt ip, #0xe4db
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x400
 >> Updated instruction            :  db c2 4e e3          	: movt ip, #0xe2db
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x800
 >> Updated instruction            :  db ce 4e e3          	: movt ip, #0xeedb
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x1000
 >> Updated instruction            :  db d6 4e e3          	: movt sp, #0xe6db
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x2000
 >> Updated instruction            :  db e6 4e e3          	: movt lr, #0xe6db
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x4000
 >> Updated instruction            :  db 86 4e e3          	: movt r8, #0xe6db
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca0. Hit: 1. Lifespan: 2. Instruction: 00000835. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db c6 4e e3          	: movt ip, #0xe6db
 >> Mask                           :  0x8000
 >> Updated instruction            :  db 46 4e e3          	: movt r4, #0xe6db
 >> Lifespan countdown: 2. (0x80000ca4)
 >> Lifespan countdown: 1. (0x80000ca8)
 >> Reverting instruction          :  db c6 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 0. Instruction: 00000845. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cc8
 >> Updated                     : 0x0000000080000ccc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x1
 >> Updated instruction            :  51 50 1b e5          	: ldr r5, [fp, #-0x51]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x2
 >> Updated instruction            :  52 50 1b e5          	: ldr r5, [fp, #-0x52]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x4
 >> Updated instruction            :  54 50 1b e5          	: ldr r5, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x8
 >> Updated instruction            :  58 50 1b e5          	: ldr r5, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x10
 >> Updated instruction            :  40 50 1b e5          	: ldr r5, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x20
 >> Updated instruction            :  70 50 1b e5          	: ldr r5, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x40
 >> Updated instruction            :  10 50 1b e5          	: ldr r5, [fp, #-0x10]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x80
 >> Updated instruction            :  d0 50 1b e5          	: ldr r5, [fp, #-0xd0]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x100
 >> Updated instruction            :  50 51 1b e5          	: ldr r5, [fp, #-0x150]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x200
 >> Updated instruction            :  50 52 1b e5          	: ldr r5, [fp, #-0x250]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x400
 >> Updated instruction            :  50 54 1b e5          	: ldr r5, [fp, #-0x450]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x800
 >> Updated instruction            :  50 58 1b e5          	: ldr r5, [fp, #-0x850]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x1000
 >> Updated instruction            :  50 40 1b e5          	: ldr r4, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x2000
 >> Updated instruction            :  50 70 1b e5          	: ldr r7, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x4000
 >> Updated instruction            :  50 10 1b e5          	: ldr r1, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc8. Hit: 1. Lifespan: 2. Instruction: 00000845. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 50 1b e5          	: ldr r5, [fp, #-0x50]
 >> Mask                           :  0x8000
 >> Updated instruction            :  50 d0 1b e5          	: ldr sp, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000ccc)
 >> Lifespan countdown: 1. (0x80000cd0)
 >> Reverting instruction          :  50 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 0. Instruction: 00000855. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cf0
 >> Updated                     : 0x0000000080000cf4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 c0 2c e0          	: eor ip, ip, r8
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b c0 2c e0          	: eor ip, ip, fp
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d c0 2c e0          	: eor ip, ip, sp
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 c0 2c e0          	: eor ip, ip, r1
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 c0 2c e0          	: eor ip, ip, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 c0 2c e0          	: eor ip, ip, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 c0 2c e0          	: eor ip, ip, sb, asr #32
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 c0 2c e0          	: eor ip, ip, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 c1 2c e0          	: eor ip, ip, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 c2 2c e0          	: eor ip, ip, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 c4 2c e0          	: eor ip, ip, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 c8 2c e0          	: eor ip, ip, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 d0 2c e0          	: eor sp, ip, sb
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 e0 2c e0          	: eor lr, ip, sb
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 80 2c e0          	: eor r8, ip, sb
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf0. Hit: 1. Lifespan: 2. Instruction: 00000855. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 40 2c e0          	: eor r4, ip, sb
 >> Lifespan countdown: 2. (0x80000cf4)
 >> Lifespan countdown: 1. (0x80000cf8)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 0. Instruction: 00000864. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d14
 >> Updated                     : 0x0000000080000d18
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 c0 2c e0          	: eor ip, ip, r4
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 c0 2c e0          	: eor ip, ip, r7
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 c0 2c e0          	: eor ip, ip, r1
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d c0 2c e0          	: eor ip, ip, sp
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 c0 2c e0          	: eor ip, ip, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 c0 2c e0          	: eor ip, ip, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 c0 2c e0          	: eor ip, ip, r5, asr #32
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 c0 2c e0          	: eor ip, ip, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 c1 2c e0          	: eor ip, ip, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 c2 2c e0          	: eor ip, ip, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 c4 2c e0          	: eor ip, ip, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 c8 2c e0          	: eor ip, ip, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 d0 2c e0          	: eor sp, ip, r5
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 e0 2c e0          	: eor lr, ip, r5
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 80 2c e0          	: eor r8, ip, r5
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d14. Hit: 1. Lifespan: 2. Instruction: 00000864. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 2c e0          	: eor ip, ip, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 40 2c e0          	: eor r4, ip, r5
 >> Lifespan countdown: 2. (0x80000d18)
 >> Lifespan countdown: 1. (0x80000d1c)
 >> Reverting instruction          :  05 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 0. Instruction: 00000868. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d24
 >> Updated                     : 0x0000000080000d28
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x1
 >> Updated instruction            :  2b 83 44 e3          	: movt r8, #0x432b
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x2
 >> Updated instruction            :  28 83 44 e3          	: movt r8, #0x4328
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x4
 >> Updated instruction            :  2e 83 44 e3          	: movt r8, #0x432e
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x8
 >> Updated instruction            :  22 83 44 e3          	: movt r8, #0x4322
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x10
 >> Updated instruction            :  3a 83 44 e3          	: movt r8, #0x433a
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x20
 >> Updated instruction            :  0a 83 44 e3          	: movt r8, #0x430a
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x40
 >> Updated instruction            :  6a 83 44 e3          	: movt r8, #0x436a
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x80
 >> Updated instruction            :  aa 83 44 e3          	: movt r8, #0x43aa
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x100
 >> Updated instruction            :  2a 82 44 e3          	: movt r8, #0x422a
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x200
 >> Updated instruction            :  2a 81 44 e3          	: movt r8, #0x412a
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x400
 >> Updated instruction            :  2a 87 44 e3          	: movt r8, #0x472a
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x800
 >> Updated instruction            :  2a 8b 44 e3          	: movt r8, #0x4b2a
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x1000
 >> Updated instruction            :  2a 93 44 e3          	: movt sb, #0x432a
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x2000
 >> Updated instruction            :  2a a3 44 e3          	: movt sl, #0x432a
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x4000
 >> Updated instruction            :  2a c3 44 e3          	: movt ip, #0x432a
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d24. Hit: 1. Lifespan: 2. Instruction: 00000868. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 83 44 e3          	: movt r8, #0x432a
 >> Mask                           :  0x8000
 >> Updated instruction            :  2a 03 44 e3          	: movt r0, #0x432a
 >> Lifespan countdown: 2. (0x80000d28)
 >> Lifespan countdown: 1. (0x80000d2c)
 >> Reverting instruction          :  2a 83 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 0. Instruction: 00000878. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d4c
 >> Updated                     : 0x0000000080000d50
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b a0 87 e0          	: add sl, r7, fp
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 a0 87 e0          	: add sl, r7, r8
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e a0 87 e0          	: add sl, r7, lr
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 a0 87 e0          	: add sl, r7, r2
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a a0 87 e0          	: add sl, r7, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a a0 87 e0          	: add sl, r7, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a a0 87 e0          	: add sl, r7, sl, asr #32
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a a0 87 e0          	: add sl, r7, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a a1 87 e0          	: add sl, r7, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a a2 87 e0          	: add sl, r7, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a a4 87 e0          	: add sl, r7, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a a8 87 e0          	: add sl, r7, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a b0 87 e0          	: add fp, r7, sl
 >> Lifespan countdown: 2. (0x80000d50)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ab9423cf, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 879.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 80 87 e0          	: add r8, r7, sl
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a e0 87 e0          	: add lr, r7, sl
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d4c. Hit: 1. Lifespan: 2. Instruction: 00000878. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 87 e0          	: add sl, r7, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 20 87 e0          	: add r2, r7, sl
 >> Lifespan countdown: 2. (0x80000d50)
 >> Lifespan countdown: 1. (0x80000d54)
 >> Reverting instruction          :  0a a0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 0. Instruction: 00000885. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d68
 >> Updated                     : 0x0000000080000d6c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 40 e0 e1          	: mvn r4, sp
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 40 e0 e1          	: mvn r4, lr
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 40 e0 e1          	: mvn r4, r8
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 40 e0 e1          	: mvn r4, r4
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 40 e0 e1          	: mvn r4, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 40 e0 e1          	: mvn r4, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 40 e0 e1          	: mvn r4, ip, asr #32
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 40 e0 e1          	: mvn r4, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 41 e0 e1          	: mvn r4, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 42 e0 e1          	: mvn r4, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 44 e0 e1          	: mvn r4, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 48 e0 e1          	: mvn r4, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 50 e0 e1          	: mvn r5, ip
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 60 e0 e1          	: mvn r6, ip
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 00 e0 e1          	: mvn r0, ip
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d68. Hit: 1. Lifespan: 2. Instruction: 00000885. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 40 e0 e1          	: mvn r4, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c c0 e0 e1          	: mvn ip, ip
 >> Lifespan countdown: 2. (0x80000d6c)
 >> Lifespan countdown: 1. (0x80000d70)
 >> Reverting instruction          :  0c 40 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 0. Instruction: 00000891. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d80
 >> Updated                     : 0x0000000080000d84
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x1
 >> Updated instruction            :  5a 55 46 e3          	: movt r5, #0x655a
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x2
 >> Updated instruction            :  59 55 46 e3          	: movt r5, #0x6559
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x4
 >> Updated instruction            :  5f 55 46 e3          	: movt r5, #0x655f
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x8
 >> Updated instruction            :  53 55 46 e3          	: movt r5, #0x6553
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x10
 >> Updated instruction            :  4b 55 46 e3          	: movt r5, #0x654b
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x20
 >> Updated instruction            :  7b 55 46 e3          	: movt r5, #0x657b
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x40
 >> Updated instruction            :  1b 55 46 e3          	: movt r5, #0x651b
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x80
 >> Updated instruction            :  db 55 46 e3          	: movt r5, #0x65db
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x100
 >> Updated instruction            :  5b 54 46 e3          	: movt r5, #0x645b
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x200
 >> Updated instruction            :  5b 57 46 e3          	: movt r5, #0x675b
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x400
 >> Updated instruction            :  5b 51 46 e3          	: movt r5, #0x615b
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x800
 >> Updated instruction            :  5b 5d 46 e3          	: movt r5, #0x6d5b
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x1000
 >> Updated instruction            :  5b 45 46 e3          	: movt r4, #0x655b
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x2000
 >> Updated instruction            :  5b 75 46 e3          	: movt r7, #0x655b
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x4000
 >> Updated instruction            :  5b 15 46 e3          	: movt r1, #0x655b
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d80. Hit: 1. Lifespan: 2. Instruction: 00000891. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5b 55 46 e3          	: movt r5, #0x655b
 >> Mask                           :  0x8000
 >> Updated instruction            :  5b d5 46 e3          	: movt sp, #0x655b
 >> Lifespan countdown: 2. (0x80000d84)
 >> Lifespan countdown: 1. (0x80000d88)
 >> Reverting instruction          :  5b 55 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 0. Instruction: 00000901. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000da8
 >> Updated                     : 0x0000000080000dac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 50 85 e0          	: add r5, r5, r1
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 50 85 e0          	: add r5, r5, r2
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 50 85 e0          	: add r5, r5, r4
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 50 85 e0          	: add r5, r5, r8
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 50 85 e0          	: add r5, r5, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 50 85 e0          	: add r5, r5, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 50 85 e0          	: add r5, r5, r0, asr #32
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 50 85 e0          	: add r5, r5, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 51 85 e0          	: add r5, r5, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 52 85 e0          	: add r5, r5, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 54 85 e0          	: add r5, r5, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 58 85 e0          	: add r5, r5, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 40 85 e0          	: add r4, r5, r0
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 70 85 e0          	: add r7, r5, r0
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 10 85 e0          	: add r1, r5, r0
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da8. Hit: 1. Lifespan: 2. Instruction: 00000901. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 85 e0          	: add r5, r5, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 d0 85 e0          	: add sp, r5, r0
 >> Lifespan countdown: 2. (0x80000dac)
 >> Lifespan countdown: 1. (0x80000db0)
 >> Reverting instruction          :  00 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 0. Instruction: 00000907. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000dc0
 >> Updated                     : 0x0000000080000dc4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x1
 >> Updated instruction            :  ee 1f 4f e3          	: movt r1, #0xffee
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x2
 >> Updated instruction            :  ed 1f 4f e3          	: movt r1, #0xffed
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x4
 >> Updated instruction            :  eb 1f 4f e3          	: movt r1, #0xffeb
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x8
 >> Updated instruction            :  e7 1f 4f e3          	: movt r1, #0xffe7
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x10
 >> Updated instruction            :  ff 1f 4f e3          	: movt r1, #0xffff
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x20
 >> Updated instruction            :  cf 1f 4f e3          	: movt r1, #0xffcf
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x40
 >> Updated instruction            :  af 1f 4f e3          	: movt r1, #0xffaf
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x80
 >> Updated instruction            :  6f 1f 4f e3          	: movt r1, #0xff6f
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x100
 >> Updated instruction            :  ef 1e 4f e3          	: movt r1, #0xfeef
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x200
 >> Updated instruction            :  ef 1d 4f e3          	: movt r1, #0xfdef
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x400
 >> Updated instruction            :  ef 1b 4f e3          	: movt r1, #0xfbef
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x800
 >> Updated instruction            :  ef 17 4f e3          	: movt r1, #0xf7ef
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x1000
 >> Updated instruction            :  ef 0f 4f e3          	: movt r0, #0xffef
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x2000
 >> Updated instruction            :  ef 3f 4f e3          	: movt r3, #0xffef
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x4000
 >> Updated instruction            :  ef 5f 4f e3          	: movt r5, #0xffef
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc0. Hit: 1. Lifespan: 2. Instruction: 00000907. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef 1f 4f e3          	: movt r1, #0xffef
 >> Mask                           :  0x8000
 >> Updated instruction            :  ef 9f 4f e3          	: movt sb, #0xffef
 >> Lifespan countdown: 2. (0x80000dc4)
 >> Lifespan countdown: 1. (0x80000dc8)
 >> Reverting instruction          :  ef 1f 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 0. Instruction: 00000915. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000de0
 >> Updated                     : 0x0000000080000de4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x1
 >> Updated instruction            :  4d a0 1b e5          	: ldr sl, [fp, #-0x4d]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x2
 >> Updated instruction            :  4e a0 1b e5          	: ldr sl, [fp, #-0x4e]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x4
 >> Updated instruction            :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x8
 >> Updated instruction            :  44 a0 1b e5          	: ldr sl, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x10
 >> Updated instruction            :  5c a0 1b e5          	: ldr sl, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x20
 >> Updated instruction            :  6c a0 1b e5          	: ldr sl, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x40
 >> Updated instruction            :  0c a0 1b e5          	: ldr sl, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x80
 >> Updated instruction            :  cc a0 1b e5          	: ldr sl, [fp, #-0xcc]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x100
 >> Updated instruction            :  4c a1 1b e5          	: ldr sl, [fp, #-0x14c]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x200
 >> Updated instruction            :  4c a2 1b e5          	: ldr sl, [fp, #-0x24c]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x400
 >> Updated instruction            :  4c a4 1b e5          	: ldr sl, [fp, #-0x44c]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x800
 >> Updated instruction            :  4c a8 1b e5          	: ldr sl, [fp, #-0x84c]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  4c b0 1b e5          	: ldr fp, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000aa49983f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 933.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  4c 80 1b e5          	: ldr r8, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  4c e0 1b e5          	: ldr lr, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de0. Hit: 1. Lifespan: 2. Instruction: 00000915. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  4c 20 1b e5          	: ldr r2, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000de4)
 >> Lifespan countdown: 1. (0x80000de8)
 >> Reverting instruction          :  4c a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 0. Instruction: 00000926. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e0c
 >> Updated                     : 0x0000000080000e10
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x1
 >> Updated instruction            :  2d 9e 4f e3          	: movt sb, #0xfe2d
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x2
 >> Updated instruction            :  2e 9e 4f e3          	: movt sb, #0xfe2e
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x4
 >> Updated instruction            :  28 9e 4f e3          	: movt sb, #0xfe28
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x8
 >> Updated instruction            :  24 9e 4f e3          	: movt sb, #0xfe24
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x10
 >> Updated instruction            :  3c 9e 4f e3          	: movt sb, #0xfe3c
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x20
 >> Updated instruction            :  0c 9e 4f e3          	: movt sb, #0xfe0c
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x40
 >> Updated instruction            :  6c 9e 4f e3          	: movt sb, #0xfe6c
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x80
 >> Updated instruction            :  ac 9e 4f e3          	: movt sb, #0xfeac
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x100
 >> Updated instruction            :  2c 9f 4f e3          	: movt sb, #0xff2c
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x200
 >> Updated instruction            :  2c 9c 4f e3          	: movt sb, #0xfc2c
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x400
 >> Updated instruction            :  2c 9a 4f e3          	: movt sb, #0xfa2c
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x800
 >> Updated instruction            :  2c 96 4f e3          	: movt sb, #0xf62c
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x1000
 >> Updated instruction            :  2c 8e 4f e3          	: movt r8, #0xfe2c
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x2000
 >> Updated instruction            :  2c be 4f e3          	: movt fp, #0xfe2c
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fe2cfec0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 933.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x4000
 >> Updated instruction            :  2c de 4f e3          	: movt sp, #0xfe2c
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e0c. Hit: 1. Lifespan: 2. Instruction: 00000926. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 9e 4f e3          	: movt sb, #0xfe2c
 >> Mask                           :  0x8000
 >> Updated instruction            :  2c 1e 4f e3          	: movt r1, #0xfe2c
 >> Lifespan countdown: 2. (0x80000e10)
 >> Lifespan countdown: 1. (0x80000e14)
 >> Reverting instruction          :  2c 9e 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 0. Instruction: 00000932. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e24
 >> Updated                     : 0x0000000080000e28
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 80 28 e0          	: eor r8, r8, r6
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 80 28 e0          	: eor r8, r8, r5
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 80 28 e0          	: eor r8, r8, r3
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 80 28 e0          	: eor r8, r8, pc
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 80 28 e0          	: eor r8, r8, r7, lsl r0
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 80 28 e0          	: eor r8, r8, r7, lsr #32
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 80 28 e0          	: eor r8, r8, r7, asr #32
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 80 28 e0          	: eor r8, r8, r7, lsl #1
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 81 28 e0          	: eor r8, r8, r7, lsl #2
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 82 28 e0          	: eor r8, r8, r7, lsl #4
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 84 28 e0          	: eor r8, r8, r7, lsl #8
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 88 28 e0          	: eor r8, r8, r7, lsl #16
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 90 28 e0          	: eor sb, r8, r7
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 a0 28 e0          	: eor sl, r8, r7
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 c0 28 e0          	: eor ip, r8, r7
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e24. Hit: 1. Lifespan: 2. Instruction: 00000932. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 28 e0          	: eor r8, r8, r7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 00 28 e0          	: eor r0, r8, r7
 >> Lifespan countdown: 2. (0x80000e28)
 >> Lifespan countdown: 1. (0x80000e2c)
 >> Reverting instruction          :  07 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 0. Instruction: 00000941. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e48
 >> Updated                     : 0x0000000080000e4c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x1
 >> Updated instruction            :  31 30 1b e5          	: ldr r3, [fp, #-0x31]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x2
 >> Updated instruction            :  32 30 1b e5          	: ldr r3, [fp, #-0x32]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x4
 >> Updated instruction            :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x8
 >> Updated instruction            :  38 30 1b e5          	: ldr r3, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x10
 >> Updated instruction            :  20 30 1b e5          	: ldr r3, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x20
 >> Updated instruction            :  10 30 1b e5          	: ldr r3, [fp, #-0x10]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x40
 >> Updated instruction            :  70 30 1b e5          	: ldr r3, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x80
 >> Updated instruction            :  b0 30 1b e5          	: ldr r3, [fp, #-0xb0]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x100
 >> Updated instruction            :  30 31 1b e5          	: ldr r3, [fp, #-0x130]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x200
 >> Updated instruction            :  30 32 1b e5          	: ldr r3, [fp, #-0x230]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x400
 >> Updated instruction            :  30 34 1b e5          	: ldr r3, [fp, #-0x430]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x800
 >> Updated instruction            :  30 38 1b e5          	: ldr r3, [fp, #-0x830]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x1000
 >> Updated instruction            :  30 20 1b e5          	: ldr r2, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x2000
 >> Updated instruction            :  30 10 1b e5          	: ldr r1, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x4000
 >> Updated instruction            :  30 70 1b e5          	: ldr r7, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e48. Hit: 1. Lifespan: 2. Instruction: 00000941. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Mask                           :  0x8000
 >> Updated instruction            :  30 b0 1b e5          	: ldr fp, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000e4c)
 >> Lifespan countdown: 1. (0x80000e50)
 >> Reverting instruction          :  30 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff9c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 945.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 0. Instruction: 00000949. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e68
 >> Updated                     : 0x0000000080000e6c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x1
 >> Updated instruction            :  a9 af 46 e3          	: movt sl, #0x6fa9
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x2
 >> Updated instruction            :  aa af 46 e3          	: movt sl, #0x6faa
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x4
 >> Updated instruction            :  ac af 46 e3          	: movt sl, #0x6fac
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x8
 >> Updated instruction            :  a0 af 46 e3          	: movt sl, #0x6fa0
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x10
 >> Updated instruction            :  b8 af 46 e3          	: movt sl, #0x6fb8
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x20
 >> Updated instruction            :  88 af 46 e3          	: movt sl, #0x6f88
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x40
 >> Updated instruction            :  e8 af 46 e3          	: movt sl, #0x6fe8
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x80
 >> Updated instruction            :  28 af 46 e3          	: movt sl, #0x6f28
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x100
 >> Updated instruction            :  a8 ae 46 e3          	: movt sl, #0x6ea8
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x200
 >> Updated instruction            :  a8 ad 46 e3          	: movt sl, #0x6da8
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x400
 >> Updated instruction            :  a8 ab 46 e3          	: movt sl, #0x6ba8
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x800
 >> Updated instruction            :  a8 a7 46 e3          	: movt sl, #0x67a8
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x1000
 >> Updated instruction            :  a8 bf 46 e3          	: movt fp, #0x6fa8
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006fa8fec8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 959.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x2000
 >> Updated instruction            :  a8 8f 46 e3          	: movt r8, #0x6fa8
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x4000
 >> Updated instruction            :  a8 ef 46 e3          	: movt lr, #0x6fa8
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e68. Hit: 1. Lifespan: 2. Instruction: 00000949. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 af 46 e3          	: movt sl, #0x6fa8
 >> Mask                           :  0x8000
 >> Updated instruction            :  a8 2f 46 e3          	: movt r2, #0x6fa8
 >> Lifespan countdown: 2. (0x80000e6c)
 >> Lifespan countdown: 1. (0x80000e70)
 >> Reverting instruction          :  a8 af 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 0. Instruction: 00000955. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e80
 >> Updated                     : 0x0000000080000e84
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 70 80 e0          	: add r7, r0, r6
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 70 80 e0          	: add r7, r0, r5
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 70 80 e0          	: add r7, r0, r3
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 70 80 e0          	: add r7, r0, pc
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 70 80 e0          	: add r7, r0, r7, lsl r0
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 70 80 e0          	: add r7, r0, r7, lsr #32
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 70 80 e0          	: add r7, r0, r7, asr #32
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 70 80 e0          	: add r7, r0, r7, lsl #1
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 71 80 e0          	: add r7, r0, r7, lsl #2
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 72 80 e0          	: add r7, r0, r7, lsl #4
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 74 80 e0          	: add r7, r0, r7, lsl #8
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 78 80 e0          	: add r7, r0, r7, lsl #16
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 60 80 e0          	: add r6, r0, r7
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 50 80 e0          	: add r5, r0, r7
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 30 80 e0          	: add r3, r0, r7
 >> Lifespan countdown: 2. (0x80000e84)
 >> Lifespan countdown: 1. (0x80000e88)
 >> Reverting instruction          :  07 70 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e80. Hit: 1. Lifespan: 2. Instruction: 00000955. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 70 80 e0          	: add r7, r0, r7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 f0 80 e0          	: add pc, r0, r7
 >!  Erm -  fetching from unmapped memory, address: 0x4e0811a0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 955.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 0. Instruction: 00000965. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ea8
 >> Updated                     : 0x0000000080000eac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 60 81 e0          	: add r6, r1, r7
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 60 81 e0          	: add r6, r1, r4
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 60 81 e0          	: add r6, r1, r2
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 60 81 e0          	: add r6, r1, lr
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 60 81 e0          	: add r6, r1, r6, lsl r0
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 60 81 e0          	: add r6, r1, r6, lsr #32
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 60 81 e0          	: add r6, r1, r6, asr #32
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 60 81 e0          	: add r6, r1, r6, lsl #1
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 61 81 e0          	: add r6, r1, r6, lsl #2
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 62 81 e0          	: add r6, r1, r6, lsl #4
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 64 81 e0          	: add r6, r1, r6, lsl #8
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 68 81 e0          	: add r6, r1, r6, lsl #16
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 70 81 e0          	: add r7, r1, r6
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 40 81 e0          	: add r4, r1, r6
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 20 81 e0          	: add r2, r1, r6
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea8. Hit: 1. Lifespan: 2. Instruction: 00000965. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 81 e0          	: add r6, r1, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 e0 81 e0          	: add lr, r1, r6
 >> Lifespan countdown: 2. (0x80000eac)
 >> Lifespan countdown: 1. (0x80000eb0)
 >> Reverting instruction          :  06 60 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 0. Instruction: 00000973. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ec8
 >> Updated                     : 0x0000000080000ecc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 10 e0 e1          	: mvn r1, r3
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 10 e0 e1          	: mvn r1, r0
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 10 e0 e1          	: mvn r1, r6
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 10 e0 e1          	: mvn r1, sl
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 10 e0 e1          	: mvn r1, r2, lsl r0
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 10 e0 e1          	: mvn r1, r2, lsr #32
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 10 e0 e1          	: mvn r1, r2, asr #32
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 10 e0 e1          	: mvn r1, r2, lsl #1
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 11 e0 e1          	: mvn r1, r2, lsl #2
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 12 e0 e1          	: mvn r1, r2, lsl #4
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 14 e0 e1          	: mvn r1, r2, lsl #8
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 18 e0 e1          	: mvn r1, r2, lsl #16
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 00 e0 e1          	: mvn r0, r2
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 30 e0 e1          	: mvn r3, r2
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 50 e0 e1          	: mvn r5, r2
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec8. Hit: 1. Lifespan: 2. Instruction: 00000973. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 10 e0 e1          	: mvn r1, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 90 e0 e1          	: mvn sb, r2
 >> Lifespan countdown: 2. (0x80000ecc)
 >> Lifespan countdown: 1. (0x80000ed0)
 >> Reverting instruction          :  02 10 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 0. Instruction: 00000980. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ee4
 >> Updated                     : 0x0000000080000ee8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 10 81 e1          	: orr r1, r1, r1
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 10 81 e1          	: orr r1, r1, r2
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 10 81 e1          	: orr r1, r1, r4
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 10 81 e1          	: orr r1, r1, r8
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 10 81 e1          	: orr r1, r1, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 10 81 e1          	: orr r1, r1, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 10 81 e1          	: orr r1, r1, r0, asr #32
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 10 81 e1          	: orr r1, r1, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 11 81 e1          	: orr r1, r1, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 12 81 e1          	: orr r1, r1, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 14 81 e1          	: orr r1, r1, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 18 81 e1          	: orr r1, r1, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 00 81 e1          	: orr r0, r1, r0
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 30 81 e1          	: orr r3, r1, r0
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 50 81 e1          	: orr r5, r1, r0
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee4. Hit: 1. Lifespan: 2. Instruction: 00000980. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 81 e1          	: orr r1, r1, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 90 81 e1          	: orr sb, r1, r0
 >> Lifespan countdown: 2. (0x80000ee8)
 >> Lifespan countdown: 1. (0x80000eec)
 >> Reverting instruction          :  00 10 81 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 0. Instruction: 00000988. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f04
 >> Updated                     : 0x0000000080000f08
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x1
 >> Updated instruction            :  60 1b 80 e0          	: add r1, r0, r0, ror #22
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x2
 >> Updated instruction            :  63 1b 80 e0          	: add r1, r0, r3, ror #22
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x4
 >> Updated instruction            :  65 1b 80 e0          	: add r1, r0, r5, ror #22
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x8
 >> Updated instruction            :  69 1b 80 e0          	: add r1, r0, sb, ror #22
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x10
 >> Updated instruction            :  71 1b 80 e0          	: add r1, r0, r1, ror fp
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x20
 >> Updated instruction            :  41 1b 80 e0          	: add r1, r0, r1, asr #22
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x40
 >> Updated instruction            :  21 1b 80 e0          	: add r1, r0, r1, lsr #22
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x80
 >> Updated instruction            :  e1 1b 80 e0          	: add r1, r0, r1, ror #23
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x100
 >> Updated instruction            :  61 1a 80 e0          	: add r1, r0, r1, ror #20
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x200
 >> Updated instruction            :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x400
 >> Updated instruction            :  61 1f 80 e0          	: add r1, r0, r1, ror #30
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x800
 >> Updated instruction            :  61 13 80 e0          	: add r1, r0, r1, ror #6
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x1000
 >> Updated instruction            :  61 0b 80 e0          	: add r0, r0, r1, ror #22
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x2000
 >> Updated instruction            :  61 3b 80 e0          	: add r3, r0, r1, ror #22
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x4000
 >> Updated instruction            :  61 5b 80 e0          	: add r5, r0, r1, ror #22
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f04. Hit: 1. Lifespan: 2. Instruction: 00000988. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Mask                           :  0x8000
 >> Updated instruction            :  61 9b 80 e0          	: add sb, r0, r1, ror #22
 >> Lifespan countdown: 2. (0x80000f08)
 >> Lifespan countdown: 1. (0x80000f0c)
 >> Reverting instruction          :  61 1b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 0. Instruction: 00000997. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f28
 >> Updated                     : 0x0000000080000f2c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 50 85 e0          	: add r5, r5, r0
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 50 85 e0          	: add r5, r5, r3
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 50 85 e0          	: add r5, r5, r5
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 50 85 e0          	: add r5, r5, sb
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 50 85 e0          	: add r5, r5, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 50 85 e0          	: add r5, r5, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 50 85 e0          	: add r5, r5, r1, asr #32
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 50 85 e0          	: add r5, r5, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 51 85 e0          	: add r5, r5, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 52 85 e0          	: add r5, r5, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 54 85 e0          	: add r5, r5, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 58 85 e0          	: add r5, r5, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 40 85 e0          	: add r4, r5, r1
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 70 85 e0          	: add r7, r5, r1
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 10 85 e0          	: add r1, r5, r1
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f28. Hit: 1. Lifespan: 2. Instruction: 00000997. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 d0 85 e0          	: add sp, r5, r1
 >> Lifespan countdown: 2. (0x80000f2c)
 >> Lifespan countdown: 1. (0x80000f30)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 0. Instruction: 00001006. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f4c
 >> Updated                     : 0x0000000080000f50
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x1
 >> Updated instruction            :  45 30 1b e5          	: ldr r3, [fp, #-0x45]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x2
 >> Updated instruction            :  46 30 1b e5          	: ldr r3, [fp, #-0x46]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x4
 >> Updated instruction            :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x8
 >> Updated instruction            :  4c 30 1b e5          	: ldr r3, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x10
 >> Updated instruction            :  54 30 1b e5          	: ldr r3, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x20
 >> Updated instruction            :  64 30 1b e5          	: ldr r3, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x40
 >> Updated instruction            :  04 30 1b e5          	: ldr r3, [fp, #-4]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x80
 >> Updated instruction            :  c4 30 1b e5          	: ldr r3, [fp, #-0xc4]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x100
 >> Updated instruction            :  44 31 1b e5          	: ldr r3, [fp, #-0x144]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x200
 >> Updated instruction            :  44 32 1b e5          	: ldr r3, [fp, #-0x244]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x400
 >> Updated instruction            :  44 34 1b e5          	: ldr r3, [fp, #-0x444]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x800
 >> Updated instruction            :  44 38 1b e5          	: ldr r3, [fp, #-0x844]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x1000
 >> Updated instruction            :  44 20 1b e5          	: ldr r2, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x2000
 >> Updated instruction            :  44 10 1b e5          	: ldr r1, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x4000
 >> Updated instruction            :  44 70 1b e5          	: ldr r7, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f4c. Hit: 1. Lifespan: 2. Instruction: 00001006. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Mask                           :  0x8000
 >> Updated instruction            :  44 b0 1b e5          	: ldr fp, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000f50)
 >> Lifespan countdown: 1. (0x80000f54)
 >> Reverting instruction          :  44 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010325436, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1019.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 0. Instruction: 00001013. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f68
 >> Updated                     : 0x0000000080000f6c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x1
 >> Updated instruction            :  6d cd 8a e0          	: add ip, sl, sp, ror #26
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x2
 >> Updated instruction            :  6e cd 8a e0          	: add ip, sl, lr, ror #26
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x4
 >> Updated instruction            :  68 cd 8a e0          	: add ip, sl, r8, ror #26
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x8
 >> Updated instruction            :  64 cd 8a e0          	: add ip, sl, r4, ror #26
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x10
 >> Updated instruction            :  7c cd 8a e0          	: add ip, sl, ip, ror sp
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x20
 >> Updated instruction            :  4c cd 8a e0          	: add ip, sl, ip, asr #26
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x40
 >> Updated instruction            :  2c cd 8a e0          	: add ip, sl, ip, lsr #26
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x80
 >> Updated instruction            :  ec cd 8a e0          	: add ip, sl, ip, ror #27
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x100
 >> Updated instruction            :  6c cc 8a e0          	: add ip, sl, ip, ror #24
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x200
 >> Updated instruction            :  6c cf 8a e0          	: add ip, sl, ip, ror #30
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x400
 >> Updated instruction            :  6c c9 8a e0          	: add ip, sl, ip, ror #18
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x800
 >> Updated instruction            :  6c c5 8a e0          	: add ip, sl, ip, ror #10
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x1000
 >> Updated instruction            :  6c dd 8a e0          	: add sp, sl, ip, ror #26
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x2000
 >> Updated instruction            :  6c ed 8a e0          	: add lr, sl, ip, ror #26
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x4000
 >> Updated instruction            :  6c 8d 8a e0          	: add r8, sl, ip, ror #26
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f68. Hit: 1. Lifespan: 2. Instruction: 00001013. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c cd 8a e0          	: add ip, sl, ip, ror #26
 >> Mask                           :  0x8000
 >> Updated instruction            :  6c 4d 8a e0          	: add r4, sl, ip, ror #26
 >> Lifespan countdown: 2. (0x80000f6c)
 >> Lifespan countdown: 1. (0x80000f70)
 >> Reverting instruction          :  6c cd 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 0. Instruction: 00001020. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f84
 >> Updated                     : 0x0000000080000f88
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x1
 >> Updated instruction            :  69 10 0b e5          	: str r1, [fp, #-0x69]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x2
 >> Updated instruction            :  6a 10 0b e5          	: str r1, [fp, #-0x6a]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x4
 >> Updated instruction            :  6c 10 0b e5          	: str r1, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x8
 >> Updated instruction            :  60 10 0b e5          	: str r1, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x10
 >> Updated instruction            :  78 10 0b e5          	: str r1, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x20
 >> Updated instruction            :  48 10 0b e5          	: str r1, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x40
 >> Updated instruction            :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x80
 >> Updated instruction            :  e8 10 0b e5          	: str r1, [fp, #-0xe8]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x100
 >> Updated instruction            :  68 11 0b e5          	: str r1, [fp, #-0x168]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x200
 >> Updated instruction            :  68 12 0b e5          	: str r1, [fp, #-0x268]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x400
 >> Updated instruction            :  68 14 0b e5          	: str r1, [fp, #-0x468]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x800
 >> Updated instruction            :  68 18 0b e5          	: str r1, [fp, #-0x868]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x1000
 >> Updated instruction            :  68 00 0b e5          	: str r0, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x2000
 >> Updated instruction            :  68 30 0b e5          	: str r3, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x4000
 >> Updated instruction            :  68 50 0b e5          	: str r5, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f84. Hit: 1. Lifespan: 2. Instruction: 00001020. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Mask                           :  0x8000
 >> Updated instruction            :  68 90 0b e5          	: str sb, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000f88)
 >> Lifespan countdown: 1. (0x80000f8c)
 >> Reverting instruction          :  68 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 0. Instruction: 00001029. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fa8
 >> Updated                     : 0x0000000080000fac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 80 88 e1          	: orr r8, r8, r8
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b 80 88 e1          	: orr r8, r8, fp
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d 80 88 e1          	: orr r8, r8, sp
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 80 88 e1          	: orr r8, r8, r1
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 80 88 e1          	: orr r8, r8, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 80 88 e1          	: orr r8, r8, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 80 88 e1          	: orr r8, r8, sb, asr #32
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 80 88 e1          	: orr r8, r8, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 81 88 e1          	: orr r8, r8, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 82 88 e1          	: orr r8, r8, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 84 88 e1          	: orr r8, r8, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 88 88 e1          	: orr r8, r8, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 90 88 e1          	: orr sb, r8, sb
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 a0 88 e1          	: orr sl, r8, sb
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 c0 88 e1          	: orr ip, r8, sb
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fa8. Hit: 1. Lifespan: 2. Instruction: 00001029. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 80 88 e1          	: orr r8, r8, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 00 88 e1          	: orr r0, r8, sb
 >> Lifespan countdown: 2. (0x80000fac)
 >> Lifespan countdown: 1. (0x80000fb0)
 >> Reverting instruction          :  09 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 0. Instruction: 00001035. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fc0
 >> Updated                     : 0x0000000080000fc4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 84 e0          	: add r3, r4, sb
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 84 e0          	: add r3, r4, sl
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 84 e0          	: add r3, r4, ip
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 84 e0          	: add r3, r4, r0
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 84 e0          	: add r3, r4, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 84 e0          	: add r3, r4, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 84 e0          	: add r3, r4, r8, asr #32
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 84 e0          	: add r3, r4, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 84 e0          	: add r3, r4, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 84 e0          	: add r3, r4, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 84 e0          	: add r3, r4, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 84 e0          	: add r3, r4, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 84 e0          	: add r2, r4, r8
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 84 e0          	: add r1, r4, r8
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 84 e0          	: add r7, r4, r8
 >> Lifespan countdown: 2. (0x80000fc4)
 >> Lifespan countdown: 1. (0x80000fc8)
 >> Reverting instruction          :  08 30 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc0. Hit: 1. Lifespan: 2. Instruction: 00001035. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 84 e0          	: add r3, r4, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 84 e0          	: add fp, r4, r8
 >> Lifespan countdown: 2. (0x80000fc4)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc78cb68a, value: 0x760cd705!! Count 1037 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1036.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 0. Instruction: 00001043. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fe0
 >> Updated                     : 0x0000000080000fe4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x1
 >> Updated instruction            :  41 30 1b e5          	: ldr r3, [fp, #-0x41]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x2
 >> Updated instruction            :  42 30 1b e5          	: ldr r3, [fp, #-0x42]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x4
 >> Updated instruction            :  44 30 1b e5          	: ldr r3, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x8
 >> Updated instruction            :  48 30 1b e5          	: ldr r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x10
 >> Updated instruction            :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x20
 >> Updated instruction            :  60 30 1b e5          	: ldr r3, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x40
 >> Updated instruction            :  00 30 1b e5          	: ldr r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x80
 >> Updated instruction            :  c0 30 1b e5          	: ldr r3, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x100
 >> Updated instruction            :  40 31 1b e5          	: ldr r3, [fp, #-0x140]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x200
 >> Updated instruction            :  40 32 1b e5          	: ldr r3, [fp, #-0x240]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x400
 >> Updated instruction            :  40 34 1b e5          	: ldr r3, [fp, #-0x440]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x800
 >> Updated instruction            :  40 38 1b e5          	: ldr r3, [fp, #-0x840]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x1000
 >> Updated instruction            :  40 20 1b e5          	: ldr r2, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000fe4)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x760cd715, value: 0xc78cb6c6!! Count 1045 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1044.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x2000
 >> Updated instruction            :  40 10 1b e5          	: ldr r1, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x4000
 >> Updated instruction            :  40 70 1b e5          	: ldr r7, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fe0. Hit: 1. Lifespan: 2. Instruction: 00001043. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Mask                           :  0x8000
 >> Updated instruction            :  40 b0 1b e5          	: ldr fp, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000fe4)
 >> Lifespan countdown: 1. (0x80000fe8)
 >> Reverting instruction          :  40 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000760cd6c1, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1045.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 0. Instruction: 00001051. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010d4
 >> Updated                     : 0x00000000800010d8
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x1
 >> Updated instruction            :  99 20 a0 e3          	: mov r2, #0x99
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x2
 >> Updated instruction            :  9a 20 a0 e3          	: mov r2, #0x9a
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x4
 >> Updated instruction            :  9c 20 a0 e3          	: mov r2, #0x9c
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x8
 >> Updated instruction            :  90 20 a0 e3          	: mov r2, #0x90
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x10
 >> Updated instruction            :  88 20 a0 e3          	: mov r2, #0x88
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x20
 >> Updated instruction            :  b8 20 a0 e3          	: mov r2, #0xb8
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x40
 >> Updated instruction            :  d8 20 a0 e3          	: mov r2, #0xd8
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x80
 >> Updated instruction            :  18 20 a0 e3          	: mov r2, #0x18
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x100
 >> Updated instruction            :  98 21 a0 e3          	: mov r2, #152, #2
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x200
 >> Updated instruction            :  98 22 a0 e3          	: mov r2, #152, #4
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x400
 >> Updated instruction            :  98 24 a0 e3          	: mov r2, #152, #8
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x800
 >> Updated instruction            :  98 28 a0 e3          	: mov r2, #152, #16
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x1000
 >> Updated instruction            :  98 30 a0 e3          	: mov r3, #0x98
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x2000
 >> Updated instruction            :  98 00 a0 e3          	: mov r0, #0x98
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x98, value: 0x0!! Count 1117 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1116.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x4000
 >> Updated instruction            :  98 60 a0 e3          	: mov r6, #0x98
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d4. Hit: 1. Lifespan: 2. Instruction: 00001051. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  98 20 a0 e3          	: mov r2, #0x98
 >> Mask                           :  0x8000
 >> Updated instruction            :  98 a0 a0 e3          	: mov sl, #0x98
 >> Lifespan countdown: 2. (0x800010d8)
 >> Lifespan countdown: 1. (0x800010dc)
 >> Reverting instruction          :  98 20 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 0. Instruction: 00001059. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010f4
 >> Updated                     : 0x00000000800010f8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x1
 >> Updated instruction            :  0a 30 d4 e5          	: ldrb r3, [r4, #0xa]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x2
 >> Updated instruction            :  09 30 d4 e5          	: ldrb r3, [r4, #9]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x4
 >> Updated instruction            :  0f 30 d4 e5          	: ldrb r3, [r4, #0xf]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x8
 >> Updated instruction            :  03 30 d4 e5          	: ldrb r3, [r4, #3]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x10
 >> Updated instruction            :  1b 30 d4 e5          	: ldrb r3, [r4, #0x1b]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x20
 >> Updated instruction            :  2b 30 d4 e5          	: ldrb r3, [r4, #0x2b]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x40
 >> Updated instruction            :  4b 30 d4 e5          	: ldrb r3, [r4, #0x4b]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x80
 >> Updated instruction            :  8b 30 d4 e5          	: ldrb r3, [r4, #0x8b]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x100
 >> Updated instruction            :  0b 31 d4 e5          	: ldrb r3, [r4, #0x10b]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011006b, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1059.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x200
 >> Updated instruction            :  0b 32 d4 e5          	: ldrb r3, [r4, #0x20b]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011016b, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1059.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x400
 >> Updated instruction            :  0b 34 d4 e5          	: ldrb r3, [r4, #0x40b]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011036b, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1059.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x800
 >> Updated instruction            :  0b 38 d4 e5          	: ldrb r3, [r4, #0x80b]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011076b, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1059.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x1000
 >> Updated instruction            :  0b 20 d4 e5          	: ldrb r2, [r4, #0xb]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x2000
 >> Updated instruction            :  0b 10 d4 e5          	: ldrb r1, [r4, #0xb]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x4000
 >> Updated instruction            :  0b 70 d4 e5          	: ldrb r7, [r4, #0xb]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f4. Hit: 1. Lifespan: 2. Instruction: 00001059. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 30 d4 e5          	: ldrb r3, [r4, #0xb]
 >> Mask                           :  0x8000
 >> Updated instruction            :  0b b0 d4 e5          	: ldrb fp, [r4, #0xb]
 >> Lifespan countdown: 2. (0x800010f8)
 >> Lifespan countdown: 1. (0x800010fc)
 >> Reverting instruction          :  0b 30 d4 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000011, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 0. Instruction: 00001066. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001110
 >> Updated                     : 0x0000000080001114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x1
 >> Updated instruction            :  bf 30 d4 e1          	: ldrh r3, [r4, #0xf]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x2
 >> Updated instruction            :  bc 30 d4 e1          	: ldrh r3, [r4, #0xc]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x4
 >> Updated instruction            :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x8
 >> Updated instruction            :  b6 30 d4 e1          	: ldrh r3, [r4, #6]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x10
 >> Updated instruction            :  ae 30 d4 e1          	: bics r3, r4, lr, lsr #1
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x20
 >> Updated instruction            :  9e 30 d4 e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1066.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x40
 >> Updated instruction            :  fe 30 d4 e1          	: ldrsh r3, [r4, #0xe]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x80
 >> Updated instruction            :  3e 30 d4 e1          	: bics r3, r4, lr, lsr r0
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x100
 >> Updated instruction            :  be 31 d4 e1          	: ldrh r3, [r4, #0x1e]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x200
 >> Updated instruction            :  be 32 d4 e1          	: ldrh r3, [r4, #0x2e]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x400
 >> Updated instruction            :  be 34 d4 e1          	: ldrh r3, [r4, #0x4e]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x800
 >> Updated instruction            :  be 38 d4 e1          	: ldrh r3, [r4, #0x8e]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x1000
 >> Updated instruction            :  be 20 d4 e1          	: ldrh r2, [r4, #0xe]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x2000
 >> Updated instruction            :  be 10 d4 e1          	: ldrh r1, [r4, #0xe]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x4000
 >> Updated instruction            :  be 70 d4 e1          	: ldrh r7, [r4, #0xe]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001110. Hit: 1. Lifespan: 2. Instruction: 00001066. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Mask                           :  0x8000
 >> Updated instruction            :  be b0 d4 e1          	: ldrh fp, [r4, #0xe]
 >> Lifespan countdown: 2. (0x80001114)
 >> Lifespan countdown: 1. (0x80001118)
 >> Reverting instruction          :  be 30 d4 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000c778, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 0. Instruction: 00001075. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001134
 >> Updated                     : 0x0000000080001138
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x1
 >> Updated instruction            :  b3 31 d4 e1          	: ldrh r3, [r4, #0x13]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x2
 >> Updated instruction            :  b0 31 d4 e1          	: ldrh r3, [r4, #0x10]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x4
 >> Updated instruction            :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x8
 >> Updated instruction            :  ba 31 d4 e1          	: ldrh r3, [r4, #0x1a]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x10
 >> Updated instruction            :  a2 31 d4 e1          	: bics r3, r4, r2, lsr #3
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x20
 >> Updated instruction            :  92 31 d4 e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1075.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x40
 >> Updated instruction            :  f2 31 d4 e1          	: ldrsh r3, [r4, #0x12]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x80
 >> Updated instruction            :  32 31 d4 e1          	: bics r3, r4, r2, lsr r1
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x100
 >> Updated instruction            :  b2 30 d4 e1          	: ldrh r3, [r4, #2]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x200
 >> Updated instruction            :  b2 33 d4 e1          	: ldrh r3, [r4, #0x32]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x400
 >> Updated instruction            :  b2 35 d4 e1          	: ldrh r3, [r4, #0x52]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x800
 >> Updated instruction            :  b2 39 d4 e1          	: ldrh r3, [r4, #0x92]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x1000
 >> Updated instruction            :  b2 21 d4 e1          	: ldrh r2, [r4, #0x12]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x2000
 >> Updated instruction            :  b2 11 d4 e1          	: ldrh r1, [r4, #0x12]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x4000
 >> Updated instruction            :  b2 71 d4 e1          	: ldrh r7, [r4, #0x12]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001134. Hit: 1. Lifespan: 2. Instruction: 00001075. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Mask                           :  0x8000
 >> Updated instruction            :  b2 b1 d4 e1          	: ldrh fp, [r4, #0x12]
 >> Lifespan countdown: 2. (0x80001138)
 >> Lifespan countdown: 1. (0x8000113c)
 >> Reverting instruction          :  b2 31 d4 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000000075f8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 0. Instruction: 00001084. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001158
 >> Updated                     : 0x000000008000115c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x1
 >> Updated instruction            :  b7 31 d4 e1          	: ldrh r3, [r4, #0x17]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x2
 >> Updated instruction            :  b4 31 d4 e1          	: ldrh r3, [r4, #0x14]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x4
 >> Updated instruction            :  b2 31 d4 e1          	: ldrh r3, [r4, #0x12]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x8
 >> Updated instruction            :  be 31 d4 e1          	: ldrh r3, [r4, #0x1e]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x10
 >> Updated instruction            :  a6 31 d4 e1          	: bics r3, r4, r6, lsr #3
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x20
 >> Updated instruction            :  96 31 d4 e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1084.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x40
 >> Updated instruction            :  f6 31 d4 e1          	: ldrsh r3, [r4, #0x16]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x80
 >> Updated instruction            :  36 31 d4 e1          	: bics r3, r4, r6, lsr r1
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x100
 >> Updated instruction            :  b6 30 d4 e1          	: ldrh r3, [r4, #6]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x200
 >> Updated instruction            :  b6 33 d4 e1          	: ldrh r3, [r4, #0x36]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x400
 >> Updated instruction            :  b6 35 d4 e1          	: ldrh r3, [r4, #0x56]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x800
 >> Updated instruction            :  b6 39 d4 e1          	: ldrh r3, [r4, #0x96]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x1000
 >> Updated instruction            :  b6 21 d4 e1          	: ldrh r2, [r4, #0x16]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x2000
 >> Updated instruction            :  b6 11 d4 e1          	: ldrh r1, [r4, #0x16]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x4000
 >> Updated instruction            :  b6 71 d4 e1          	: ldrh r7, [r4, #0x16]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001158. Hit: 1. Lifespan: 2. Instruction: 00001084. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 31 d4 e1          	: ldrh r3, [r4, #0x16]
 >> Mask                           :  0x8000
 >> Updated instruction            :  b6 b1 d4 e1          	: ldrh fp, [r4, #0x16]
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  b6 31 d4 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000000079df, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 0. Instruction: 00001094. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000088
 >> Updated                     : 0x000000008000008c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 30 03 e2          	: and r3, r3, #2
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 30 03 e2          	: and r3, r3, #1
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 30 03 e2          	: and r3, r3, #7
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 30 03 e2          	: and r3, r3, #0xb
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 30 03 e2          	: and r3, r3, #0x13
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 30 03 e2          	: and r3, r3, #0x23
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 30 03 e2          	: and r3, r3, #0x43
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 30 03 e2          	: and r3, r3, #0x83
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 31 03 e2          	: and r3, r3, #0xc0000000
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 32 03 e2          	: and r3, r3, #0x30000000
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 34 03 e2          	: and r3, r3, #0x3000000
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 38 03 e2          	: and r3, r3, #0x30000
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 20 03 e2          	: and r2, r3, #3
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 1129 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1128.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 10 03 e2          	: and r1, r3, #3
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 70 03 e2          	: and r7, r3, #3
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000088. Hit: 2. Lifespan: 2. Instruction: 00001094. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 b0 03 e2          	: and fp, r3, #3
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  03 30 03 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff3f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1119.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 0. Instruction: 00001102. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000a8
 >> Updated                     : 0x00000000800000ac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x1
 >> Updated instruction            :  21 00 00 3a          	: blo #0x108c
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x2
 >> Updated instruction            :  22 00 00 3a          	: blo #0x1090
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x4
 >> Updated instruction            :  24 00 00 3a          	: blo #0x1098
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x8
 >> Updated instruction            :  28 00 00 3a          	: blo #0x10a8
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x10
 >> Updated instruction            :  30 00 00 3a          	: blo #0x10c8
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x20
 >> Updated instruction            :  00 00 00 3a          	: blo #0x1008
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x40
 >> Updated instruction            :  60 00 00 3a          	: blo #0x1188
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x80
 >> Updated instruction            :  a0 00 00 3a          	: blo #0x1288
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x100
 >> Updated instruction            :  20 01 00 3a          	: blo #0x1488
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x200
 >> Updated instruction            :  20 02 00 3a          	: blo #0x1888
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x400
 >> Updated instruction            :  20 04 00 3a          	: blo #0x2088
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x800
 >> Updated instruction            :  20 08 00 3a          	: blo #0x3088
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x1000
 >> Updated instruction            :  20 10 00 3a          	: blo #0x5088
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x2000
 >> Updated instruction            :  20 20 00 3a          	: blo #0x9088
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x4000
 >> Updated instruction            :  20 40 00 3a          	: blo #0x11088
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a8. Hit: 2. Lifespan: 2. Instruction: 00001102. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 00 3a          	: blo #0x1088
 >> Mask                           :  0x8000
 >> Updated instruction            :  20 80 00 3a          	: blo #0x21088
 >> Lifespan countdown: 2. (0x800000ac)
 >> Lifespan countdown: 1. (0x800000b0)
 >> Reverting instruction          :  20 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 0. Instruction: 00001110. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000f8
 >> Updated                     : 0x00000000800000fc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  10 c8 d7 e7          	: bfi ip, r0, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  13 c8 d7 e7          	: bfi ip, r3, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  15 c8 d7 e7          	: bfi ip, r5, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  19 c8 d7 e7          	: bfi ip, sb, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  01 c8 d7 e7          	: ldrb ip, [r7, r1, lsl #16]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1110.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  31 c8 d7 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1110.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  51 c8 d7 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1110.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  91 c8 d7 e7          	: bfi ip, r1, #0x11, #7
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  11 c9 d7 e7          	: bfi ip, r1, #0x12, #6
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  11 ca d7 e7          	: bfi ip, r1, #0x14, #4
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  11 cc d7 e7          	: bfi ip, r1, #0x17, #1
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  11 c0 d7 e7          	: bfi ip, r1, #0, #0x18
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  11 d8 d7 e7          	: bfi sp, r1, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  11 e8 d7 e7          	: bfi lr, r1, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  11 88 d7 e7          	: bfi r8, r1, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 2. Lifespan: 2. Instruction: 00001110. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  11 48 d7 e7          	: bfi r4, r1, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 0. Instruction: 00001117. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 10. Lifespan: 2. Instruction: 00001117. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 0. Instruction: 00001125. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 12. Lifespan: 2. Instruction: 00001125. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 0. Instruction: 00001132. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1149 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1148.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110074, value: 0x0!! Count 1137 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1136.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110174, value: 0x0!! Count 1137 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1136.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110374, value: 0x0!! Count 1137 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1136.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110774, value: 0x0!! Count 1137 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1136.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 14. Lifespan: 2. Instruction: 00001132. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 0. Instruction: 00001140. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1149 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1148.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011007c, value: 0x0!! Count 1145 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1144.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011017c, value: 0x0!! Count 1145 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1144.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011037c, value: 0x0!! Count 1145 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1144.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011077c, value: 0x0!! Count 1145 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1144.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 16. Lifespan: 2. Instruction: 00001140. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 0. Instruction: 00001149. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 18. Lifespan: 2. Instruction: 00001149. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 0. Instruction: 00001157. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 20. Lifespan: 2. Instruction: 00001157. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 0. Instruction: 00001165. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 22. Lifespan: 2. Instruction: 00001165. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 0. Instruction: 00001172. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011001c, value: 0x0!! Count 1177 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1176.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011009c, value: 0x0!! Count 1177 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1176.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011019c, value: 0x0!! Count 1177 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1176.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011039c, value: 0x0!! Count 1177 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1176.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011079c, value: 0x0!! Count 1177 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1176.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 24. Lifespan: 2. Instruction: 00001172. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 0. Instruction: 00001179. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 26. Lifespan: 2. Instruction: 00001179. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 0. Instruction: 00001188. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011002c, value: 0x0!! Count 1193 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1192.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100ac, value: 0x0!! Count 1193 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1192.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101ac, value: 0x0!! Count 1193 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1192.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103ac, value: 0x0!! Count 1193 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1192.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107ac, value: 0x0!! Count 1193 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1192.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 28. Lifespan: 2. Instruction: 00001188. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 0. Instruction: 00001195. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 30. Lifespan: 2. Instruction: 00001195. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 0. Instruction: 00001204. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011003c, value: 0x0!! Count 1209 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1208.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100bc, value: 0x0!! Count 1209 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1208.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101bc, value: 0x0!! Count 1209 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1208.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103bc, value: 0x0!! Count 1209 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1208.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107bc, value: 0x0!! Count 1209 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1208.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 32. Lifespan: 2. Instruction: 00001204. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 0. Instruction: 00001205. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 32. Lifespan: 2. Instruction: 00001205. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 0. Instruction: 00001214. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1218 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1217.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1214.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1214.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1214.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1214.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1214.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1214.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1214.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1214.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 34. Lifespan: 2. Instruction: 00001214. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1214.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 0. Instruction: 00001221. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 36. Lifespan: 2. Instruction: 00001221. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 0. Instruction: 00001229. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 38. Lifespan: 2. Instruction: 00001229. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 0. Instruction: 00001240. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110020, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110060, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100e0, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101e0, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103e0, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107e0, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 41. Lifespan: 2. Instruction: 00001240. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 0. Instruction: 00001244. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110004, value: 0x0!! Count 1249 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1248.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110024, value: 0x0!! Count 1249 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1248.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110064, value: 0x0!! Count 1249 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1248.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100e4, value: 0x0!! Count 1249 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1248.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101e4, value: 0x0!! Count 1249 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1248.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103e4, value: 0x0!! Count 1249 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1248.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107e4, value: 0x0!! Count 1249 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1248.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 42. Lifespan: 2. Instruction: 00001244. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 0. Instruction: 00001255. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 45. Lifespan: 2. Instruction: 00001255. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 0. Instruction: 00001264. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 47. Lifespan: 2. Instruction: 00001264. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 0. Instruction: 00001272. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012dc
 >> Updated                     : 0x00000000800012e0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x1
 >> Updated instruction            :  c0 30 5b e5          	: ldrb r3, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x2
 >> Updated instruction            :  c3 30 5b e5          	: ldrb r3, [fp, #-0xc3]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x4
 >> Updated instruction            :  c5 30 5b e5          	: ldrb r3, [fp, #-0xc5]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x8
 >> Updated instruction            :  c9 30 5b e5          	: ldrb r3, [fp, #-0xc9]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x10
 >> Updated instruction            :  d1 30 5b e5          	: ldrb r3, [fp, #-0xd1]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x20
 >> Updated instruction            :  e1 30 5b e5          	: ldrb r3, [fp, #-0xe1]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x40
 >> Updated instruction            :  81 30 5b e5          	: ldrb r3, [fp, #-0x81]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x80
 >> Updated instruction            :  41 30 5b e5          	: ldrb r3, [fp, #-0x41]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x100
 >> Updated instruction            :  c1 31 5b e5          	: ldrb r3, [fp, #-0x1c1]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x200
 >> Updated instruction            :  c1 32 5b e5          	: ldrb r3, [fp, #-0x2c1]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x400
 >> Updated instruction            :  c1 34 5b e5          	: ldrb r3, [fp, #-0x4c1]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x800
 >> Updated instruction            :  c1 38 5b e5          	: ldrb r3, [fp, #-0x8c1]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x1000
 >> Updated instruction            :  c1 20 5b e5          	: ldrb r2, [fp, #-0xc1]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x2000
 >> Updated instruction            :  c1 10 5b e5          	: ldrb r1, [fp, #-0xc1]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x4000
 >> Updated instruction            :  c1 70 5b e5          	: ldrb r7, [fp, #-0xc1]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012dc. Hit: 1. Lifespan: 2. Instruction: 00001272. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c1 30 5b e5          	: ldrb r3, [fp, #-0xc1]
 >> Mask                           :  0x8000
 >> Updated instruction            :  c1 b0 5b e5          	: ldrb fp, [fp, #-0xc1]
 >> Lifespan countdown: 2. (0x800012e0)
 >> Lifespan countdown: 1. (0x800012e4)
 >> Reverting instruction          :  c1 30 5b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 0. Instruction: 00001279. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800002d8
 >> Updated                     : 0x00000000800002dc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x1
 >> Updated instruction            :  05 b0 2d e5          	: str fp, [sp, #-5]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x2
 >> Updated instruction            :  06 b0 2d e5          	: str fp, [sp, #-6]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x4
 >> Updated instruction            :  00 b0 2d e5          	: str fp, [sp, #-0]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x8
 >> Updated instruction            :  0c b0 2d e5          	: str fp, [sp, #-0xc]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x10
 >> Updated instruction            :  14 b0 2d e5          	: str fp, [sp, #-0x14]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x20
 >> Updated instruction            :  24 b0 2d e5          	: str fp, [sp, #-0x24]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x40
 >> Updated instruction            :  44 b0 2d e5          	: str fp, [sp, #-0x44]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x80
 >> Updated instruction            :  84 b0 2d e5          	: str fp, [sp, #-0x84]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x100
 >> Updated instruction            :  04 b1 2d e5          	: str fp, [sp, #-0x104]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x200
 >> Updated instruction            :  04 b2 2d e5          	: str fp, [sp, #-0x204]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x400
 >> Updated instruction            :  04 b4 2d e5          	: str fp, [sp, #-0x404]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x800
 >> Updated instruction            :  04 b8 2d e5          	: str fp, [sp, #-0x804]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 a0 2d e5          	: str sl, [sp, #-4]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 90 2d e5          	: str sb, [sp, #-4]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 f0 2d e5          	: str pc, [sp, #-4]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002d8. Hit: 1. Lifespan: 2. Instruction: 00001279. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 30 2d e5          	: str r3, [sp, #-4]!
 >> Lifespan countdown: 2. (0x800002dc)
 >> Lifespan countdown: 1. (0x800002e0)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 0. Instruction: 00001285. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800002e8
 >> Updated                     : 0x00000000800002ec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 c0 d0 e4          	: ldrb ip, [r0], #0
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 c0 d0 e4          	: ldrb ip, [r0], #3
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 c0 d0 e4          	: ldrb ip, [r0], #5
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 c0 d0 e4          	: ldrb ip, [r0], #9
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 c0 d0 e4          	: ldrb ip, [r0], #0x11
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 c0 d0 e4          	: ldrb ip, [r0], #0x21
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 c0 d0 e4          	: ldrb ip, [r0], #0x41
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 c0 d0 e4          	: ldrb ip, [r0], #0x81
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 c1 d0 e4          	: ldrb ip, [r0], #0x101
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 c2 d0 e4          	: ldrb ip, [r0], #0x201
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 c4 d0 e4          	: ldrb ip, [r0], #0x401
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 c8 d0 e4          	: ldrb ip, [r0], #0x801
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 d0 d0 e4          	: ldrb sp, [r0], #1
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 e0 d0 e4          	: ldrb lr, [r0], #1
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >!  Erm -  fetching from unmapped memory, address: 0x84, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1299.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 80 d0 e4          	: ldrb r8, [r0], #1
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e8. Hit: 1. Lifespan: 2. Instruction: 00001285. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 d0 e4          	: ldrb ip, [r0], #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 40 d0 e4          	: ldrb r4, [r0], #1
 >> Lifespan countdown: 2. (0x800002ec)
 >> Lifespan countdown: 1. (0x800002f0)
 >> Reverting instruction          :  01 c0 d0 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 0. Instruction: 00001291. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000318
 >> Updated                     : 0x000000008000031c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 d0 8b e2          	: add sp, fp, #1
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 d0 8b e2          	: add sp, fp, #2
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 d0 8b e2          	: add sp, fp, #4
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 d0 8b e2          	: add sp, fp, #8
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 d0 8b e2          	: add sp, fp, #0x10
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 d0 8b e2          	: add sp, fp, #0x20
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 d0 8b e2          	: add sp, fp, #0x40
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 d0 8b e2          	: add sp, fp, #0x80
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 d1 8b e2          	: add sp, fp, #0, #2
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 d2 8b e2          	: add sp, fp, #0, #4
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 d4 8b e2          	: add sp, fp, #0, #8
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 d8 8b e2          	: add sp, fp, #0, #16
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 c0 8b e2          	: add ip, fp, #0
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 f0 8b e2          	: add pc, fp, #0
 >> Lifespan countdown: 2. (0x8010ff34)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000001, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1292.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 90 8b e2          	: add sb, fp, #0
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000318. Hit: 1. Lifespan: 2. Instruction: 00001291. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 50 8b e2          	: add r5, fp, #0
 >> Lifespan countdown: 2. (0x8000031c)
 >> Lifespan countdown: 1. (0x80000320)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 0. Instruction: 00001299. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000131c
 >> Updated                     : 0x0000000080001320
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa00000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x1
 >> Updated instruction            :  00 3a a0 e3          	: mov r3, #0, #20
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa00000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x2
 >> Updated instruction            :  03 3a a0 e3          	: mov r3, #0x3000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa03000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x4
 >> Updated instruction            :  05 3a a0 e3          	: mov r3, #0x5000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa05000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x8
 >> Updated instruction            :  09 3a a0 e3          	: mov r3, #0x9000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa09000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x10
 >> Updated instruction            :  11 3a a0 e3          	: mov r3, #0x11000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x20
 >> Updated instruction            :  21 3a a0 e3          	: mov r3, #0x21000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x40
 >> Updated instruction            :  41 3a a0 e3          	: mov r3, #0x41000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x80
 >> Updated instruction            :  81 3a a0 e3          	: mov r3, #0x81000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x100
 >> Updated instruction            :  01 3b a0 e3          	: mov r3, #0x400
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa00400, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x200
 >> Updated instruction            :  01 38 a0 e3          	: mov r3, #0x10000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa00000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x400
 >> Updated instruction            :  01 3e a0 e3          	: mov r3, #1, #28
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa00010, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x800
 >> Updated instruction            :  01 32 a0 e3          	: mov r3, #0x10000000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa00000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 2a a0 e3          	: mov r2, #0x1000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa00000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 1a a0 e3          	: mov r1, #0x1000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa00000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 7a a0 e3          	: mov r7, #0x1000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa00000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000131c. Hit: 1. Lifespan: 2. Instruction: 00001299. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 3a a0 e3          	: mov r3, #0x1000
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 ba a0 e3          	: mov fp, #0x1000
 >> Lifespan countdown: 2. (0x80001320)
 >> Lifespan countdown: 1. (0x80001324)
 >> Reverting instruction          :  01 3a a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa00000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00
