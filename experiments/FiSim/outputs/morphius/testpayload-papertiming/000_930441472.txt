 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Filename              : /home/kit/unicorn-work/FiSim/bl1.elf
 >> Stack Address         : 0x0000000080100000
 >> Stack Size            : 0x0000000000010000
 >> Code Start Address    : 0x0000000080000000
 >> Code End Address      : 0x000000008000132c
 >> Code Offset           : 0x0000000000000054
 >> Fault Start Address   : 0x0000000080000000
 >> Fault End Address     : 0x000000008000132c
 >> Memory Address        : 0x0000000080000000
 >> Memory Size           : 0x0000000000020000
 >> Other Memory Address  : 0x0000000032000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000012000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040010800
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040004400
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x000000000aa01000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000011000000
 >> Other Memory Size     : 0x0000000000001000
 >> Hard stop             : 0x000000000000124c





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 0. Instruction: 00000005. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000024
 >> Updated                     : 0x0000000080000028
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x1
 >> Updated instruction            :  91 04 00 eb          	: bl #0x224c
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  90 04 00 eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x2
 >> Updated instruction            :  92 04 00 eb          	: bl #0x2250
 >> Lifespan countdown: 2. (0x80001274)
 >> Lifespan countdown: 1. (0x80001278)
 >> Reverting instruction          :  90 04 00 eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 68 Skipping to end.
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x4
 >> Updated instruction            :  94 04 00 eb          	: bl #0x2258
 >> Lifespan countdown: 2. (0x8000127c)
 >> Lifespan countdown: 1. (0x80001280)
 >> Reverting instruction          :  90 04 00 eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 48 Skipping to end.
 >> Run result: Fault errored program - last instruction: 47.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x8
 >> Updated instruction            :  98 04 00 eb          	: bl #0x2268
 >> Lifespan countdown: 2. (0x8000128c)
 >> Lifespan countdown: 1. (0x800012e8)
 >> Reverting instruction          :  90 04 00 eb 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x10
 >> Updated instruction            :  80 04 00 eb          	: bl #0x2208
 >> Lifespan countdown: 2. (0x8000122c)
 >> Lifespan countdown: 1. (0x80001230)
 >> Reverting instruction          :  90 04 00 eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffe4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 12.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x20
 >> Updated instruction            :  b0 04 00 eb          	: bl #0x22c8
 >> Lifespan countdown: 2. (0x800012ec)
 >> Lifespan countdown: 1. (0x800012f0)
 >> Reverting instruction          :  90 04 00 eb 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x40
 >> Updated instruction            :  d0 04 00 eb          	: bl #0x2348
 >> Lifespan countdown: 2. (0x8000136c)
 >> Lifespan countdown: 1. (0x80001370)
 >> Reverting instruction          :  90 04 00 eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 7.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x80
 >> Updated instruction            :  10 04 00 eb          	: bl #0x2048
 >> Lifespan countdown: 2. (0x8000106c)
 >> Lifespan countdown: 1. (0x80001070)
 >> Reverting instruction          :  90 04 00 eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 77.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x100
 >> Updated instruction            :  90 05 00 eb          	: bl #0x2648
 >> Lifespan countdown: 2. (0x8000166c)
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x200
 >> Updated instruction            :  90 06 00 eb          	: bl #0x2a48
 >> Lifespan countdown: 2. (0x80001a6c)
 >> Lifespan countdown: 1. (0x80001a70)
 >> Reverting instruction          :  90 04 00 eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 8 Skipping to end.
 >> Run result: Fault errored program - last instruction: 7.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x400
 >> Updated instruction            :  90 00 00 eb          	: bl #0x1248
 >> Lifespan countdown: 2. (0x8000026c)
 >> Lifespan countdown: 1. (0x80000270)
 >> Reverting instruction          :  90 04 00 eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x0!! Count 8 Skipping to end.
 >> Run result: Fault errored program - last instruction: 7.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x800
 >> Updated instruction            :  90 0c 00 eb          	: bl #0x4248
 >> Lifespan countdown: 2. (0x8000326c)
 >> Lifespan countdown: 1. (0x80003270)
 >> Reverting instruction          :  90 04 00 eb 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 7.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x1000
 >> Updated instruction            :  90 14 00 eb          	: bl #0x6248
 >> Lifespan countdown: 2. (0x8000526c)
 >> Lifespan countdown: 1. (0x80005270)
 >> Reverting instruction          :  90 04 00 eb 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 27498.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x2000
 >> Updated instruction            :  90 24 00 eb          	: bl #0xa248
 >> Lifespan countdown: 2. (0x8000926c)
 >> Lifespan countdown: 1. (0x80009270)
 >> Reverting instruction          :  90 04 00 eb 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 23402.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x4000
 >> Updated instruction            :  90 44 00 eb          	: bl #0x12248
 >> Lifespan countdown: 2. (0x8001126c)
 >> Lifespan countdown: 1. (0x80011270)
 >> Reverting instruction          :  90 04 00 eb 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 15210.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000024. Hit: 1. Lifespan: 2. Instruction: 00000005. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 04 00 eb          	: bl #0x2248
 >> Mask                           :  0x8000
 >> Updated instruction            :  90 84 00 eb          	: bl #0x22248
 >!  Erm -  fetching from unmapped memory, address: 0x8002126c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 5.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 0. Instruction: 00000022. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000440
 >> Updated                     : 0x0000000080000444
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 1b e5          	: ldr r3, [fp, #-9]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 1b e5          	: ldr r3, [fp, #-0xa]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 1b e5          	: ldr r3, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 1b e5          	: ldr r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000444)
 >> Lifespan countdown: 1. (0x80000448)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 1b e5          	: ldr r3, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 1b e5          	: ldr r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 1b e5          	: ldr r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 1b e5          	: ldr r3, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 1b e5          	: ldr r3, [fp, #-0x108]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 1b e5          	: ldr r3, [fp, #-0x208]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 1b e5          	: ldr r3, [fp, #-0x408]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 1b e5          	: ldr r3, [fp, #-0x808]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 1b e5          	: ldr r2, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 1b e5          	: ldr r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 1b e5          	: ldr r7, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000440. Hit: 1. Lifespan: 2. Instruction: 00000022. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 1b e5          	: ldr fp, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000444)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 23.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 0. Instruction: 00000026. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000450
 >> Updated                     : 0x0000000080000454
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000067452325, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x1
 >> Updated instruction            :  05 b0 9d e4          	: ldr fp, [sp], #5
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x2
 >> Updated instruction            :  06 b0 9d e4          	: ldr fp, [sp], #6
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x4
 >> Updated instruction            :  00 b0 9d e4          	: ldr fp, [sp], #0
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x8
 >> Updated instruction            :  0c b0 9d e4          	: ldr fp, [sp], #0xc
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000110ff3b, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x10
 >> Updated instruction            :  14 b0 9d e4          	: ldr fp, [sp], #0x14
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x20
 >> Updated instruction            :  24 b0 9d e4          	: ldr fp, [sp], #0x24
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  Erm -  fetching from unmapped memory, address: 0xc78cb6c6, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x40
 >> Updated instruction            :  44 b0 9d e4          	: ldr fp, [sp], #0x44
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000103253b6, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x80
 >> Updated instruction            :  84 b0 9d e4          	: ldr fp, [sp], #0x84
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x100
 >> Updated instruction            :  04 b1 9d e4          	: ldr fp, [sp], #0x104
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011002c, value: 0x80001380!! Count 31 Skipping to end.
 >> Run result: Fault errored program - last instruction: 30.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x200
 >> Updated instruction            :  04 b2 9d e4          	: ldr fp, [sp], #0x204
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011012c, value: 0x80001380!! Count 31 Skipping to end.
 >> Run result: Fault errored program - last instruction: 30.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x400
 >> Updated instruction            :  04 b4 9d e4          	: ldr fp, [sp], #0x404
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011032c, value: 0x80001380!! Count 31 Skipping to end.
 >> Run result: Fault errored program - last instruction: 30.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x800
 >> Updated instruction            :  04 b8 9d e4          	: ldr fp, [sp], #0x804
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011072c, value: 0x80001380!! Count 31 Skipping to end.
 >> Run result: Fault errored program - last instruction: 30.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 a0 9d e4          	: pop {sl}
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000067452325, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 90 9d e4          	: pop {sb}
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000067452325, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 f0 9d e4          	: pop {pc}
 >> Lifespan countdown: 2. (0x8010fffc)
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 27.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000450. Hit: 1. Lifespan: 2. Instruction: 00000026. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 30 9d e4          	: pop {r3}
 >> Lifespan countdown: 2. (0x80000454)
 >> Lifespan countdown: 1. (0x8000127c)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000067452325, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 0. Instruction: 00000038. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000330
 >> Updated                     : 0x0000000080000334
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 b0 8d e2          	: add fp, sp, #1
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000008010ef, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 b0 8d e2          	: add fp, sp, #2
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000008000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 b0 8d e2          	: add fp, sp, #4
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 b0 8d e2          	: add fp, sp, #8
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000001fff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x61656100, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 b0 8d e2          	: add fp, sp, #0x40
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 b0 8d e2          	: add fp, sp, #0x80
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 b1 8d e2          	: add fp, sp, #0, #2
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 b2 8d e2          	: add fp, sp, #0, #4
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 b4 8d e2          	: add fp, sp, #0, #8
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 b8 8d e2          	: add fp, sp, #0, #16
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 a0 8d e2          	: add sl, sp, #0
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 90 8d e2          	: add sb, sp, #0
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 f0 8d e2          	: add pc, sp, #0
 >> Lifespan countdown: 2. (0x8010ff1c)
 >> Lifespan countdown: 1. (0x8010ff20)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 95.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000330. Hit: 1. Lifespan: 2. Instruction: 00000038. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 30 8d e2          	: add r3, sp, #0
 >> Lifespan countdown: 2. (0x80000334)
 >> Lifespan countdown: 1. (0x80000338)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 0. Instruction: 00000041. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000033c
 >> Updated                     : 0x0000000080000340
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 0b e5          	: str r3, [fp, #-9]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000120000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 0b e5          	: str r3, [fp, #-0xa]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000001200, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 0b e5          	: str r3, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 0b e5          	: str r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 0b e5          	: str r3, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 0b e5          	: str r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 0b e5          	: str r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 0b e5          	: str r3, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 0b e5          	: str r3, [fp, #-0x108]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 0b e5          	: str r3, [fp, #-0x208]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 0b e5          	: str r3, [fp, #-0x408]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 0b e5          	: str r3, [fp, #-0x808]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 0b e5          	: str r2, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000001, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 0b e5          	: str r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 0b e5          	: str r7, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000033c. Hit: 1. Lifespan: 2. Instruction: 00000041. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 0b e5          	: str fp, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000340)
 >> Lifespan countdown: 1. (0x80000344)
 >> Reverting instruction          :  08 30 0b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 0. Instruction: 00000043. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000344
 >> Updated                     : 0x0000000080000348
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 93 e5          	: ldr r3, [r3, #1]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 93 e5          	: ldr r3, [r3, #2]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 93 e5          	: ldr r3, [r3, #4]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 93 e5          	: ldr r3, [r3, #8]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 93 e5          	: ldr r3, [r3, #0x10]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 93 e5          	: ldr r3, [r3, #0x20]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 93 e5          	: ldr r3, [r3, #0x40]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 93 e5          	: ldr r3, [r3, #0x80]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 93 e5          	: ldr r3, [r3, #0x100]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 93 e5          	: ldr r3, [r3, #0x200]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 93 e5          	: ldr r3, [r3, #0x400]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 93 e5          	: ldr r3, [r3, #0x800]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 93 e5          	: ldr r2, [r3]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 93 e5          	: ldr r1, [r3]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 93 e5          	: ldr r7, [r3]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000344. Hit: 1. Lifespan: 2. Instruction: 00000043. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 93 e5          	: ldr fp, [r3]
 >> Lifespan countdown: 2. (0x80000348)
 >> Lifespan countdown: 1. (0x8000034c)
 >> Reverting instruction          :  00 30 93 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 0. Instruction: 00000046. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000350
 >> Updated                     : 0x0000000080000354
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 1b e5          	: ldr r3, [fp, #-9]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 1b e5          	: ldr r3, [fp, #-0xa]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 1b e5          	: ldr r3, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 1b e5          	: ldr r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 1b e5          	: ldr r3, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 1b e5          	: ldr r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 1b e5          	: ldr r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 1b e5          	: ldr r3, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 1b e5          	: ldr r3, [fp, #-0x108]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 1b e5          	: ldr r3, [fp, #-0x208]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 1b e5          	: ldr r3, [fp, #-0x408]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 1b e5          	: ldr r3, [fp, #-0x808]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 1b e5          	: ldr r2, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 1b e5          	: ldr r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 1b e5          	: ldr r7, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000350. Hit: 1. Lifespan: 2. Instruction: 00000046. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 1b e5          	: ldr fp, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000354)
 >> Lifespan countdown: 1. (0x80000358)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 0. Instruction: 00000049. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000035c
 >> Updated                     : 0x0000000080000360
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 1b e5          	: ldr r3, [fp, #-9]
 >> Lifespan countdown: 2. (0x80000360)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x2!! Count 51 Skipping to end.
 >> Run result: Fault errored program - last instruction: 50.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 1b e5          	: ldr r3, [fp, #-0xa]
 >> Lifespan countdown: 2. (0x80000360)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x2!! Count 51 Skipping to end.
 >> Run result: Fault errored program - last instruction: 50.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 1b e5          	: ldr r3, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000360)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x2!! Count 51 Skipping to end.
 >> Run result: Fault errored program - last instruction: 50.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 1b e5          	: ldr r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000360)
 >> Lifespan countdown: 1. (0x80000364)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 1b e5          	: ldr r3, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000360)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x2!! Count 51 Skipping to end.
 >> Run result: Fault errored program - last instruction: 50.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 1b e5          	: ldr r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000360)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x2!! Count 51 Skipping to end.
 >> Run result: Fault errored program - last instruction: 50.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 1b e5          	: ldr r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000360)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x2!! Count 51 Skipping to end.
 >> Run result: Fault errored program - last instruction: 50.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 1b e5          	: ldr r3, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000360)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x2!! Count 51 Skipping to end.
 >> Run result: Fault errored program - last instruction: 50.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 1b e5          	: ldr r3, [fp, #-0x108]
 >> Lifespan countdown: 2. (0x80000360)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x2!! Count 51 Skipping to end.
 >> Run result: Fault errored program - last instruction: 50.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 1b e5          	: ldr r3, [fp, #-0x208]
 >> Lifespan countdown: 2. (0x80000360)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x2!! Count 51 Skipping to end.
 >> Run result: Fault errored program - last instruction: 50.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 1b e5          	: ldr r3, [fp, #-0x408]
 >> Lifespan countdown: 2. (0x80000360)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x2!! Count 51 Skipping to end.
 >> Run result: Fault errored program - last instruction: 50.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 1b e5          	: ldr r3, [fp, #-0x808]
 >> Lifespan countdown: 2. (0x80000360)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x2!! Count 51 Skipping to end.
 >> Run result: Fault errored program - last instruction: 50.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 1b e5          	: ldr r2, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000360)
 >> Lifespan countdown: 1. (0x80000364)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 1b e5          	: ldr r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000360)
 >> Lifespan countdown: 1. (0x80000364)
 >> Reverting instruction          :  08 30 1b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 1b e5          	: ldr r7, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000360)
 >> Lifespan countdown: 1. (0x80000364)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000035c. Hit: 1. Lifespan: 2. Instruction: 00000049. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 1b e5          	: ldr fp, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000360)
 >> Lifespan countdown: 1. (0x80000364)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000011fffff8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 51.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 0. Instruction: 00000051. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000364
 >> Updated                     : 0x0000000080000368
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 1b e5          	: ldr r3, [fp, #-9]
 >> Lifespan countdown: 2. (0x80000368)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 52.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 1b e5          	: ldr r3, [fp, #-0xa]
 >> Lifespan countdown: 2. (0x80000368)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 52.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 1b e5          	: ldr r3, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000368)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 52.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 1b e5          	: ldr r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000368)
 >> Lifespan countdown: 1. (0x8000036c)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 1b e5          	: ldr r3, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000368)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 52.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 1b e5          	: ldr r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000368)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 52.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 1b e5          	: ldr r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000368)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 52.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 1b e5          	: ldr r3, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000368)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 52.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 1b e5          	: ldr r3, [fp, #-0x108]
 >> Lifespan countdown: 2. (0x80000368)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 52.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 1b e5          	: ldr r3, [fp, #-0x208]
 >> Lifespan countdown: 2. (0x80000368)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 52.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 1b e5          	: ldr r3, [fp, #-0x408]
 >> Lifespan countdown: 2. (0x80000368)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 52.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 1b e5          	: ldr r3, [fp, #-0x808]
 >> Lifespan countdown: 2. (0x80000368)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 52.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 1b e5          	: ldr r2, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000368)
 >> Lifespan countdown: 1. (0x8000036c)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 1b e5          	: ldr r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000368)
 >> Lifespan countdown: 1. (0x8000036c)
 >> Reverting instruction          :  08 30 1b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 1b e5          	: ldr r7, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000368)
 >> Lifespan countdown: 1. (0x8000036c)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000364. Hit: 1. Lifespan: 2. Instruction: 00000051. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 1b e5          	: ldr fp, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000368)
 >> Lifespan countdown: 1. (0x8000036c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000011fffff8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 55.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 0. Instruction: 00000057. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000037c
 >> Updated                     : 0x0000000080000380
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 00 13 e3          	: tst r3, #0
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 00 13 e3          	: tst r3, #3
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x800003a0)
 >> Reverting instruction          :  01 00 13 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 00 13 e3          	: tst r3, #5
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 00 13 e3          	: tst r3, #9
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 00 13 e3          	: tst r3, #0x11
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 00 13 e3          	: tst r3, #0x21
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 00 13 e3          	: tst r3, #0x41
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 00 13 e3          	: tst r3, #0x81
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 01 13 e3          	: tst r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 02 13 e3          	: tst r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 04 13 e3          	: tst r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 08 13 e3          	: tst r3, #0x10000
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 10 13 e3          	: tst r3, #1
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 20 13 e3          	: tst r3, #1
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 40 13 e3          	: tst r3, #1
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000037c. Hit: 1. Lifespan: 2. Instruction: 00000057. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 13 e3          	: tst r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 80 13 e3          	: tst r3, #1
 >> Lifespan countdown: 2. (0x80000380)
 >> Lifespan countdown: 1. (0x80000384)
 >> Reverting instruction          :  01 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 0. Instruction: 00000068. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800003d4
 >> Updated                     : 0x00000000800003d8
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  d2 38 e0 17          	: ubfxne r3, r2, #0x11, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  d1 38 e0 17          	: ubfxne r3, r1, #0x11, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  d7 38 e0 17          	: ubfxne r3, r7, #0x11, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  db 38 e0 17          	: ubfxne r3, fp, #0x11, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  c3 38 e0 17          	: strbne r3, [r0, r3, asr #17]!
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2, value: 0x0!! Count 69 Skipping to end.
 >> Run result: Fault errored program - last instruction: 68.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  f3 38 e0 17          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 68.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  93 38 e0 17          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 68.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  53 38 e0 17          	: ubfxne r3, r3, #0x10, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  d3 39 e0 17          	: ubfxne r3, r3, #0x13, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  d3 3a e0 17          	: ubfxne r3, r3, #0x15, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  d3 3c e0 17          	: ubfxne r3, r3, #0x19, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  d3 30 e0 17          	: ubfxne r3, r3, #1, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  d3 28 e0 17          	: ubfxne r2, r3, #0x11, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  d3 18 e0 17          	: ubfxne r1, r3, #0x11, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  d3 78 e0 17          	: ubfxne r7, r3, #0x11, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d4. Hit: 1. Lifespan: 2. Instruction: 00000068. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d3 38 e0 17          	: ubfxne r3, r3, #0x11, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  d3 b8 e0 17          	: ubfxne fp, r3, #0x11, #1
 >> Lifespan countdown: 2. (0x800003d8)
 >> Lifespan countdown: 1. (0x800003dc)
 >> Reverting instruction          :  d3 38 e0 17 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff9, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 0. Instruction: 00000077. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001298
 >> Updated                     : 0x000000008000129c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x1
 >> Updated instruction            :  9d 40 4b e2          	: sub r4, fp, #0x9d
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x2
 >> Updated instruction            :  9e 40 4b e2          	: sub r4, fp, #0x9e
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x4
 >> Updated instruction            :  98 40 4b e2          	: sub r4, fp, #0x98
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x8
 >> Updated instruction            :  94 40 4b e2          	: sub r4, fp, #0x94
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x10
 >> Updated instruction            :  8c 40 4b e2          	: sub r4, fp, #0x8c
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x80!! Count 565 Skipping to end.
 >> Run result: Fault errored program - last instruction: 564.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x20
 >> Updated instruction            :  bc 40 4b e2          	: sub r4, fp, #0xbc
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x40
 >> Updated instruction            :  dc 40 4b e2          	: sub r4, fp, #0xdc
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000103253b6, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x80
 >> Updated instruction            :  1c 40 4b e2          	: sub r4, fp, #0x1c
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 186 Skipping to end.
 >> Run result: Fault errored program - last instruction: 185.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x100
 >> Updated instruction            :  9c 41 4b e2          	: sub r4, fp, #156, #2
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 258 Skipping to end.
 >> Run result: Fault errored program - last instruction: 257.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x200
 >> Updated instruction            :  9c 42 4b e2          	: sub r4, fp, #156, #4
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc010fffb, value: 0x67452301!! Count 102 Skipping to end.
 >> Run result: Fault errored program - last instruction: 101.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x400
 >> Updated instruction            :  9c 44 4b e2          	: sub r4, fp, #156, #8
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe4110004, value: 0x67452301!! Count 102 Skipping to end.
 >> Run result: Fault errored program - last instruction: 101.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x800
 >> Updated instruction            :  9c 48 4b e2          	: sub r4, fp, #156, #16
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7f750004, value: 0x67452301!! Count 102 Skipping to end.
 >> Run result: Fault errored program - last instruction: 101.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x1000
 >> Updated instruction            :  9c 50 4b e2          	: sub r5, fp, #0x9c
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x2000
 >> Updated instruction            :  9c 60 4b e2          	: sub r6, fp, #0x9c
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x4000
 >> Updated instruction            :  9c 00 4b e2          	: sub r0, fp, #0x9c
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001298. Hit: 1. Lifespan: 2. Instruction: 00000077. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9c 40 4b e2          	: sub r4, fp, #0x9c
 >> Mask                           :  0x8000
 >> Updated instruction            :  9c c0 4b e2          	: sub ip, fp, #0x9c
 >> Lifespan countdown: 2. (0x8000129c)
 >> Lifespan countdown: 1. (0x800012a0)
 >> Reverting instruction          :  9c 40 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 0. Instruction: 00000080. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012a8
 >> Updated                     : 0x00000000800012ac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x1
 >> Updated instruction            :  68 fb ff eb          	: bl #0xfffffda8
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x2
 >> Updated instruction            :  6b fb ff eb          	: bl #0xfffffdb4
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x4
 >> Updated instruction            :  6d fb ff eb          	: bl #0xfffffdbc
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x8
 >> Updated instruction            :  61 fb ff eb          	: bl #0xfffffd8c
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x10
 >> Updated instruction            :  79 fb ff eb          	: bl #0xfffffdec
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x20
 >> Updated instruction            :  49 fb ff eb          	: bl #0xfffffd2c
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x40
 >> Updated instruction            :  29 fb ff eb          	: bl #0xfffffcac
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x80
 >> Updated instruction            :  e9 fb ff eb          	: bl #0xffffffac
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x100
 >> Updated instruction            :  69 fa ff eb          	: bl #0xfffff9ac
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x200
 >> Updated instruction            :  69 f9 ff eb          	: bl #0xfffff5ac
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x400
 >> Updated instruction            :  69 ff ff eb          	: bl #0xdac
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x800
 >> Updated instruction            :  69 f3 ff eb          	: bl #0xffffddac
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x1000
 >> Updated instruction            :  69 eb ff eb          	: bl #0xffffbdac
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x2000
 >> Updated instruction            :  69 db ff eb          	: bl #0xffff7dac
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x4000
 >> Updated instruction            :  69 bb ff eb          	: bl #0xfffefdac
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012a4. Hit: 1. Lifespan: 2. Instruction: 00000080. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  69 fb ff eb          	: bl #0xfffffdac
 >> Mask                           :  0x8000
 >> Updated instruction            :  69 7b ff eb          	: bl #0xfffdfdac
 >> Lifespan countdown: 2. (0x800012a8)
 >> Lifespan countdown: 1. (0x800012ac)
 >> Reverting instruction          :  69 fb ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 0. Instruction: 00000089. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000125c
 >> Updated                     : 0x0000000080001260
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 81 e5          	: str r3, [r1, #1]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 81 e5          	: str r3, [r1, #2]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 81 e5          	: str r3, [r1, #4]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 81 e5          	: str r3, [r1, #8]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 81 e5          	: str r3, [r1, #0x10]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 81 e5          	: str r3, [r1, #0x20]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 81 e5          	: str r3, [r1, #0x40]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 81 e5          	: str r3, [r1, #0x80]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 81 e5          	: str r3, [r1, #0x100]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011003c, value: 0x10!! Count 90 Skipping to end.
 >> Run result: Fault errored program - last instruction: 89.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 81 e5          	: str r3, [r1, #0x200]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011013c, value: 0x10!! Count 90 Skipping to end.
 >> Run result: Fault errored program - last instruction: 89.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 81 e5          	: str r3, [r1, #0x400]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011033c, value: 0x10!! Count 90 Skipping to end.
 >> Run result: Fault errored program - last instruction: 89.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 81 e5          	: str r3, [r1, #0x800]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011073c, value: 0x10!! Count 90 Skipping to end.
 >> Run result: Fault errored program - last instruction: 89.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 81 e5          	: str r2, [r1]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 81 e5          	: str r1, [r1]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 81 e5          	: str r7, [r1]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000125c. Hit: 1. Lifespan: 2. Instruction: 00000089. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 81 e5          	: str fp, [r1]
 >> Lifespan countdown: 2. (0x80001260)
 >> Lifespan countdown: 1. (0x80001264)
 >> Reverting instruction          :  00 30 81 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 0. Instruction: 00000101. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000470
 >> Updated                     : 0x0000000080000474
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x1
 >> Updated instruction            :  f9 20 c0 e1          	: strd r2, r3, [r0, #9]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x2
 >> Updated instruction            :  fa 20 c0 e1          	: strd r2, r3, [r0, #0xa]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x4
 >> Updated instruction            :  fc 20 c0 e1          	: strd r2, r3, [r0, #0xc]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x8
 >> Updated instruction            :  f0 20 c0 e1          	: strd r2, r3, [r0]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x10
 >> Updated instruction            :  e8 20 c0 e1          	: bic r2, r0, r8, ror #1
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x20
 >> Updated instruction            :  d8 20 c0 e1          	: ldrd r2, r3, [r0, #8]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x40
 >> Updated instruction            :  b8 20 c0 e1          	: strh r2, [r0, #8]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x80
 >> Updated instruction            :  78 20 c0 e1          	: bic r2, r0, r8, ror r0
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x100
 >> Updated instruction            :  f8 21 c0 e1          	: strd r2, r3, [r0, #0x18]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x200
 >> Updated instruction            :  f8 22 c0 e1          	: strd r2, r3, [r0, #0x28]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x400
 >> Updated instruction            :  f8 24 c0 e1          	: strd r2, r3, [r0, #0x48]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x800
 >> Updated instruction            :  f8 28 c0 e1          	: strd r2, r3, [r0, #0x88]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  f8 30 c0 e1          	: strd r3, r4, [r0, #8]
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 101.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  f8 00 c0 e1          	: strd r0, r1, [r0, #8]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  f8 60 c0 e1          	: strd r6, r7, [r0, #8]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000470. Hit: 1. Lifespan: 2. Instruction: 00000101. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f8 20 c0 e1          	: strd r2, r3, [r0, #8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  f8 a0 c0 e1          	: strd sl, fp, [r0, #8]
 >> Lifespan countdown: 2. (0x80000474)
 >> Lifespan countdown: 1. (0x80000478)
 >> Reverting instruction          :  f8 20 c0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 0. Instruction: 00000110. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000494
 >> Updated                     : 0x0000000080000498
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 d0 8b e2          	: add sp, fp, #1
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000080103f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 d0 8b e2          	: add sp, fp, #2
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000007f50, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 d0 8b e2          	: add sp, fp, #4
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000ffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 d0 8b e2          	: add sp, fp, #8
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff50, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 d0 8b e2          	: add sp, fp, #0x10
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 d0 8b e2          	: add sp, fp, #0x20
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 d0 8b e2          	: add sp, fp, #0x40
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000103253b6, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 d0 8b e2          	: add sp, fp, #0x80
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 d1 8b e2          	: add sp, fp, #0, #2
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 d2 8b e2          	: add sp, fp, #0, #4
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 d4 8b e2          	: add sp, fp, #0, #8
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 d8 8b e2          	: add sp, fp, #0, #16
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 c0 8b e2          	: add ip, fp, #0
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 f0 8b e2          	: add pc, fp, #0
 >> Lifespan countdown: 2. (0x8010ff34)
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 111.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 90 8b e2          	: add sb, fp, #0
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000494. Hit: 1. Lifespan: 2. Instruction: 00000110. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 50 8b e2          	: add r5, fp, #0
 >> Lifespan countdown: 2. (0x80000498)
 >> Lifespan countdown: 1. (0x8000049c)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x2578ea84, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 0. Instruction: 00000114. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012c8
 >> Updated                     : 0x00000000800012cc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x1
 >> Updated instruction            :  33 14 a0 e3          	: mov r1, #0x33000000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000033000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x2
 >> Updated instruction            :  30 14 a0 e3          	: mov r1, #48, #8
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000030000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x4
 >> Updated instruction            :  36 14 a0 e3          	: mov r1, #0x36000000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000036000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x8
 >> Updated instruction            :  3a 14 a0 e3          	: mov r1, #0x3a000000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000003a000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x10
 >> Updated instruction            :  22 14 a0 e3          	: mov r1, #0x22000000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000022000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x20
 >> Updated instruction            :  12 14 a0 e3          	: mov r1, #0x12000000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x40
 >> Updated instruction            :  72 14 a0 e3          	: mov r1, #0x72000000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000072000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x80
 >> Updated instruction            :  b2 14 a0 e3          	: mov r1, #0xb2000000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000b2000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x100
 >> Updated instruction            :  32 15 a0 e3          	: mov r1, #0xc800000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000c800000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x200
 >> Updated instruction            :  32 16 a0 e3          	: mov r1, #0x3200000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000003200000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x400
 >> Updated instruction            :  32 10 a0 e3          	: mov r1, #0x32
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000032, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 164.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x800
 >> Updated instruction            :  32 1c a0 e3          	: mov r1, #0x3200
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000003200, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x1000
 >> Updated instruction            :  32 04 a0 e3          	: mov r0, #0x32000000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x2000
 >> Updated instruction            :  32 34 a0 e3          	: mov r3, #0x32000000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x4000
 >> Updated instruction            :  32 54 a0 e3          	: mov r5, #0x32000000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012c8. Hit: 1. Lifespan: 2. Instruction: 00000114. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 14 a0 e3          	: mov r1, #0x32000000
 >> Mask                           :  0x8000
 >> Updated instruction            :  32 94 a0 e3          	: mov sb, #0x32000000
 >> Lifespan countdown: 2. (0x800012cc)
 >> Lifespan countdown: 1. (0x80001174)
 >> Reverting instruction          :  32 14 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 0. Instruction: 00000120. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001184
 >> Updated                     : 0x0000000080001188
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x1
 >> Updated instruction            :  05 30 94 e5          	: ldr r3, [r4, #5]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x2
 >> Updated instruction            :  06 30 94 e5          	: ldr r3, [r4, #6]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x4
 >> Updated instruction            :  00 30 94 e5          	: ldr r3, [r4]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x10
 >> Updated instruction            :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x20
 >> Updated instruction            :  24 30 94 e5          	: ldr r3, [r4, #0x24]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x40
 >> Updated instruction            :  44 30 94 e5          	: ldr r3, [r4, #0x44]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x80
 >> Updated instruction            :  84 30 94 e5          	: ldr r3, [r4, #0x84]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x100
 >> Updated instruction            :  04 31 94 e5          	: ldr r3, [r4, #0x104]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110064, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x200
 >> Updated instruction            :  04 32 94 e5          	: ldr r3, [r4, #0x204]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110164, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x400
 >> Updated instruction            :  04 34 94 e5          	: ldr r3, [r4, #0x404]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110364, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x800
 >> Updated instruction            :  04 38 94 e5          	: ldr r3, [r4, #0x804]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110764, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 20 94 e5          	: ldr r2, [r4, #4]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 10 94 e5          	: ldr r1, [r4, #4]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 70 94 e5          	: ldr r7, [r4, #4]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001184. Hit: 1. Lifespan: 2. Instruction: 00000120. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 b0 94 e5          	: ldr fp, [r4, #4]
 >> Lifespan countdown: 2. (0x80001188)
 >> Lifespan countdown: 1. (0x8000118c)
 >> Reverting instruction          :  04 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 0. Instruction: 00000130. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800011ac
 >> Updated                     : 0x00000000800011b0
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x1
 >> Updated instruction            :  19 70 84 02          	: addeq r7, r4, #0x19
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x2
 >> Updated instruction            :  1a 70 84 02          	: addeq r7, r4, #0x1a
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x4
 >> Updated instruction            :  1c 70 84 02          	: addeq r7, r4, #0x1c
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x8
 >> Updated instruction            :  10 70 84 02          	: addeq r7, r4, #0x10
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x10
 >> Updated instruction            :  08 70 84 02          	: addeq r7, r4, #8
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x20
 >> Updated instruction            :  38 70 84 02          	: addeq r7, r4, #0x38
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x40
 >> Updated instruction            :  58 70 84 02          	: addeq r7, r4, #0x58
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x80
 >> Updated instruction            :  98 70 84 02          	: addeq r7, r4, #0x98
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 186 Skipping to end.
 >> Run result: Fault errored program - last instruction: 185.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x100
 >> Updated instruction            :  18 71 84 02          	: addeq r7, r4, #24, #2
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x200
 >> Updated instruction            :  18 72 84 02          	: addeq r7, r4, #24, #4
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff61, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x400
 >> Updated instruction            :  18 74 84 02          	: addeq r7, r4, #24, #8
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9810ff60, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x800
 >> Updated instruction            :  18 78 84 02          	: addeq r7, r4, #24, #16
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8028ff60, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x1000
 >> Updated instruction            :  18 60 84 02          	: addeq r6, r4, #0x18
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x2000
 >> Updated instruction            :  18 50 84 02          	: addeq r5, r4, #0x18
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x4000
 >> Updated instruction            :  18 30 84 02          	: addeq r3, r4, #0x18
 >> Lifespan countdown: 2. (0x800011b0)
 >> Lifespan countdown: 1. (0x800011b4)
 >> Reverting instruction          :  18 70 84 02 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011ac. Hit: 1. Lifespan: 2. Instruction: 00000130. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 70 84 02          	: addeq r7, r4, #0x18
 >> Mask                           :  0x8000
 >> Updated instruction            :  18 f0 84 02          	: addeq pc, r4, #0x18
 >> Lifespan countdown: 2. (0x8010ff78)
 >> Lifespan countdown: 1. (0x8010ff7c)
 >> Reverting instruction          :  18 70 84 02 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 164.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 0. Instruction: 00000134. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800011fc
 >> Updated                     : 0x0000000080001200
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x1
 >> Updated instruction            :  04 00 00 8a          	: bhi #0x1018
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x2
 >> Updated instruction            :  07 00 00 8a          	: bhi #0x1024
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x4
 >> Updated instruction            :  01 00 00 8a          	: bhi #0x100c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 00 00 8a          	: bhi #0x103c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x10
 >> Updated instruction            :  15 00 00 8a          	: bhi #0x105c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x20
 >> Updated instruction            :  25 00 00 8a          	: bhi #0x109c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x40
 >> Updated instruction            :  45 00 00 8a          	: bhi #0x111c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x80
 >> Updated instruction            :  85 00 00 8a          	: bhi #0x121c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x100
 >> Updated instruction            :  05 01 00 8a          	: bhi #0x141c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x200
 >> Updated instruction            :  05 02 00 8a          	: bhi #0x181c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x400
 >> Updated instruction            :  05 04 00 8a          	: bhi #0x201c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x800
 >> Updated instruction            :  05 08 00 8a          	: bhi #0x301c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 10 00 8a          	: bhi #0x501c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 20 00 8a          	: bhi #0x901c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 40 00 8a          	: bhi #0x1101c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011fc. Hit: 1. Lifespan: 2. Instruction: 00000134. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 8a          	: bhi #0x101c
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 80 00 8a          	: bhi #0x2101c
 >> Lifespan countdown: 2. (0x80001200)
 >> Lifespan countdown: 1. (0x80001204)
 >> Reverting instruction          :  05 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 0. Instruction: 00000138. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000120c
 >> Updated                     : 0x0000000080001210
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x1
 >> Updated instruction            :  1d d0 4b e2          	: sub sp, fp, #0x1d
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x12d080, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x2
 >> Updated instruction            :  1e d0 4b e2          	: sub sp, fp, #0x1e
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x12d08010, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x4
 >> Updated instruction            :  18 d0 4b e2          	: sub sp, fp, #0x18
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x8
 >> Updated instruction            :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x10, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x10
 >> Updated instruction            :  0c d0 4b e2          	: sub sp, fp, #0xc
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x20
 >> Updated instruction            :  3c d0 4b e2          	: sub sp, fp, #0x3c
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 208.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x40
 >> Updated instruction            :  5c d0 4b e2          	: sub sp, fp, #0x5c
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x80
 >> Updated instruction            :  9c d0 4b e2          	: sub sp, fp, #0x9c
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x100
 >> Updated instruction            :  1c d1 4b e2          	: sub sp, fp, #28, #2
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x200
 >> Updated instruction            :  1c d2 4b e2          	: sub sp, fp, #28, #4
 >> Lifespan countdown: 2. (0x80001210)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c010ff33, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 139.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x400
 >> Updated instruction            :  1c d4 4b e2          	: sub sp, fp, #28, #8
 >> Lifespan countdown: 2. (0x80001210)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006410ff34, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 139.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x800
 >> Updated instruction            :  1c d8 4b e2          	: sub sp, fp, #28, #16
 >> Lifespan countdown: 2. (0x80001210)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007ff4ff34, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 139.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x1000
 >> Updated instruction            :  1c c0 4b e2          	: sub ip, fp, #0x1c
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x2000
 >> Updated instruction            :  1c f0 4b e2          	: sub pc, fp, #0x1c
 >> Lifespan countdown: 2. (0x8010ff18)
 >> Lifespan countdown: 1. (0x8010ff1c)
 >> Reverting instruction          :  1c d0 4b e2 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x4000
 >> Updated instruction            :  1c 90 4b e2          	: sub sb, fp, #0x1c
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000120c. Hit: 1. Lifespan: 2. Instruction: 00000138. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Mask                           :  0x8000
 >> Updated instruction            :  1c 50 4b e2          	: sub r5, fp, #0x1c
 >> Lifespan countdown: 2. (0x80001210)
 >> Lifespan countdown: 1. (0x80001214)
 >> Reverting instruction          :  1c d0 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 0. Instruction: 00000141. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000170
 >> Updated                     : 0x0000000080000174
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 52 e3          	: cmp r2, #1
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 52 e3          	: cmp r2, #2
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 52 e3          	: cmp r2, #4
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 52 e3          	: cmp r2, #8
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 52 e3          	: cmp r2, #0x10
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x800012d0)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 52 e3          	: cmp r2, #0x20
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 52 e3          	: cmp r2, #0x40
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 52 e3          	: cmp r2, #0x80
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 52 e3          	: cmp r2, #0, #2
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 52 e3          	: cmp r2, #0, #4
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 52 e3          	: cmp r2, #0, #8
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 52 e3          	: cmp r2, #0, #16
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 52 e3          	: cmp r2, #0
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 52 e3          	: cmp r2, #0
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 52 e3          	: cmp r2, #0
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000170. Hit: 1. Lifespan: 2. Instruction: 00000141. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 52 e3          	: cmp r2, #0
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 0. Instruction: 00000148. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000018c
 >> Updated                     : 0x0000000080000190
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 a0 33          	: movlo r3, #1
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 a0 33          	: movlo r3, #2
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 a0 33          	: movlo r3, #4
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 a0 33          	: movlo r3, #8
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 a0 33          	: movlo r3, #0x10
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 a0 33          	: movlo r3, #0x20
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 a0 33          	: movlo r3, #0x40
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 a0 33          	: movlo r3, #0x80
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 a0 33          	: movlo r3, #0, #2
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 a0 33          	: movlo r3, #0, #4
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 a0 33          	: movlo r3, #0, #8
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 a0 33          	: movlo r3, #0, #16
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 a0 33          	: movlo r2, #0
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 a0 33          	: movlo r1, #0
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 a0 33          	: movlo r7, #0
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000018c. Hit: 1. Lifespan: 2. Instruction: 00000148. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 33          	: movlo r3, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 a0 33          	: movlo fp, #0
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  00 30 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 0. Instruction: 00000156. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800001ac
 >> Updated                     : 0x00000000800001b0
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x1
 >> Updated instruction            :  71 48 2d e9          	: push {r0, r4, r5, r6, fp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x2
 >> Updated instruction            :  72 48 2d e9          	: push {r1, r4, r5, r6, fp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x4
 >> Updated instruction            :  74 48 2d e9          	: push {r2, r4, r5, r6, fp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x8
 >> Updated instruction            :  78 48 2d e9          	: push {r3, r4, r5, r6, fp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x10
 >> Updated instruction            :  60 48 2d e9          	: push {r5, r6, fp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x20
 >> Updated instruction            :  50 48 2d e9          	: push {r4, r6, fp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x40
 >> Updated instruction            :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x80
 >> Updated instruction            :  f0 48 2d e9          	: push {r4, r5, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x100
 >> Updated instruction            :  70 49 2d e9          	: push {r4, r5, r6, r8, fp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x200
 >> Updated instruction            :  70 4a 2d e9          	: push {r4, r5, r6, sb, fp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x400
 >> Updated instruction            :  70 4c 2d e9          	: push {r4, r5, r6, sl, fp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x800
 >> Updated instruction            :  70 40 2d e9          	: push {r4, r5, r6, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x1000
 >> Updated instruction            :  70 58 2d e9          	: push {r4, r5, r6, fp, ip, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x33266278, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x2000
 >> Updated instruction            :  70 68 2d e9          	: push {r4, r5, r6, fp, sp, lr}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x4000
 >> Updated instruction            :  70 08 2d e9          	: push {r4, r5, r6, fp}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001ac. Hit: 1. Lifespan: 2. Instruction: 00000156. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Mask                           :  0x8000
 >> Updated instruction            :  70 c8 2d e9          	: push {r4, r5, r6, fp, lr, pc}
 >> Lifespan countdown: 2. (0x800001b0)
 >> Lifespan countdown: 1. (0x800001b4)
 >> Reverting instruction          :  70 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 0. Instruction: 00000160. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800001bc
 >> Updated                     : 0x00000000800001c0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 00 5e e1          	: cmp lr, sp
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x80000258)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 00 5e e1          	: cmp lr, lr
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x800001c4)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 00 5e e1          	: cmp lr, r8
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x800001c4)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 00 5e e1          	: cmp lr, r4
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x80000258)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 00 5e e1          	: cmp lr, ip, lsl r0
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x800001c4)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 00 5e e1          	: cmp lr, ip, lsr #32
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x800001c4)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 00 5e e1          	: cmp lr, ip, asr #32
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x800001c4)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 00 5e e1          	: cmp lr, ip, lsl #1
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x800001c4)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 01 5e e1          	: cmp lr, ip, lsl #2
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x800001c4)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 02 5e e1          	: cmp lr, ip, lsl #4
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x80000258)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 04 5e e1          	: cmp lr, ip, lsl #8
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x80000258)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 08 5e e1          	: cmp lr, ip, lsl #16
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x80000258)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 10 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x800001c4)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 20 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x800001c4)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 40 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x800001c4)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001bc. Hit: 1. Lifespan: 2. Instruction: 00000160. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 80 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800001c0)
 >> Lifespan countdown: 1. (0x800001c4)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 0. Instruction: 00000168. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000021c
 >> Updated                     : 0x0000000080000220
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 10 81 e0          	: add r1, r1, r2
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 10 81 e0          	: add r1, r1, r1
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000064000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 10 81 e0          	: add r1, r1, r7
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 10 81 e0          	: add r1, r1, fp
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000b210ff34, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 10 81 e0          	: add r1, r1, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 10 81 e0          	: add r1, r1, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 10 81 e0          	: add r1, r1, r3, asr #32
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 10 81 e0          	: add r1, r1, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 11 81 e0          	: add r1, r1, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 12 81 e0          	: add r1, r1, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 14 81 e0          	: add r1, r1, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 18 81 e0          	: add r1, r1, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 00 81 e0          	: add r0, r1, r3
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 30 81 e0          	: add r3, r1, r3
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xb210ff78, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 50 81 e0          	: add r5, r1, r3
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000021c. Hit: 1. Lifespan: 2. Instruction: 00000168. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 81 e0          	: add r1, r1, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 90 81 e0          	: add sb, r1, r3
 >> Lifespan countdown: 2. (0x80000220)
 >> Lifespan countdown: 1. (0x80000224)
 >> Reverting instruction          :  03 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 0. Instruction: 00000173. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000230
 >> Updated                     : 0x0000000080000234
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 91 e4          	: ldr ip, [r1], #5
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 91 e4          	: ldr ip, [r1], #6
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 91 e4          	: ldr ip, [r1], #0
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 91 e4          	: ldr ip, [r1], #0xc
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 91 e4          	: ldr ip, [r1], #0x14
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 91 e4          	: ldr ip, [r1], #0x24
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 91 e4          	: ldr ip, [r1], #0x44
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 91 e4          	: ldr ip, [r1], #0x84
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 91 e4          	: ldr ip, [r1], #0x104
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 91 e4          	: ldr ip, [r1], #0x204
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 91 e4          	: ldr ip, [r1], #0x404
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 91 e4          	: ldr ip, [r1], #0x804
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 91 e4          	: ldr sp, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ed8790aa, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 91 e4          	: ldr lr, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 91 e4          	: ldr r8, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 1. Lifespan: 2. Instruction: 00000173. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 91 e4          	: ldr r4, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 0. Instruction: 00000180. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000238
 >> Updated                     : 0x000000008000023c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110004, value: 0x0!! Count 191 Skipping to end.
 >> Run result: Fault errored program - last instruction: 190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 186 Skipping to end.
 >> Run result: Fault errored program - last instruction: 185.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110080, value: 0x0!! Count 186 Skipping to end.
 >> Run result: Fault errored program - last instruction: 185.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110180, value: 0x0!! Count 186 Skipping to end.
 >> Run result: Fault errored program - last instruction: 185.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110380, value: 0x0!! Count 186 Skipping to end.
 >> Run result: Fault errored program - last instruction: 185.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110780, value: 0x0!! Count 186 Skipping to end.
 >> Run result: Fault errored program - last instruction: 185.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 2. Lifespan: 2. Instruction: 00000180. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 0. Instruction: 00000188. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000230
 >> Updated                     : 0x0000000080000234
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 91 e4          	: ldr ip, [r1], #5
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 91 e4          	: ldr ip, [r1], #6
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 91 e4          	: ldr ip, [r1], #0
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 91 e4          	: ldr ip, [r1], #0xc
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 91 e4          	: ldr ip, [r1], #0x14
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 91 e4          	: ldr ip, [r1], #0x24
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 91 e4          	: ldr ip, [r1], #0x44
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 91 e4          	: ldr ip, [r1], #0x84
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 91 e4          	: ldr ip, [r1], #0x104
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 91 e4          	: ldr ip, [r1], #0x204
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 91 e4          	: ldr ip, [r1], #0x404
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 91 e4          	: ldr ip, [r1], #0x804
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 91 e4          	: ldr sp, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 91 e4          	: ldr lr, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 91 e4          	: ldr r8, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 4. Lifespan: 2. Instruction: 00000188. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 91 e4          	: ldr r4, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 0. Instruction: 00000195. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000024c
 >> Updated                     : 0x0000000080000250
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 10 85 e0          	: add r1, r5, r2
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 10 85 e0          	: add r1, r5, r1
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 10 85 e0          	: add r1, r5, r7
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 10 85 e0          	: add r1, r5, fp
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 10 85 e0          	: add r1, r5, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 10 85 e0          	: add r1, r5, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 10 85 e0          	: add r1, r5, r3, asr #32
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 10 85 e0          	: add r1, r5, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 11 85 e0          	: add r1, r5, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 12 85 e0          	: add r1, r5, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 14 85 e0          	: add r1, r5, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 18 85 e0          	: add r1, r5, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 00 85 e0          	: add r0, r5, r3
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 30 85 e0          	: add r3, r5, r3
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 50 85 e0          	: add r5, r5, r3
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000024c. Hit: 1. Lifespan: 2. Instruction: 00000195. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 10 85 e0          	: add r1, r5, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 90 85 e0          	: add sb, r5, r3
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  03 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 0. Instruction: 00000203. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001000
 >> Updated                     : 0x0000000080001004
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 91 e5          	: ldr r0, [r1, #1]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 91 e5          	: ldr r0, [r1, #2]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 91 e5          	: ldr r0, [r1, #4]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 91 e5          	: ldr r0, [r1, #8]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 91 e5          	: ldr r0, [r1, #0x10]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 91 e5          	: ldr r0, [r1, #0x20]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 91 e5          	: ldr r0, [r1, #0x40]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 91 e5          	: ldr r0, [r1, #0x80]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 91 e5          	: ldr r0, [r1, #0x100]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110060, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 91 e5          	: ldr r0, [r1, #0x200]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110160, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 91 e5          	: ldr r0, [r1, #0x400]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110360, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 91 e5          	: ldr r0, [r1, #0x800]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110760, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 91 e5          	: ldr r1, [r1]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x38, value: 0x80!! Count 216 Skipping to end.
 >> Run result: Fault errored program - last instruction: 215.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 91 e5          	: ldr r2, [r1]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 91 e5          	: ldr r4, [r1]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001000. Hit: 1. Lifespan: 2. Instruction: 00000203. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 91 e5          	: ldr r0, [r1]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 91 e5          	: ldr r8, [r1]
 >> Lifespan countdown: 2. (0x80001004)
 >> Lifespan countdown: 1. (0x80001008)
 >> Reverting instruction          :  00 00 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 0. Instruction: 00000208. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001014
 >> Updated                     : 0x0000000080001018
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x1
 >> Updated instruction            :  15 b0 8d e2          	: add fp, sp, #0x15
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x800012, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x2
 >> Updated instruction            :  16 b0 8d e2          	: add fp, sp, #0x16
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x8000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x4
 >> Updated instruction            :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x8
 >> Updated instruction            :  1c b0 8d e2          	: add fp, sp, #0x1c
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x10, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x10
 >> Updated instruction            :  04 b0 8d e2          	: add fp, sp, #4
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x20
 >> Updated instruction            :  34 b0 8d e2          	: add fp, sp, #0x34
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0xc78cb6c6, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x40
 >> Updated instruction            :  54 b0 8d e2          	: add fp, sp, #0x54
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x80
 >> Updated instruction            :  94 b0 8d e2          	: add fp, sp, #0x94
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x100
 >> Updated instruction            :  14 b1 8d e2          	: add fp, sp, #20, #2
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x408010fe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x200
 >> Updated instruction            :  14 b2 8d e2          	: add fp, sp, #20, #4
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c010ff0d, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x400
 >> Updated instruction            :  14 b4 8d e2          	: add fp, sp, #20, #8
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000009410ff0c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x800
 >> Updated instruction            :  14 b8 8d e2          	: add fp, sp, #20, #16
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008024ff0c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x1000
 >> Updated instruction            :  14 a0 8d e2          	: add sl, sp, #0x14
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x2000
 >> Updated instruction            :  14 90 8d e2          	: add sb, sp, #0x14
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x4000
 >> Updated instruction            :  14 f0 8d e2          	: add pc, sp, #0x14
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  14 b0 8d e2 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80001014. Hit: 1. Lifespan: 2. Instruction: 00000208. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 b0 8d e2          	: add fp, sp, #0x14
 >> Mask                           :  0x8000
 >> Updated instruction            :  14 30 8d e2          	: add r3, sp, #0x14
 >> Lifespan countdown: 2. (0x80001018)
 >> Lifespan countdown: 1. (0x8000101c)
 >> Reverting instruction          :  14 b0 8d e2 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 0. Instruction: 00000265. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110018, value: 0x0!! Count 270 Skipping to end.
 >> Run result: Fault errored program - last instruction: 269.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110098, value: 0x0!! Count 270 Skipping to end.
 >> Run result: Fault errored program - last instruction: 269.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110198, value: 0x0!! Count 270 Skipping to end.
 >> Run result: Fault errored program - last instruction: 269.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110398, value: 0x0!! Count 270 Skipping to end.
 >> Run result: Fault errored program - last instruction: 269.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110798, value: 0x0!! Count 270 Skipping to end.
 >> Run result: Fault errored program - last instruction: 269.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 3. Lifespan: 2. Instruction: 00000265. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 0. Instruction: 00000276. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 6. Lifespan: 2. Instruction: 00000276. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 0. Instruction: 00000284. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 8. Lifespan: 2. Instruction: 00000284. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 0. Instruction: 00000294. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000124
 >> Updated                     : 0x0000000080000128
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 85 e0          	: add r0, r5, r2
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 85 e0          	: add r0, r5, r1
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 85 e0          	: add r0, r5, r7
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 85 e0          	: add r0, r5, fp
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 85 e0          	: add r0, r5, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 85 e0          	: add r0, r5, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 85 e0          	: add r0, r5, r3, asr #32
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 85 e0          	: add r0, r5, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 85 e0          	: add r0, r5, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 85 e0          	: add r0, r5, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 85 e0          	: add r0, r5, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 85 e0          	: add r0, r5, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 85 e0          	: add r1, r5, r3
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 85 e0          	: add r2, r5, r3
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 85 e0          	: add r4, r5, r3
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000124. Hit: 1. Lifespan: 2. Instruction: 00000294. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 85 e0          	: add r0, r5, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 85 e0          	: add r8, r5, r3
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  03 00 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 0. Instruction: 00000301. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001074
 >> Updated                     : 0x0000000080001078
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 10 a0 e1          	: mov r1, r7
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 10 a0 e1          	: mov r1, r4
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 10 a0 e1          	: mov r1, r2
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 10 a0 e1          	: mov r1, lr
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffff, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 10 a0 e1          	: lsl r1, r6, r0
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 10 a0 e1          	: lsr r1, r6, #0x20
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 10 a0 e1          	: asr r1, r6, #0x20
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffff, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 10 a0 e1          	: lsl r1, r6, #1
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000021fef0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 11 a0 e1          	: lsl r1, r6, #2
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000043fde0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 12 a0 e1          	: lsl r1, r6, #4
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000010ff780, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 14 a0 e1          	: lsl r1, r6, #8
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff7800, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 18 a0 e1          	: lsl r1, r6, #0x10
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff780000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 00 a0 e1          	: mov r0, r6
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 30 a0 e1          	: mov r3, r6
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 50 a0 e1          	: mov r5, r6
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001074. Hit: 1. Lifespan: 2. Instruction: 00000301. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 90 a0 e1          	: mov sb, r6
 >> Lifespan countdown: 2. (0x80001078)
 >> Lifespan countdown: 1. (0x8000107c)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 0. Instruction: 00000305. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001084
 >> Updated                     : 0x0000000080001088
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 84 e5          	: str r3, [r4, #1]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 84 e5          	: str r3, [r4, #2]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 84 e5          	: str r3, [r4, #4]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 84 e5          	: str r3, [r4, #8]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 84 e5          	: str r3, [r4, #0x10]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 84 e5          	: str r3, [r4, #0x20]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 84 e5          	: str r3, [r4, #0x40]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 84 e5          	: str r3, [r4, #0x80]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 84 e5          	: str r3, [r4, #0x100]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110060, value: 0x80!! Count 306 Skipping to end.
 >> Run result: Fault errored program - last instruction: 305.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 84 e5          	: str r3, [r4, #0x200]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110160, value: 0x80!! Count 306 Skipping to end.
 >> Run result: Fault errored program - last instruction: 305.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 84 e5          	: str r3, [r4, #0x400]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110360, value: 0x80!! Count 306 Skipping to end.
 >> Run result: Fault errored program - last instruction: 305.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 84 e5          	: str r3, [r4, #0x800]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110760, value: 0x80!! Count 306 Skipping to end.
 >> Run result: Fault errored program - last instruction: 305.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 84 e5          	: str r2, [r4]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 84 e5          	: str r1, [r4]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 84 e5          	: str r7, [r4]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001084. Hit: 1. Lifespan: 2. Instruction: 00000305. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 84 e5          	: str r3, [r4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 84 e5          	: str fp, [r4]
 >> Lifespan countdown: 2. (0x80001088)
 >> Lifespan countdown: 1. (0x8000108c)
 >> Reverting instruction          :  00 30 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 0. Instruction: 00000313. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010a4
 >> Updated                     : 0x00000000800010a8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  1f 04 cf e7          	: bfc r0, #8, #8
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  1c 04 cf e7          	: bfi r0, ip, #8, #8
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  1a 04 cf e7          	: bfi r0, sl, #8, #8
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  16 04 cf e7          	: bfi r0, r6, #8, #8
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  0e 04 cf e7          	: strb r0, [pc, lr, lsl #8]
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  3e 04 cf e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 313.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  5e 04 cf e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 313.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  9e 04 cf e7          	: bfi r0, lr, #9, #7
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  1e 05 cf e7          	: bfi r0, lr, #0xa, #6
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  1e 06 cf e7          	: bfi r0, lr, #0xc, #4
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  1e 00 cf e7          	: bfi r0, lr, #0, #0x10
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  1e 0c cf e7          	: bfi r0, lr, #0xf, #1
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  1e 14 cf e7          	: bfi r1, lr, #8, #8
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  1e 24 cf e7          	: bfi r2, lr, #8, #8
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  1e 44 cf e7          	: bfi r4, lr, #8, #8
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010a4. Hit: 1. Lifespan: 2. Instruction: 00000313. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e 04 cf e7          	: bfi r0, lr, #8, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  1e 84 cf e7          	: bfi r8, lr, #8, #8
 >> Lifespan countdown: 2. (0x800010a8)
 >> Lifespan countdown: 1. (0x800010ac)
 >> Reverting instruction          :  1e 04 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 0. Instruction: 00000322. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010c8
 >> Updated                     : 0x00000000800010cc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x1
 >> Updated instruction            :  f5 fc ff eb          	: bl #0x3dc
 >> Lifespan countdown: 2. (0x800004a4)
 >> Lifespan countdown: 1. (0x800004a8)
 >> Reverting instruction          :  f4 fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 326.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x2
 >> Updated instruction            :  f6 fc ff eb          	: bl #0x3e0
 >> Lifespan countdown: 2. (0x800004a8)
 >> Lifespan countdown: 1. (0x800004ac)
 >> Reverting instruction          :  f4 fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 325.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x4
 >> Updated instruction            :  f0 fc ff eb          	: bl #0x3c8
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  f4 fc ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 549.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x8
 >> Updated instruction            :  fc fc ff eb          	: bl #0x3f8
 >> Lifespan countdown: 2. (0x800004c0)
 >> Lifespan countdown: 1. (0x800004c4)
 >> Reverting instruction          :  f4 fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 325.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x10
 >> Updated instruction            :  e4 fc ff eb          	: bl #0x398
 >> Lifespan countdown: 2. (0x80000460)
 >> Lifespan countdown: 1. (0x80000464)
 >> Reverting instruction          :  f4 fc ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 561.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x20
 >> Updated instruction            :  d4 fc ff eb          	: bl #0x358
 >> Lifespan countdown: 2. (0x80000420)
 >> Lifespan countdown: 1. (0x80000424)
 >> Reverting instruction          :  f4 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 327 Skipping to end.
 >> Run result: Fault errored program - last instruction: 326.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x40
 >> Updated instruction            :  b4 fc ff eb          	: bl #0x2d8
 >> Lifespan countdown: 2. (0x800003a0)
 >> Lifespan countdown: 1. (0x800003a4)
 >> Reverting instruction          :  f4 fc ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 549.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x80
 >> Updated instruction            :  74 fc ff eb          	: bl #0x1d8
 >> Lifespan countdown: 2. (0x800002a0)
 >> Lifespan countdown: 1. (0x800002a4)
 >> Reverting instruction          :  f4 fc ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x100
 >> Updated instruction            :  f4 fd ff eb          	: bl #0x7d8
 >> Lifespan countdown: 2. (0x800008a0)
 >> Lifespan countdown: 1. (0x800008a4)
 >> Reverting instruction          :  f4 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x40!! Count 357 Skipping to end.
 >> Run result: Fault errored program - last instruction: 356.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x200
 >> Updated instruction            :  f4 fe ff eb          	: bl #0xbd8
 >> Lifespan countdown: 2. (0x80000ca0)
 >> Lifespan countdown: 1. (0x80000ca4)
 >> Reverting instruction          :  f4 fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x369f52b3!! Count 530 Skipping to end.
 >> Run result: Fault errored program - last instruction: 529.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x400
 >> Updated instruction            :  f4 f8 ff eb          	: bl #0xfffff3d8
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff4a0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 322.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x800
 >> Updated instruction            :  f4 f4 ff eb          	: bl #0xffffe3d8
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe4a0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 322.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x1000
 >> Updated instruction            :  f4 ec ff eb          	: bl #0xffffc3d8
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc4a0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 322.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x2000
 >> Updated instruction            :  f4 dc ff eb          	: bl #0xffff83d8
 >!  Erm -  fetching from unmapped memory, address: 0x7fff84a0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 322.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x4000
 >> Updated instruction            :  f4 bc ff eb          	: bl #0xffff03d8
 >!  Erm -  fetching from unmapped memory, address: 0x7fff04a0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 322.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010c8. Hit: 1. Lifespan: 2. Instruction: 00000322. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f4 fc ff eb          	: bl #0x3d8
 >> Mask                           :  0x8000
 >> Updated instruction            :  f4 7c ff eb          	: bl #0xfffe03d8
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe04a0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 322.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 0. Instruction: 00000327. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004b0
 >> Updated                     : 0x00000000800004b4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 c0 93 e5          	: ldr ip, [r3, #9]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a c0 93 e5          	: ldr ip, [r3, #0xa]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c c0 93 e5          	: ldr ip, [r3, #0xc]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 c0 93 e5          	: ldr ip, [r3]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 c0 93 e5          	: ldr ip, [r3, #0x18]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 c0 93 e5          	: ldr ip, [r3, #0x28]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 c0 93 e5          	: ldr ip, [r3, #0x48]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 c0 93 e5          	: ldr ip, [r3, #0x88]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 c1 93 e5          	: ldr ip, [r3, #0x108]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110068, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 c2 93 e5          	: ldr ip, [r3, #0x208]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110168, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 c4 93 e5          	: ldr ip, [r3, #0x408]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110368, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 c8 93 e5          	: ldr ip, [r3, #0x808]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110768, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 327.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 d0 93 e5          	: ldr sp, [r3, #8]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 e0 93 e5          	: ldr lr, [r3, #8]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 80 93 e5          	: ldr r8, [r3, #8]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b0. Hit: 1. Lifespan: 2. Instruction: 00000327. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 93 e5          	: ldr ip, [r3, #8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 40 93 e5          	: ldr r4, [r3, #8]
 >> Lifespan countdown: 2. (0x800004b4)
 >> Lifespan countdown: 1. (0x800004b8)
 >> Reverting instruction          :  08 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 0. Instruction: 00000336. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004d4
 >> Updated                     : 0x00000000800004d8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x1
 >> Updated instruction            :  3d 00 0b e5          	: str r0, [fp, #-0x3d]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x2
 >> Updated instruction            :  3e 00 0b e5          	: str r0, [fp, #-0x3e]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x4
 >> Updated instruction            :  38 00 0b e5          	: str r0, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x8
 >> Updated instruction            :  34 00 0b e5          	: str r0, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x10
 >> Updated instruction            :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xefcdabe1, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x20
 >> Updated instruction            :  1c 00 0b e5          	: str r0, [fp, #-0x1c]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xefcdab89, value: 0xff!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x40
 >> Updated instruction            :  7c 00 0b e5          	: str r0, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x80
 >> Updated instruction            :  bc 00 0b e5          	: str r0, [fp, #-0xbc]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x100
 >> Updated instruction            :  3c 01 0b e5          	: str r0, [fp, #-0x13c]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x200
 >> Updated instruction            :  3c 02 0b e5          	: str r0, [fp, #-0x23c]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x400
 >> Updated instruction            :  3c 04 0b e5          	: str r0, [fp, #-0x43c]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x800
 >> Updated instruction            :  3c 08 0b e5          	: str r0, [fp, #-0x83c]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  3c 10 0b e5          	: str r1, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  3c 20 0b e5          	: str r2, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  3c 40 0b e5          	: str r4, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d4. Hit: 1. Lifespan: 2. Instruction: 00000336. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  3c 80 0b e5          	: str r8, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x800004d8)
 >> Lifespan countdown: 1. (0x800004dc)
 >> Reverting instruction          :  3c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 0. Instruction: 00000345. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004f8
 >> Updated                     : 0x00000000800004fc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x1
 >> Updated instruction            :  79 30 0b e5          	: str r3, [fp, #-0x79]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x2
 >> Updated instruction            :  7a 30 0b e5          	: str r3, [fp, #-0x7a]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x4
 >> Updated instruction            :  7c 30 0b e5          	: str r3, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x8
 >> Updated instruction            :  70 30 0b e5          	: str r3, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x10
 >> Updated instruction            :  68 30 0b e5          	: str r3, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x20
 >> Updated instruction            :  58 30 0b e5          	: str r3, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x40
 >> Updated instruction            :  38 30 0b e5          	: str r3, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x80
 >> Updated instruction            :  f8 30 0b e5          	: str r3, [fp, #-0xf8]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x100
 >> Updated instruction            :  78 31 0b e5          	: str r3, [fp, #-0x178]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x200
 >> Updated instruction            :  78 32 0b e5          	: str r3, [fp, #-0x278]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x400
 >> Updated instruction            :  78 34 0b e5          	: str r3, [fp, #-0x478]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x800
 >> Updated instruction            :  78 38 0b e5          	: str r3, [fp, #-0x878]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x1000
 >> Updated instruction            :  78 20 0b e5          	: str r2, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x2000
 >> Updated instruction            :  78 10 0b e5          	: str r1, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x4000
 >> Updated instruction            :  78 70 0b e5          	: str r7, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f8. Hit: 1. Lifespan: 2. Instruction: 00000345. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  78 30 0b e5          	: str r3, [fp, #-0x78]
 >> Mask                           :  0x8000
 >> Updated instruction            :  78 b0 0b e5          	: str fp, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x800004fc)
 >> Lifespan countdown: 1. (0x80000500)
 >> Reverting instruction          :  78 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 0. Instruction: 00000353. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000518
 >> Updated                     : 0x000000008000051c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x1
 >> Updated instruction            :  00 35 09 e3          	: movw r3, #0x9500
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x2
 >> Updated instruction            :  03 35 09 e3          	: movw r3, #0x9503
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x4
 >> Updated instruction            :  05 35 09 e3          	: movw r3, #0x9505
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x8
 >> Updated instruction            :  09 35 09 e3          	: movw r3, #0x9509
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x10
 >> Updated instruction            :  11 35 09 e3          	: movw r3, #0x9511
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x20
 >> Updated instruction            :  21 35 09 e3          	: movw r3, #0x9521
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x40
 >> Updated instruction            :  41 35 09 e3          	: movw r3, #0x9541
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x80
 >> Updated instruction            :  81 35 09 e3          	: movw r3, #0x9581
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x100
 >> Updated instruction            :  01 34 09 e3          	: movw r3, #0x9401
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x200
 >> Updated instruction            :  01 37 09 e3          	: movw r3, #0x9701
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x400
 >> Updated instruction            :  01 31 09 e3          	: movw r3, #0x9101
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x800
 >> Updated instruction            :  01 3d 09 e3          	: movw r3, #0x9d01
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 25 09 e3          	: movw r2, #0x9501
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 15 09 e3          	: movw r1, #0x9501
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000009501, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 75 09 e3          	: movw r7, #0x9501
 >> Lifespan countdown: 2. (0x8000051c)
 >> Lifespan countdown: 1. (0x80000520)
 >> Reverting instruction          :  01 35 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000518. Hit: 1. Lifespan: 2. Instruction: 00000353. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 35 09 e3          	: movw r3, #0x9501
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b5 09 e3          	: movw fp, #0x9501
 >> Lifespan countdown: 2. (0x8000051c)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x947d, value: 0xa8304613!! Count 355 Skipping to end.
 >> Run result: Fault errored program - last instruction: 354.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 0. Instruction: 00000361. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000538
 >> Updated                     : 0x000000008000053c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x1
 >> Updated instruction            :  5d 39 48 e3          	: movt r3, #0x895d
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x2
 >> Updated instruction            :  5e 39 48 e3          	: movt r3, #0x895e
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x4
 >> Updated instruction            :  58 39 48 e3          	: movt r3, #0x8958
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x8
 >> Updated instruction            :  54 39 48 e3          	: movt r3, #0x8954
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x10
 >> Updated instruction            :  4c 39 48 e3          	: movt r3, #0x894c
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x20
 >> Updated instruction            :  7c 39 48 e3          	: movt r3, #0x897c
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x40
 >> Updated instruction            :  1c 39 48 e3          	: movt r3, #0x891c
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x80
 >> Updated instruction            :  dc 39 48 e3          	: movt r3, #0x89dc
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x100
 >> Updated instruction            :  5c 38 48 e3          	: movt r3, #0x885c
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x200
 >> Updated instruction            :  5c 3b 48 e3          	: movt r3, #0x8b5c
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x400
 >> Updated instruction            :  5c 3d 48 e3          	: movt r3, #0x8d5c
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x800
 >> Updated instruction            :  5c 31 48 e3          	: movt r3, #0x815c
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x1000
 >> Updated instruction            :  5c 29 48 e3          	: movt r2, #0x895c
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x2000
 >> Updated instruction            :  5c 19 48 e3          	: movt r1, #0x895c
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000895cff78, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x4000
 >> Updated instruction            :  5c 79 48 e3          	: movt r7, #0x895c
 >> Lifespan countdown: 2. (0x8000053c)
 >> Lifespan countdown: 1. (0x80000540)
 >> Reverting instruction          :  5c 39 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000538. Hit: 1. Lifespan: 2. Instruction: 00000361. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 39 48 e3          	: movt r3, #0x895c
 >> Mask                           :  0x8000
 >> Updated instruction            :  5c b9 48 e3          	: movt fp, #0x895c
 >> Lifespan countdown: 2. (0x8000053c)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x895cfeb0, value: 0x40!! Count 363 Skipping to end.
 >> Run result: Fault errored program - last instruction: 362.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 0. Instruction: 00000368. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000554
 >> Updated                     : 0x0000000080000558
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x1
 >> Updated instruction            :  45 ab 48 e3          	: movt sl, #0x8b45
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x2
 >> Updated instruction            :  46 ab 48 e3          	: movt sl, #0x8b46
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x4
 >> Updated instruction            :  40 ab 48 e3          	: movt sl, #0x8b40
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x8
 >> Updated instruction            :  4c ab 48 e3          	: movt sl, #0x8b4c
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x10
 >> Updated instruction            :  54 ab 48 e3          	: movt sl, #0x8b54
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x20
 >> Updated instruction            :  64 ab 48 e3          	: movt sl, #0x8b64
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x40
 >> Updated instruction            :  04 ab 48 e3          	: movt sl, #0x8b04
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x80
 >> Updated instruction            :  c4 ab 48 e3          	: movt sl, #0x8bc4
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x100
 >> Updated instruction            :  44 aa 48 e3          	: movt sl, #0x8a44
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x200
 >> Updated instruction            :  44 a9 48 e3          	: movt sl, #0x8944
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x400
 >> Updated instruction            :  44 af 48 e3          	: movt sl, #0x8f44
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x800
 >> Updated instruction            :  44 a3 48 e3          	: movt sl, #0x8344
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x1000
 >> Updated instruction            :  44 bb 48 e3          	: movt fp, #0x8b44
 >> Lifespan countdown: 2. (0x80000558)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008b44fedc, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 369.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x2000
 >> Updated instruction            :  44 8b 48 e3          	: movt r8, #0x8b44
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x4000
 >> Updated instruction            :  44 eb 48 e3          	: movt lr, #0x8b44
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000554. Hit: 1. Lifespan: 2. Instruction: 00000368. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ab 48 e3          	: movt sl, #0x8b44
 >> Mask                           :  0x8000
 >> Updated instruction            :  44 2b 48 e3          	: movt r2, #0x8b44
 >> Lifespan countdown: 2. (0x80000558)
 >> Lifespan countdown: 1. (0x8000055c)
 >> Reverting instruction          :  44 ab 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 0. Instruction: 00000375. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000570
 >> Updated                     : 0x0000000080000574
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 c0 0c e0          	: and ip, ip, r3
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 c0 0c e0          	: and ip, ip, r0
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 c0 0c e0          	: and ip, ip, r6
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a c0 0c e0          	: and ip, ip, sl
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 c0 0c e0          	: and ip, ip, r2, lsl r0
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 c0 0c e0          	: and ip, ip, r2, lsr #32
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 c0 0c e0          	: and ip, ip, r2, asr #32
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 c0 0c e0          	: and ip, ip, r2, lsl #1
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 c1 0c e0          	: and ip, ip, r2, lsl #2
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 c2 0c e0          	: and ip, ip, r2, lsl #4
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 c4 0c e0          	: and ip, ip, r2, lsl #8
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 c8 0c e0          	: and ip, ip, r2, lsl #16
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 d0 0c e0          	: and sp, ip, r2
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 e0 0c e0          	: and lr, ip, r2
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 80 0c e0          	: and r8, ip, r2
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000570. Hit: 1. Lifespan: 2. Instruction: 00000375. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 0c e0          	: and ip, ip, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 40 0c e0          	: and r4, ip, r2
 >> Lifespan countdown: 2. (0x80000574)
 >> Lifespan countdown: 1. (0x80000578)
 >> Reverting instruction          :  02 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 0. Instruction: 00000384. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000594
 >> Updated                     : 0x0000000080000598
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 60 83 e0          	: add r6, r3, r4
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 60 83 e0          	: add r6, r3, r7
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 60 83 e0          	: add r6, r3, r1
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 60 83 e0          	: add r6, r3, sp
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 60 83 e0          	: add r6, r3, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 60 83 e0          	: add r6, r3, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 60 83 e0          	: add r6, r3, r5, asr #32
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 60 83 e0          	: add r6, r3, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 61 83 e0          	: add r6, r3, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 62 83 e0          	: add r6, r3, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 64 83 e0          	: add r6, r3, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 68 83 e0          	: add r6, r3, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 70 83 e0          	: add r7, r3, r5
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f8fa0bd0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 388.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 40 83 e0          	: add r4, r3, r5
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 20 83 e0          	: add r2, r3, r5
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000594. Hit: 1. Lifespan: 2. Instruction: 00000384. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 60 83 e0          	: add r6, r3, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 e0 83 e0          	: add lr, r3, r5
 >> Lifespan countdown: 2. (0x80000598)
 >> Lifespan countdown: 1. (0x8000059c)
 >> Reverting instruction          :  05 60 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 0. Instruction: 00000393. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005b8
 >> Updated                     : 0x00000000800005bc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 00 20 e0          	: eor r0, r0, pc
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 00 20 e0          	: eor r0, r0, ip
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 00 20 e0          	: eor r0, r0, sl
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 00 20 e0          	: eor r0, r0, r6
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 00 20 e0          	: eor r0, r0, lr, lsl r0
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 00 20 e0          	: eor r0, r0, lr, lsr #32
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 00 20 e0          	: eor r0, r0, lr, asr #32
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 00 20 e0          	: eor r0, r0, lr, lsl #1
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 01 20 e0          	: eor r0, r0, lr, lsl #2
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 02 20 e0          	: eor r0, r0, lr, lsl #4
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 04 20 e0          	: eor r0, r0, lr, lsl #8
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 08 20 e0          	: eor r0, r0, lr, lsl #16
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 10 20 e0          	: eor r1, r0, lr
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xf8dae8f9, value: 0xaa49989b!! Count 397 Skipping to end.
 >> Run result: Fault errored program - last instruction: 396.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 20 20 e0          	: eor r2, r0, lr
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 40 20 e0          	: eor r4, r0, lr
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b8. Hit: 1. Lifespan: 2. Instruction: 00000393. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 20 e0          	: eor r0, r0, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 80 20 e0          	: eor r8, r0, lr
 >> Lifespan countdown: 2. (0x800005bc)
 >> Lifespan countdown: 1. (0x800005c0)
 >> Reverting instruction          :  0e 00 20 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f8dae8a9, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 0. Instruction: 00000400. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005d4
 >> Updated                     : 0x00000000800005d8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x1
 >> Updated instruction            :  61 0a 8c e0          	: add r0, ip, r1, ror #20
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x2
 >> Updated instruction            :  62 0a 8c e0          	: add r0, ip, r2, ror #20
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x4
 >> Updated instruction            :  64 0a 8c e0          	: add r0, ip, r4, ror #20
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x8
 >> Updated instruction            :  68 0a 8c e0          	: add r0, ip, r8, ror #20
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x10
 >> Updated instruction            :  70 0a 8c e0          	: add r0, ip, r0, ror sl
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x20
 >> Updated instruction            :  40 0a 8c e0          	: add r0, ip, r0, asr #20
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x40
 >> Updated instruction            :  20 0a 8c e0          	: add r0, ip, r0, lsr #20
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x80
 >> Updated instruction            :  e0 0a 8c e0          	: add r0, ip, r0, ror #21
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x100
 >> Updated instruction            :  60 0b 8c e0          	: add r0, ip, r0, ror #22
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x200
 >> Updated instruction            :  60 08 8c e0          	: add r0, ip, r0, ror #16
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x400
 >> Updated instruction            :  60 0e 8c e0          	: add r0, ip, r0, ror #28
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x800
 >> Updated instruction            :  60 02 8c e0          	: add r0, ip, r0, ror #4
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x1000
 >> Updated instruction            :  60 1a 8c e0          	: add r1, ip, r0, ror #20
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x51b8868c, value: 0x0!! Count 412 Skipping to end.
 >> Run result: Fault errored program - last instruction: 411.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x2000
 >> Updated instruction            :  60 2a 8c e0          	: add r2, ip, r0, ror #20
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x4000
 >> Updated instruction            :  60 4a 8c e0          	: add r4, ip, r0, ror #20
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005d4. Hit: 1. Lifespan: 2. Instruction: 00000400. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 0a 8c e0          	: add r0, ip, r0, ror #20
 >> Mask                           :  0x8000
 >> Updated instruction            :  60 8a 8c e0          	: add r8, ip, r0, ror #20
 >> Lifespan countdown: 2. (0x800005d8)
 >> Lifespan countdown: 1. (0x800005dc)
 >> Reverting instruction          :  60 0a 8c e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000051b88638, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 0. Instruction: 00000407. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005f0
 >> Updated                     : 0x00000000800005f4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 50 85 e0          	: add r5, r5, r7
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 50 85 e0          	: add r5, r5, r4
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 50 85 e0          	: add r5, r5, r2
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 50 85 e0          	: add r5, r5, lr
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 50 85 e0          	: add r5, r5, r6, lsl r0
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 50 85 e0          	: add r5, r5, r6, lsr #32
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 50 85 e0          	: add r5, r5, r6, asr #32
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 50 85 e0          	: add r5, r5, r6, lsl #1
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 51 85 e0          	: add r5, r5, r6, lsl #2
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 52 85 e0          	: add r5, r5, r6, lsl #4
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 54 85 e0          	: add r5, r5, r6, lsl #8
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 58 85 e0          	: add r5, r5, r6, lsl #16
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 40 85 e0          	: add r4, r5, r6
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 70 85 e0          	: add r7, r5, r6
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 10 85 e0          	: add r1, r5, r6
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xbcdb4e39, value: 0x0!! Count 412 Skipping to end.
 >> Run result: Fault errored program - last instruction: 411.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005f0. Hit: 1. Lifespan: 2. Instruction: 00000407. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 50 85 e0          	: add r5, r5, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 d0 85 e0          	: add sp, r5, r6
 >> Lifespan countdown: 2. (0x800005f4)
 >> Lifespan countdown: 1. (0x800005f8)
 >> Reverting instruction          :  06 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 0. Instruction: 00000414. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000060c
 >> Updated                     : 0x0000000080000610
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x1
 >> Updated instruction            :  e3 27 80 e0          	: add r2, r0, r3, ror #15
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x2
 >> Updated instruction            :  e0 27 80 e0          	: add r2, r0, r0, ror #15
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x4
 >> Updated instruction            :  e6 27 80 e0          	: add r2, r0, r6, ror #15
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x8
 >> Updated instruction            :  ea 27 80 e0          	: add r2, r0, sl, ror #15
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x10
 >> Updated instruction            :  f2 27 80 e0          	: strd r2, r3, [r0], r2
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x51b8862c, value: 0xabc87b82!! Count 415 Skipping to end.
 >> Run result: Fault errored program - last instruction: 414.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x20
 >> Updated instruction            :  c2 27 80 e0          	: add r2, r0, r2, asr #15
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x40
 >> Updated instruction            :  a2 27 80 e0          	: add r2, r0, r2, lsr #15
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x80
 >> Updated instruction            :  62 27 80 e0          	: add r2, r0, r2, ror #14
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x100
 >> Updated instruction            :  e2 26 80 e0          	: add r2, r0, r2, ror #13
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x200
 >> Updated instruction            :  e2 25 80 e0          	: add r2, r0, r2, ror #11
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x400
 >> Updated instruction            :  e2 23 80 e0          	: add r2, r0, r2, ror #7
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x800
 >> Updated instruction            :  e2 2f 80 e0          	: add r2, r0, r2, ror #31
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x1000
 >> Updated instruction            :  e2 37 80 e0          	: add r3, r0, r2, ror #15
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x2000
 >> Updated instruction            :  e2 07 80 e0          	: add r0, r0, r2, ror #15
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x4000
 >> Updated instruction            :  e2 67 80 e0          	: add r6, r0, r2, ror #15
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000060c. Hit: 1. Lifespan: 2. Instruction: 00000414. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x8000
 >> Updated instruction            :  e2 a7 80 e0          	: add sl, r0, r2, ror #15
 >> Lifespan countdown: 2. (0x80000610)
 >> Lifespan countdown: 1. (0x80000614)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 0. Instruction: 00000422. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000062c
 >> Updated                     : 0x0000000080000630
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x1
 >> Updated instruction            :  65 30 87 e5          	: str r3, [r7, #0x65]
 >> Lifespan countdown: 2. (0x80000630)
 >> Lifespan countdown: 1. (0x80000634)
 >> Reverting instruction          :  64 30 87 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x2
 >> Updated instruction            :  66 30 87 e5          	: str r3, [r7, #0x66]
 >> Lifespan countdown: 2. (0x80000630)
 >> Lifespan countdown: 1. (0x80000634)
 >> Reverting instruction          :  64 30 87 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x4
 >> Updated instruction            :  60 30 87 e5          	: str r3, [r7, #0x60]
 >> Lifespan countdown: 2. (0x80000630)
 >> Lifespan countdown: 1. (0x80000634)
 >> Reverting instruction          :  64 30 87 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x8
 >> Updated instruction            :  6c 30 87 e5          	: str r3, [r7, #0x6c]
 >> Lifespan countdown: 2. (0x80000630)
 >> Lifespan countdown: 1. (0x80000634)
 >> Reverting instruction          :  64 30 87 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x10
 >> Updated instruction            :  74 30 87 e5          	: str r3, [r7, #0x74]
 >> Lifespan countdown: 2. (0x80000630)
 >> Lifespan countdown: 1. (0x80000634)
 >> Reverting instruction          :  64 30 87 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x20
 >> Updated instruction            :  44 30 87 e5          	: str r3, [r7, #0x44]
 >> Lifespan countdown: 2. (0x80000630)
 >> Lifespan countdown: 1. (0x80000634)
 >> Reverting instruction          :  64 30 87 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x40
 >> Updated instruction            :  24 30 87 e5          	: str r3, [r7, #0x24]
 >> Lifespan countdown: 2. (0x80000630)
 >> Lifespan countdown: 1. (0x80000634)
 >> Reverting instruction          :  64 30 87 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x80
 >> Updated instruction            :  e4 30 87 e5          	: str r3, [r7, #0xe4]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110044, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x100
 >> Updated instruction            :  64 31 87 e5          	: str r3, [r7, #0x164]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100c4, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x200
 >> Updated instruction            :  64 32 87 e5          	: str r3, [r7, #0x264]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101c4, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x400
 >> Updated instruction            :  64 34 87 e5          	: str r3, [r7, #0x464]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103c4, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x800
 >> Updated instruction            :  64 38 87 e5          	: str r3, [r7, #0x864]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107c4, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x1000
 >> Updated instruction            :  64 20 87 e5          	: str r2, [r7, #0x64]
 >> Lifespan countdown: 2. (0x80000630)
 >> Lifespan countdown: 1. (0x80000634)
 >> Reverting instruction          :  64 30 87 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x2000
 >> Updated instruction            :  64 10 87 e5          	: str r1, [r7, #0x64]
 >> Lifespan countdown: 2. (0x80000630)
 >> Lifespan countdown: 1. (0x80000634)
 >> Reverting instruction          :  64 30 87 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x4000
 >> Updated instruction            :  64 70 87 e5          	: str r7, [r7, #0x64]
 >> Lifespan countdown: 2. (0x80000630)
 >> Lifespan countdown: 1. (0x80000634)
 >> Reverting instruction          :  64 30 87 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000062c. Hit: 1. Lifespan: 2. Instruction: 00000422. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 30 87 e5          	: str r3, [r7, #0x64]
 >> Mask                           :  0x8000
 >> Updated instruction            :  64 b0 87 e5          	: str fp, [r7, #0x64]
 >> Lifespan countdown: 2. (0x80000630)
 >> Lifespan countdown: 1. (0x80000634)
 >> Reverting instruction          :  64 30 87 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 0. Instruction: 00000429. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000648
 >> Updated                     : 0x000000008000064c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 40 87 e0          	: add r4, r7, r5
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 40 87 e0          	: add r4, r7, r6
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 40 87 e0          	: add r4, r7, r0
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 40 87 e0          	: add r4, r7, ip
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 40 87 e0          	: add r4, r7, r4, lsl r0
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 40 87 e0          	: add r4, r7, r4, lsr #32
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 40 87 e0          	: add r4, r7, r4, asr #32
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 40 87 e0          	: add r4, r7, r4, lsl #1
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 41 87 e0          	: add r4, r7, r4, lsl #2
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 42 87 e0          	: add r4, r7, r4, lsl #4
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 44 87 e0          	: add r4, r7, r4, lsl #8
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 48 87 e0          	: add r4, r7, r4, lsl #16
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 50 87 e0          	: add r5, r7, r4
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xf57c1097, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 60 87 e0          	: add r6, r7, r4
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 00 87 e0          	: add r0, r7, r4
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000648. Hit: 1. Lifespan: 2. Instruction: 00000429. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 87 e0          	: add r4, r7, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 c0 87 e0          	: add ip, r7, r4
 >> Lifespan countdown: 2. (0x8000064c)
 >> Lifespan countdown: 1. (0x80000650)
 >> Reverting instruction          :  04 40 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 0. Instruction: 00000437. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000668
 >> Updated                     : 0x000000008000066c
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x5aec, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 e0 a0 e1          	: mov lr, r4
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xf57c109b, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 e0 a0 e1          	: mov lr, r7
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xec, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 e0 a0 e1          	: mov lr, r1
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2427f2f, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d e0 a0 e1          	: mov lr, sp
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 e0 a0 e1          	: lsl lr, r5, r0
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6c, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 e0 a0 e1          	: lsr lr, r5, #0x20
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6c, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 e0 a0 e1          	: asr lr, r5, #0x20
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6b, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 e0 a0 e1          	: lsl lr, r5, #1
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21ff2c, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 e1 a0 e1          	: lsl lr, r5, #2
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x43fdec, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 e2 a0 e1          	: lsl lr, r5, #4
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff66c, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 e4 a0 e1          	: lsl lr, r5, #8
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff606c, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 e8 a0 e1          	: lsl lr, r5, #0x10
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff60006c, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 f0 a0 e1          	: mov pc, r5
 >> Lifespan countdown: 2. (0x8010ff60)
 >> Lifespan countdown: 1. (0x8010ff64)
 >> Reverting instruction          :  05 e0 a0 e1 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 c0 a0 e1          	: mov ip, r5
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x5aec, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 a0 a0 e1          	: mov sl, r5
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x5aec, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000668. Hit: 1. Lifespan: 2. Instruction: 00000437. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 a0 e1          	: mov lr, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 60 a0 e1          	: mov r6, r5
 >> Lifespan countdown: 2. (0x8000066c)
 >> Lifespan countdown: 1. (0x80000670)
 >> Reverting instruction          :  05 e0 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x5aec, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 0. Instruction: 00000441. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000678
 >> Updated                     : 0x000000008000067c
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f57c1047, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 40 a0 e1          	: mov r4, r7
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000098, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 40 a0 e1          	: mov r4, r4
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f57c1047, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 40 a0 e1          	: mov r4, r2
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000048bdddd4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 40 a0 e1          	: mov r4, lr
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 40 a0 e1          	: lsl r4, r6, r0
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000018, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 40 a0 e1          	: lsr r4, r6, #0x20
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000018, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 40 a0 e1          	: asr r4, r6, #0x20
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000017, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 40 a0 e1          	: lsl r4, r6, #1
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000021ff08, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 41 a0 e1          	: lsl r4, r6, #2
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000043fdf8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 42 a0 e1          	: lsl r4, r6, #4
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000010ff798, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 44 a0 e1          	: lsl r4, r6, #8
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff7818, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 48 a0 e1          	: lsl r4, r6, #0x10
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff780018, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 50 a0 e1          	: mov r5, r6
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f57c1047, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 60 a0 e1          	: mov r6, r6
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f57c1047, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 00 a0 e1          	: mov r0, r6
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f57c1047, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000678. Hit: 1. Lifespan: 2. Instruction: 00000441. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 40 a0 e1          	: mov r4, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 c0 a0 e1          	: mov ip, r6
 >> Lifespan countdown: 2. (0x8000067c)
 >> Lifespan countdown: 1. (0x80000680)
 >> Reverting instruction          :  06 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f57c1047, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 0. Instruction: 00000447. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000690
 >> Updated                     : 0x0000000080000694
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 60 8c e0          	: add r6, ip, r7
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 60 8c e0          	: add r6, ip, r4
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 60 8c e0          	: add r6, ip, r2
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 60 8c e0          	: add r6, ip, lr
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 60 8c e0          	: add r6, ip, r6, lsl r0
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 60 8c e0          	: add r6, ip, r6, lsr #32
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 60 8c e0          	: add r6, ip, r6, asr #32
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 60 8c e0          	: add r6, ip, r6, lsl #1
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 61 8c e0          	: add r6, ip, r6, lsl #2
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 62 8c e0          	: add r6, ip, r6, lsl #4
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 64 8c e0          	: add r6, ip, r6, lsl #8
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 68 8c e0          	: add r6, ip, r6, lsl #16
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 70 8c e0          	: add r7, ip, r6
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 40 8c e0          	: add r4, ip, r6
 >> Lifespan countdown: 2. (0x80000694)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000e1ab4c15, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 20 8c e0          	: add r2, ip, r6
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000690. Hit: 1. Lifespan: 2. Instruction: 00000447. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 60 8c e0          	: add r6, ip, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 e0 8c e0          	: add lr, ip, r6
 >> Lifespan countdown: 2. (0x80000694)
 >> Lifespan countdown: 1. (0x80000698)
 >> Reverting instruction          :  06 60 8c e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe1ab4c6d, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 0. Instruction: 00000455. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006b0
 >> Updated                     : 0x00000000800006b4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 c0 8c e0          	: add ip, ip, r4
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 c0 8c e0          	: add ip, ip, r7
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 c0 8c e0          	: add ip, ip, r1
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d c0 8c e0          	: add ip, ip, sp
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 c0 8c e0          	: add ip, ip, r5, lsl r0
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 c0 8c e0          	: add ip, ip, r5, lsr #32
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 c0 8c e0          	: add ip, ip, r5, asr #32
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 c0 8c e0          	: add ip, ip, r5, lsl #1
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 c1 8c e0          	: add ip, ip, r5, lsl #2
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 c2 8c e0          	: add ip, ip, r5, lsl #4
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 c4 8c e0          	: add ip, ip, r5, lsl #8
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 c8 8c e0          	: add ip, ip, r5, lsl #16
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 d0 8c e0          	: add sp, ip, r5
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 e0 8c e0          	: add lr, ip, r5
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa8304683, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 80 8c e0          	: add r8, ip, r5
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b0. Hit: 1. Lifespan: 2. Instruction: 00000455. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 8c e0          	: add ip, ip, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 40 8c e0          	: add r4, ip, r5
 >> Lifespan countdown: 2. (0x800006b4)
 >> Lifespan countdown: 1. (0x800006b8)
 >> Reverting instruction          :  05 c0 8c e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a830462f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 0. Instruction: 00000460. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006c4
 >> Updated                     : 0x00000000800006c8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x1
 >> Updated instruction            :  71 70 80 e5          	: str r7, [r0, #0x71]
 >> Lifespan countdown: 2. (0x800006c8)
 >> Lifespan countdown: 1. (0x800006cc)
 >> Reverting instruction          :  70 70 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x2
 >> Updated instruction            :  72 70 80 e5          	: str r7, [r0, #0x72]
 >> Lifespan countdown: 2. (0x800006c8)
 >> Lifespan countdown: 1. (0x800006cc)
 >> Reverting instruction          :  70 70 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x4
 >> Updated instruction            :  74 70 80 e5          	: str r7, [r0, #0x74]
 >> Lifespan countdown: 2. (0x800006c8)
 >> Lifespan countdown: 1. (0x800006cc)
 >> Reverting instruction          :  70 70 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x8
 >> Updated instruction            :  78 70 80 e5          	: str r7, [r0, #0x78]
 >> Lifespan countdown: 2. (0x800006c8)
 >> Lifespan countdown: 1. (0x800006cc)
 >> Reverting instruction          :  70 70 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x10
 >> Updated instruction            :  60 70 80 e5          	: str r7, [r0, #0x60]
 >> Lifespan countdown: 2. (0x800006c8)
 >> Lifespan countdown: 1. (0x800006cc)
 >> Reverting instruction          :  70 70 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x20
 >> Updated instruction            :  50 70 80 e5          	: str r7, [r0, #0x50]
 >> Lifespan countdown: 2. (0x800006c8)
 >> Lifespan countdown: 1. (0x800006cc)
 >> Reverting instruction          :  70 70 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x40
 >> Updated instruction            :  30 70 80 e5          	: str r7, [r0, #0x30]
 >> Lifespan countdown: 2. (0x800006c8)
 >> Lifespan countdown: 1. (0x800006cc)
 >> Reverting instruction          :  70 70 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x80
 >> Updated instruction            :  f0 70 80 e5          	: str r7, [r0, #0xf0]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110050, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x100
 >> Updated instruction            :  70 71 80 e5          	: str r7, [r0, #0x170]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100d0, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x200
 >> Updated instruction            :  70 72 80 e5          	: str r7, [r0, #0x270]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101d0, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x400
 >> Updated instruction            :  70 74 80 e5          	: str r7, [r0, #0x470]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103d0, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x800
 >> Updated instruction            :  70 78 80 e5          	: str r7, [r0, #0x870]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107d0, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x1000
 >> Updated instruction            :  70 60 80 e5          	: str r6, [r0, #0x70]
 >> Lifespan countdown: 2. (0x800006c8)
 >> Lifespan countdown: 1. (0x800006cc)
 >> Reverting instruction          :  70 70 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x2000
 >> Updated instruction            :  70 50 80 e5          	: str r5, [r0, #0x70]
 >> Lifespan countdown: 2. (0x800006c8)
 >> Lifespan countdown: 1. (0x800006cc)
 >> Reverting instruction          :  70 70 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x4000
 >> Updated instruction            :  70 30 80 e5          	: str r3, [r0, #0x70]
 >> Lifespan countdown: 2. (0x800006c8)
 >> Lifespan countdown: 1. (0x800006cc)
 >> Reverting instruction          :  70 70 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c4. Hit: 1. Lifespan: 2. Instruction: 00000460. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 70 80 e5          	: str r7, [r0, #0x70]
 >> Mask                           :  0x8000
 >> Updated instruction            :  70 f0 80 e5          	: str pc, [r0, #0x70]
 >> Lifespan countdown: 2. (0x800006c8)
 >> Lifespan countdown: 1. (0x800006cc)
 >> Reverting instruction          :  70 70 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 0. Instruction: 00000466. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006dc
 >> Updated                     : 0x00000000800006e0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x1
 >> Updated instruction            :  e4 57 86 e0          	: add r5, r6, r4, ror #15
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x2
 >> Updated instruction            :  e7 57 86 e0          	: add r5, r6, r7, ror #15
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x4
 >> Updated instruction            :  e1 57 86 e0          	: add r5, r6, r1, ror #15
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x8
 >> Updated instruction            :  ed 57 86 e0          	: add r5, r6, sp, ror #15
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x10
 >> Updated instruction            :  f5 57 86 e0          	: strd r5, r6, [r6], r5
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 466.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x20
 >> Updated instruction            :  c5 57 86 e0          	: add r5, r6, r5, asr #15
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x40
 >> Updated instruction            :  a5 57 86 e0          	: add r5, r6, r5, lsr #15
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x80
 >> Updated instruction            :  65 57 86 e0          	: add r5, r6, r5, ror #14
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x100
 >> Updated instruction            :  e5 56 86 e0          	: add r5, r6, r5, ror #13
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x200
 >> Updated instruction            :  e5 55 86 e0          	: add r5, r6, r5, ror #11
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x400
 >> Updated instruction            :  e5 53 86 e0          	: add r5, r6, r5, ror #7
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x800
 >> Updated instruction            :  e5 5f 86 e0          	: add r5, r6, r5, ror #31
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x1000
 >> Updated instruction            :  e5 47 86 e0          	: add r4, r6, r5, ror #15
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x2000
 >> Updated instruction            :  e5 77 86 e0          	: add r7, r6, r5, ror #15
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000adce7e0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x4000
 >> Updated instruction            :  e5 17 86 e0          	: add r1, r6, r5, ror #15
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006dc. Hit: 1. Lifespan: 2. Instruction: 00000466. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 57 86 e0          	: add r5, r6, r5, ror #15
 >> Mask                           :  0x8000
 >> Updated instruction            :  e5 d7 86 e0          	: add sp, r6, r5, ror #15
 >> Lifespan countdown: 2. (0x800006e0)
 >> Lifespan countdown: 1. (0x800006e4)
 >> Reverting instruction          :  e5 57 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 0. Instruction: 00000474. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006fc
 >> Updated                     : 0x0000000080000700
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x1
 >> Updated instruction            :  21 10 97 e5          	: ldr r1, [r7, #0x21]
 >> Lifespan countdown: 2. (0x80000700)
 >> Lifespan countdown: 1. (0x80000704)
 >> Reverting instruction          :  20 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x2
 >> Updated instruction            :  22 10 97 e5          	: ldr r1, [r7, #0x22]
 >> Lifespan countdown: 2. (0x80000700)
 >> Lifespan countdown: 1. (0x80000704)
 >> Reverting instruction          :  20 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x4
 >> Updated instruction            :  24 10 97 e5          	: ldr r1, [r7, #0x24]
 >> Lifespan countdown: 2. (0x80000700)
 >> Lifespan countdown: 1. (0x80000704)
 >> Reverting instruction          :  20 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x8
 >> Updated instruction            :  28 10 97 e5          	: ldr r1, [r7, #0x28]
 >> Lifespan countdown: 2. (0x80000700)
 >> Lifespan countdown: 1. (0x80000704)
 >> Reverting instruction          :  20 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x10
 >> Updated instruction            :  30 10 97 e5          	: ldr r1, [r7, #0x30]
 >> Lifespan countdown: 2. (0x80000700)
 >> Lifespan countdown: 1. (0x80000704)
 >> Reverting instruction          :  20 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x20
 >> Updated instruction            :  00 10 97 e5          	: ldr r1, [r7]
 >> Lifespan countdown: 2. (0x80000700)
 >> Lifespan countdown: 1. (0x80000704)
 >> Reverting instruction          :  20 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x40
 >> Updated instruction            :  60 10 97 e5          	: ldr r1, [r7, #0x60]
 >> Lifespan countdown: 2. (0x80000700)
 >> Lifespan countdown: 1. (0x80000704)
 >> Reverting instruction          :  20 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x80
 >> Updated instruction            :  a0 10 97 e5          	: ldr r1, [r7, #0xa0]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110018, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x100
 >> Updated instruction            :  20 11 97 e5          	: ldr r1, [r7, #0x120]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110098, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x200
 >> Updated instruction            :  20 12 97 e5          	: ldr r1, [r7, #0x220]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110198, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x400
 >> Updated instruction            :  20 14 97 e5          	: ldr r1, [r7, #0x420]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110398, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x800
 >> Updated instruction            :  20 18 97 e5          	: ldr r1, [r7, #0x820]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110798, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 474.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x1000
 >> Updated instruction            :  20 00 97 e5          	: ldr r0, [r7, #0x20]
 >> Lifespan countdown: 2. (0x80000700)
 >> Lifespan countdown: 1. (0x80000704)
 >> Reverting instruction          :  20 10 97 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x78, value: 0x2427ec3!! Count 493 Skipping to end.
 >> Run result: Fault errored program - last instruction: 492.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x2000
 >> Updated instruction            :  20 30 97 e5          	: ldr r3, [r7, #0x20]
 >> Lifespan countdown: 2. (0x80000700)
 >> Lifespan countdown: 1. (0x80000704)
 >> Reverting instruction          :  20 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x4000
 >> Updated instruction            :  20 50 97 e5          	: ldr r5, [r7, #0x20]
 >> Lifespan countdown: 2. (0x80000700)
 >> Lifespan countdown: 1. (0x80000704)
 >> Reverting instruction          :  20 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006fc. Hit: 1. Lifespan: 2. Instruction: 00000474. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Mask                           :  0x8000
 >> Updated instruction            :  20 90 97 e5          	: ldr sb, [r7, #0x20]
 >> Lifespan countdown: 2. (0x80000700)
 >> Lifespan countdown: 1. (0x80000704)
 >> Reverting instruction          :  20 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 0. Instruction: 00000482. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000071c
 >> Updated                     : 0x0000000080000720
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 10 81 e0          	: add r1, r1, sp
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 10 81 e0          	: add r1, r1, lr
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 10 81 e0          	: add r1, r1, r8
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 10 81 e0          	: add r1, r1, r4
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 10 81 e0          	: add r1, r1, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 10 81 e0          	: add r1, r1, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 10 81 e0          	: add r1, r1, ip, asr #32
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 10 81 e0          	: add r1, r1, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 11 81 e0          	: add r1, r1, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 12 81 e0          	: add r1, r1, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 14 81 e0          	: add r1, r1, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 18 81 e0          	: add r1, r1, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 00 81 e0          	: add r0, r1, ip
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x69809950, value: 0x0!! Count 493 Skipping to end.
 >> Run result: Fault errored program - last instruction: 492.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 30 81 e0          	: add r3, r1, ip
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 50 81 e0          	: add r5, r1, ip
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000071c. Hit: 1. Lifespan: 2. Instruction: 00000482. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 90 81 e0          	: add sb, r1, ip
 >> Lifespan countdown: 2. (0x80000720)
 >> Lifespan countdown: 1. (0x80000724)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 0. Instruction: 00000487. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000730
 >> Updated                     : 0x0000000080000734
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x1
 >> Updated instruction            :  31 00 1b e5          	: ldr r0, [fp, #-0x31]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x2
 >> Updated instruction            :  32 00 1b e5          	: ldr r0, [fp, #-0x32]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x4
 >> Updated instruction            :  34 00 1b e5          	: ldr r0, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x8
 >> Updated instruction            :  38 00 1b e5          	: ldr r0, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x10
 >> Updated instruction            :  20 00 1b e5          	: ldr r0, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x20
 >> Updated instruction            :  10 00 1b e5          	: ldr r0, [fp, #-0x10]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x40
 >> Updated instruction            :  70 00 1b e5          	: ldr r0, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x80
 >> Updated instruction            :  b0 00 1b e5          	: ldr r0, [fp, #-0xb0]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x100
 >> Updated instruction            :  30 01 1b e5          	: ldr r0, [fp, #-0x130]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x200
 >> Updated instruction            :  30 02 1b e5          	: ldr r0, [fp, #-0x230]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x400
 >> Updated instruction            :  30 04 1b e5          	: ldr r0, [fp, #-0x430]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x800
 >> Updated instruction            :  30 08 1b e5          	: ldr r0, [fp, #-0x830]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x1000
 >> Updated instruction            :  30 10 1b e5          	: ldr r1, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x78, value: 0x8010ff60!! Count 493 Skipping to end.
 >> Run result: Fault errored program - last instruction: 492.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x2000
 >> Updated instruction            :  30 20 1b e5          	: ldr r2, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x4000
 >> Updated instruction            :  30 40 1b e5          	: ldr r4, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000730. Hit: 1. Lifespan: 2. Instruction: 00000487. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 00 1b e5          	: ldr r0, [fp, #-0x30]
 >> Mask                           :  0x8000
 >> Updated instruction            :  30 80 1b e5          	: ldr r8, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000734)
 >> Lifespan countdown: 1. (0x80000738)
 >> Reverting instruction          :  30 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 0. Instruction: 00000495. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000750
 >> Updated                     : 0x0000000080000754
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 20 02 e0          	: and r2, r2, sp
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 20 02 e0          	: and r2, r2, lr
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 20 02 e0          	: and r2, r2, r8
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 20 02 e0          	: and r2, r2, r4
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 20 02 e0          	: and r2, r2, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 20 02 e0          	: and r2, r2, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 20 02 e0          	: and r2, r2, ip, asr #32
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 20 02 e0          	: and r2, r2, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 21 02 e0          	: and r2, r2, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 22 02 e0          	: and r2, r2, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 24 02 e0          	: and r2, r2, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 28 02 e0          	: and r2, r2, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 30 02 e0          	: and r3, r2, ip
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 00 02 e0          	: and r0, r2, ip
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 60 02 e0          	: and r6, r2, ip
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000750. Hit: 1. Lifespan: 2. Instruction: 00000495. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 02 e0          	: and r2, r2, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c a0 02 e0          	: and sl, r2, ip
 >> Lifespan countdown: 2. (0x80000754)
 >> Lifespan countdown: 1. (0x80000758)
 >> Reverting instruction          :  0c 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 0. Instruction: 00000503. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000770
 >> Updated                     : 0x0000000080000774
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x1
 >> Updated instruction            :  7d a0 81 e5          	: str sl, [r1, #0x7d]
 >> Lifespan countdown: 2. (0x80000774)
 >> Lifespan countdown: 1. (0x80000778)
 >> Reverting instruction          :  7c a0 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x2
 >> Updated instruction            :  7e a0 81 e5          	: str sl, [r1, #0x7e]
 >> Lifespan countdown: 2. (0x80000774)
 >> Lifespan countdown: 1. (0x80000778)
 >> Reverting instruction          :  7c a0 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x4
 >> Updated instruction            :  78 a0 81 e5          	: str sl, [r1, #0x78]
 >> Lifespan countdown: 2. (0x80000774)
 >> Lifespan countdown: 1. (0x80000778)
 >> Reverting instruction          :  7c a0 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x8
 >> Updated instruction            :  74 a0 81 e5          	: str sl, [r1, #0x74]
 >> Lifespan countdown: 2. (0x80000774)
 >> Lifespan countdown: 1. (0x80000778)
 >> Reverting instruction          :  7c a0 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x10
 >> Updated instruction            :  6c a0 81 e5          	: str sl, [r1, #0x6c]
 >> Lifespan countdown: 2. (0x80000774)
 >> Lifespan countdown: 1. (0x80000778)
 >> Reverting instruction          :  7c a0 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x20
 >> Updated instruction            :  5c a0 81 e5          	: str sl, [r1, #0x5c]
 >> Lifespan countdown: 2. (0x80000774)
 >> Lifespan countdown: 1. (0x80000778)
 >> Reverting instruction          :  7c a0 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x40
 >> Updated instruction            :  3c a0 81 e5          	: str sl, [r1, #0x3c]
 >> Lifespan countdown: 2. (0x80000774)
 >> Lifespan countdown: 1. (0x80000778)
 >> Reverting instruction          :  7c a0 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x80
 >> Updated instruction            :  fc a0 81 e5          	: str sl, [r1, #0xfc]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011005c, value: 0x0!! Count 504 Skipping to end.
 >> Run result: Fault errored program - last instruction: 503.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x100
 >> Updated instruction            :  7c a1 81 e5          	: str sl, [r1, #0x17c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100dc, value: 0x0!! Count 504 Skipping to end.
 >> Run result: Fault errored program - last instruction: 503.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x200
 >> Updated instruction            :  7c a2 81 e5          	: str sl, [r1, #0x27c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101dc, value: 0x0!! Count 504 Skipping to end.
 >> Run result: Fault errored program - last instruction: 503.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x400
 >> Updated instruction            :  7c a4 81 e5          	: str sl, [r1, #0x47c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103dc, value: 0x0!! Count 504 Skipping to end.
 >> Run result: Fault errored program - last instruction: 503.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x800
 >> Updated instruction            :  7c a8 81 e5          	: str sl, [r1, #0x87c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107dc, value: 0x0!! Count 504 Skipping to end.
 >> Run result: Fault errored program - last instruction: 503.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  7c b0 81 e5          	: str fp, [r1, #0x7c]
 >> Lifespan countdown: 2. (0x80000774)
 >> Lifespan countdown: 1. (0x80000778)
 >> Reverting instruction          :  7c a0 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  7c 80 81 e5          	: str r8, [r1, #0x7c]
 >> Lifespan countdown: 2. (0x80000774)
 >> Lifespan countdown: 1. (0x80000778)
 >> Reverting instruction          :  7c a0 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  7c e0 81 e5          	: str lr, [r1, #0x7c]
 >> Lifespan countdown: 2. (0x80000774)
 >> Lifespan countdown: 1. (0x80000778)
 >> Reverting instruction          :  7c a0 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000770. Hit: 1. Lifespan: 2. Instruction: 00000503. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7c a0 81 e5          	: str sl, [r1, #0x7c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  7c 20 81 e5          	: str r2, [r1, #0x7c]
 >> Lifespan countdown: 2. (0x80000774)
 >> Lifespan countdown: 1. (0x80000778)
 >> Reverting instruction          :  7c a0 81 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 0. Instruction: 00000512. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000794
 >> Updated                     : 0x0000000080000798
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x1
 >> Updated instruction            :  28 2b 42 e2          	: sub r2, r2, #40, #22
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x2
 >> Updated instruction            :  2b 2b 42 e2          	: sub r2, r2, #0xac00
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x4
 >> Updated instruction            :  2d 2b 42 e2          	: sub r2, r2, #0xb400
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x8
 >> Updated instruction            :  21 2b 42 e2          	: sub r2, r2, #0x8400
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x10
 >> Updated instruction            :  39 2b 42 e2          	: sub r2, r2, #0xe400
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x20
 >> Updated instruction            :  09 2b 42 e2          	: sub r2, r2, #0x2400
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x40
 >> Updated instruction            :  69 2b 42 e2          	: sub r2, r2, #0x1a400
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x80
 >> Updated instruction            :  a9 2b 42 e2          	: sub r2, r2, #0x2a400
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x100
 >> Updated instruction            :  29 2a 42 e2          	: sub r2, r2, #0x29000
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x200
 >> Updated instruction            :  29 29 42 e2          	: sub r2, r2, #0xa4000
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x400
 >> Updated instruction            :  29 2f 42 e2          	: sub r2, r2, #41, #30
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x800
 >> Updated instruction            :  29 23 42 e2          	: sub r2, r2, #0xa4000000
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x1000
 >> Updated instruction            :  29 3b 42 e2          	: sub r3, r2, #0xa400
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x2000
 >> Updated instruction            :  29 0b 42 e2          	: sub r0, r2, #0xa400
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x4000
 >> Updated instruction            :  29 6b 42 e2          	: sub r6, r2, #0xa400
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000794. Hit: 1. Lifespan: 2. Instruction: 00000512. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  29 2b 42 e2          	: sub r2, r2, #0xa400
 >> Mask                           :  0x8000
 >> Updated instruction            :  29 ab 42 e2          	: sub sl, r2, #0xa400
 >> Lifespan countdown: 2. (0x80000798)
 >> Lifespan countdown: 1. (0x8000079c)
 >> Reverting instruction          :  29 2b 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 0. Instruction: 00000520. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007b4
 >> Updated                     : 0x00000000800007b8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 50 2c e0          	: eor r5, ip, r1
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 50 2c e0          	: eor r5, ip, r2
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 50 2c e0          	: eor r5, ip, r4
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 50 2c e0          	: eor r5, ip, r8
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 50 2c e0          	: eor r5, ip, r0, lsl r0
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 50 2c e0          	: eor r5, ip, r0, lsr #32
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 50 2c e0          	: eor r5, ip, r0, asr #32
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 50 2c e0          	: eor r5, ip, r0, lsl #1
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 51 2c e0          	: eor r5, ip, r0, lsl #2
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 52 2c e0          	: eor r5, ip, r0, lsl #4
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 54 2c e0          	: eor r5, ip, r0, lsl #8
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 58 2c e0          	: eor r5, ip, r0, lsl #16
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 40 2c e0          	: eor r4, ip, r0
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 70 2c e0          	: eor r7, ip, r0
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 10 2c e0          	: eor r1, ip, r0
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000721e8724, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 523.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007b4. Hit: 1. Lifespan: 2. Instruction: 00000520. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 2c e0          	: eor r5, ip, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 d0 2c e0          	: eor sp, ip, r0
 >> Lifespan countdown: 2. (0x800007b8)
 >> Lifespan countdown: 1. (0x800007bc)
 >> Reverting instruction          :  00 50 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 0. Instruction: 00000528. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007d4
 >> Updated                     : 0x00000000800007d8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 10 25 e0          	: eor r1, r5, sp
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 10 25 e0          	: eor r1, r5, lr
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 10 25 e0          	: eor r1, r5, r8
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 10 25 e0          	: eor r1, r5, r4
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 10 25 e0          	: eor r1, r5, ip, lsl r0
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 10 25 e0          	: eor r1, r5, ip, lsr #32
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 10 25 e0          	: eor r1, r5, ip, asr #32
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 10 25 e0          	: eor r1, r5, ip, lsl #1
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 11 25 e0          	: eor r1, r5, ip, lsl #2
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 12 25 e0          	: eor r1, r5, ip, lsl #4
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 14 25 e0          	: eor r1, r5, ip, lsl #8
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 18 25 e0          	: eor r1, r5, ip, lsl #16
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 00 25 e0          	: eor r0, r5, ip
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 30 25 e0          	: eor r3, r5, ip
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 50 25 e0          	: eor r5, r5, ip
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d4. Hit: 1. Lifespan: 2. Instruction: 00000528. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 25 e0          	: eor r1, r5, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 90 25 e0          	: eor sb, r5, ip
 >> Lifespan countdown: 2. (0x800007d8)
 >> Lifespan countdown: 1. (0x800007dc)
 >> Reverting instruction          :  0c 10 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 0. Instruction: 00000539. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000800
 >> Updated                     : 0x0000000080000804
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 e0 25 e0          	: eor lr, r5, r1
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 e0 25 e0          	: eor lr, r5, r2
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 e0 25 e0          	: eor lr, r5, r4
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 e0 25 e0          	: eor lr, r5, r8
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 e0 25 e0          	: eor lr, r5, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 e0 25 e0          	: eor lr, r5, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 e0 25 e0          	: eor lr, r5, r0, asr #32
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 e0 25 e0          	: eor lr, r5, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 e1 25 e0          	: eor lr, r5, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 e2 25 e0          	: eor lr, r5, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 e4 25 e0          	: eor lr, r5, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 e8 25 e0          	: eor lr, r5, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 f0 25 e0          	: eor pc, r5, r0
 >!  Erm -  fetching from unmapped memory, address: 0xa84cc394, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 539.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 c0 25 e0          	: eor ip, r5, r0
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 a0 25 e0          	: eor sl, r5, r0
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000800. Hit: 1. Lifespan: 2. Instruction: 00000539. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 25 e0          	: eor lr, r5, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 60 25 e0          	: eor r6, r5, r0
 >> Lifespan countdown: 2. (0x80000804)
 >> Lifespan countdown: 1. (0x80000808)
 >> Reverting instruction          :  00 e0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 0. Instruction: 00000547. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000820
 >> Updated                     : 0x0000000080000824
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x1
 >> Updated instruction            :  35 c0 9c e5          	: ldr ip, [ip, #0x35]
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  34 c0 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x2
 >> Updated instruction            :  36 c0 9c e5          	: ldr ip, [ip, #0x36]
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  34 c0 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x4
 >> Updated instruction            :  30 c0 9c e5          	: ldr ip, [ip, #0x30]
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  34 c0 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x8
 >> Updated instruction            :  3c c0 9c e5          	: ldr ip, [ip, #0x3c]
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  34 c0 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x10
 >> Updated instruction            :  24 c0 9c e5          	: ldr ip, [ip, #0x24]
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  34 c0 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x20
 >> Updated instruction            :  14 c0 9c e5          	: ldr ip, [ip, #0x14]
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  34 c0 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x40
 >> Updated instruction            :  74 c0 9c e5          	: ldr ip, [ip, #0x74]
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  34 c0 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x80
 >> Updated instruction            :  b4 c0 9c e5          	: ldr ip, [ip, #0xb4]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011002c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x100
 >> Updated instruction            :  34 c1 9c e5          	: ldr ip, [ip, #0x134]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801100ac, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x200
 >> Updated instruction            :  34 c2 9c e5          	: ldr ip, [ip, #0x234]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801101ac, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x400
 >> Updated instruction            :  34 c4 9c e5          	: ldr ip, [ip, #0x434]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801103ac, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x800
 >> Updated instruction            :  34 c8 9c e5          	: ldr ip, [ip, #0x834]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801107ac, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x1000
 >> Updated instruction            :  34 d0 9c e5          	: ldr sp, [ip, #0x34]
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  34 c0 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x2000
 >> Updated instruction            :  34 e0 9c e5          	: ldr lr, [ip, #0x34]
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  34 c0 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x4000
 >> Updated instruction            :  34 80 9c e5          	: ldr r8, [ip, #0x34]
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  34 c0 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000820. Hit: 1. Lifespan: 2. Instruction: 00000547. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 9c e5          	: ldr ip, [ip, #0x34]
 >> Mask                           :  0x8000
 >> Updated instruction            :  34 40 9c e5          	: ldr r4, [ip, #0x34]
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  34 c0 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 0. Instruction: 00000555. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000840
 >> Updated                     : 0x0000000080000844
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a06028cf, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x1
 >> Updated instruction            :  29 c0 1b e5          	: ldr ip, [fp, #-0x29]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff78b8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x2
 >> Updated instruction            :  2a c0 1b e5          	: ldr ip, [fp, #-0x2a]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff788048, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x4
 >> Updated instruction            :  2c c0 1b e5          	: ldr ip, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x8
 >> Updated instruction            :  20 c0 1b e5          	: ldr ip, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x10
 >> Updated instruction            :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000038, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x20
 >> Updated instruction            :  08 c0 1b e5          	: ldr ip, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000038, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x40
 >> Updated instruction            :  68 c0 1b e5          	: ldr ip, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000067452339, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x80
 >> Updated instruction            :  a8 c0 1b e5          	: ldr ip, [fp, #-0xa8]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000038, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x100
 >> Updated instruction            :  28 c1 1b e5          	: ldr ip, [fp, #-0x128]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000038, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x200
 >> Updated instruction            :  28 c2 1b e5          	: ldr ip, [fp, #-0x228]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000038, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x400
 >> Updated instruction            :  28 c4 1b e5          	: ldr ip, [fp, #-0x428]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000038, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x800
 >> Updated instruction            :  28 c8 1b e5          	: ldr ip, [fp, #-0x828]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000038, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x1000
 >> Updated instruction            :  28 d0 1b e5          	: ldr sp, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a06028cf, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x2000
 >> Updated instruction            :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a06028cf, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x4000
 >> Updated instruction            :  28 80 1b e5          	: ldr r8, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a06028cf, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000840. Hit: 1. Lifespan: 2. Instruction: 00000555. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x8000
 >> Updated instruction            :  28 40 1b e5          	: ldr r4, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000844)
 >> Lifespan countdown: 1. (0x80000848)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a06028cf, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 0. Instruction: 00000562. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000085c
 >> Updated                     : 0x0000000080000860
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 c0 0c e0          	: and ip, ip, r1
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 c0 0c e0          	: and ip, ip, r2
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 c0 0c e0          	: and ip, ip, r4
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 c0 0c e0          	: and ip, ip, r8
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 c0 0c e0          	: and ip, ip, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 c0 0c e0          	: and ip, ip, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 c0 0c e0          	: and ip, ip, r0, asr #32
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 c0 0c e0          	: and ip, ip, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 c1 0c e0          	: and ip, ip, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 c2 0c e0          	: and ip, ip, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 c4 0c e0          	: and ip, ip, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 c8 0c e0          	: and ip, ip, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 d0 0c e0          	: and sp, ip, r0
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 e0 0c e0          	: and lr, ip, r0
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 80 0c e0          	: and r8, ip, r0
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000085c. Hit: 1. Lifespan: 2. Instruction: 00000562. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 40 0c e0          	: and r4, ip, r0
 >> Lifespan countdown: 2. (0x80000860)
 >> Lifespan countdown: 1. (0x80000864)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 0. Instruction: 00000571. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000880
 >> Updated                     : 0x0000000080000884
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 c0 2e e0          	: eor ip, lr, r1
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 c0 2e e0          	: eor ip, lr, r2
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 c0 2e e0          	: eor ip, lr, r4
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 c0 2e e0          	: eor ip, lr, r8
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 c0 2e e0          	: eor ip, lr, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 c0 2e e0          	: eor ip, lr, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 c0 2e e0          	: eor ip, lr, r0, asr #32
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 c0 2e e0          	: eor ip, lr, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 c1 2e e0          	: eor ip, lr, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 c2 2e e0          	: eor ip, lr, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 c4 2e e0          	: eor ip, lr, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 c8 2e e0          	: eor ip, lr, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 d0 2e e0          	: eor sp, lr, r0
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 e0 2e e0          	: eor lr, lr, r0
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 80 2e e0          	: eor r8, lr, r0
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000880. Hit: 1. Lifespan: 2. Instruction: 00000571. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2e e0          	: eor ip, lr, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 40 2e e0          	: eor r4, lr, r0
 >> Lifespan countdown: 2. (0x80000884)
 >> Lifespan countdown: 1. (0x80000888)
 >> Reverting instruction          :  00 c0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 0. Instruction: 00000580. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008a4
 >> Updated                     : 0x00000000800008a8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 10 8c e0          	: add r1, ip, r0
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 10 8c e0          	: add r1, ip, r3
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 10 8c e0          	: add r1, ip, r5
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 10 8c e0          	: add r1, ip, sb
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 10 8c e0          	: add r1, ip, r1, lsl r0
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 10 8c e0          	: add r1, ip, r1, lsr #32
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 10 8c e0          	: add r1, ip, r1, asr #32
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 10 8c e0          	: add r1, ip, r1, lsl #1
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 11 8c e0          	: add r1, ip, r1, lsl #2
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 12 8c e0          	: add r1, ip, r1, lsl #4
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 14 8c e0          	: add r1, ip, r1, lsl #8
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 18 8c e0          	: add r1, ip, r1, lsl #16
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 00 8c e0          	: add r0, ip, r1
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 30 8c e0          	: add r3, ip, r1
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 50 8c e0          	: add r5, ip, r1
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a4. Hit: 1. Lifespan: 2. Instruction: 00000580. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 8c e0          	: add r1, ip, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 90 8c e0          	: add sb, ip, r1
 >> Lifespan countdown: 2. (0x800008a8)
 >> Lifespan countdown: 1. (0x800008ac)
 >> Reverting instruction          :  01 10 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 0. Instruction: 00000588. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008c4
 >> Updated                     : 0x00000000800008c8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 90 08 e0          	: and sb, r8, r1
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 90 08 e0          	: and sb, r8, r2
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 90 08 e0          	: and sb, r8, r4
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 90 08 e0          	: and sb, r8, r8
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 90 08 e0          	: and sb, r8, r0, lsl r0
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 90 08 e0          	: and sb, r8, r0, lsr #32
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 90 08 e0          	: and sb, r8, r0, asr #32
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 90 08 e0          	: and sb, r8, r0, lsl #1
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 91 08 e0          	: and sb, r8, r0, lsl #2
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 92 08 e0          	: and sb, r8, r0, lsl #4
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 94 08 e0          	: and sb, r8, r0, lsl #8
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 98 08 e0          	: and sb, r8, r0, lsl #16
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 80 08 e0          	: and r8, r8, r0
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 b0 08 e0          	: and fp, r8, r0
 >> Lifespan countdown: 2. (0x800008c8)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000010c028, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 589.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 d0 08 e0          	: and sp, r8, r0
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008c4. Hit: 1. Lifespan: 2. Instruction: 00000588. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 08 e0          	: and sb, r8, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 10 08 e0          	: and r1, r8, r0
 >> Lifespan countdown: 2. (0x800008c8)
 >> Lifespan countdown: 1. (0x800008cc)
 >> Reverting instruction          :  00 90 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 0. Instruction: 00000598. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008ec
 >> Updated                     : 0x00000000800008f0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x1
 >> Updated instruction            :  39 c0 1b e5          	: ldr ip, [fp, #-0x39]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x2
 >> Updated instruction            :  3a c0 1b e5          	: ldr ip, [fp, #-0x3a]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x4
 >> Updated instruction            :  3c c0 1b e5          	: ldr ip, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x8
 >> Updated instruction            :  30 c0 1b e5          	: ldr ip, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x10
 >> Updated instruction            :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x20
 >> Updated instruction            :  18 c0 1b e5          	: ldr ip, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x40
 >> Updated instruction            :  78 c0 1b e5          	: ldr ip, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x80
 >> Updated instruction            :  b8 c0 1b e5          	: ldr ip, [fp, #-0xb8]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x100
 >> Updated instruction            :  38 c1 1b e5          	: ldr ip, [fp, #-0x138]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x200
 >> Updated instruction            :  38 c2 1b e5          	: ldr ip, [fp, #-0x238]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x400
 >> Updated instruction            :  38 c4 1b e5          	: ldr ip, [fp, #-0x438]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x800
 >> Updated instruction            :  38 c8 1b e5          	: ldr ip, [fp, #-0x838]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x1000
 >> Updated instruction            :  38 d0 1b e5          	: ldr sp, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x2000
 >> Updated instruction            :  38 e0 1b e5          	: ldr lr, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x4000
 >> Updated instruction            :  38 80 1b e5          	: ldr r8, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ec. Hit: 1. Lifespan: 2. Instruction: 00000598. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Mask                           :  0x8000
 >> Updated instruction            :  38 40 1b e5          	: ldr r4, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800008f0)
 >> Lifespan countdown: 1. (0x800008f4)
 >> Reverting instruction          :  38 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 0. Instruction: 00000605. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000908
 >> Updated                     : 0x000000008000090c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 c0 8c e0          	: add ip, ip, r1
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 c0 8c e0          	: add ip, ip, r2
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 c0 8c e0          	: add ip, ip, r4
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 c0 8c e0          	: add ip, ip, r8
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 c0 8c e0          	: add ip, ip, r0, lsl r0
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 c0 8c e0          	: add ip, ip, r0, lsr #32
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 c0 8c e0          	: add ip, ip, r0, asr #32
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 c0 8c e0          	: add ip, ip, r0, lsl #1
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 c1 8c e0          	: add ip, ip, r0, lsl #2
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 c2 8c e0          	: add ip, ip, r0, lsl #4
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 c4 8c e0          	: add ip, ip, r0, lsl #8
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 c8 8c e0          	: add ip, ip, r0, lsl #16
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 d0 8c e0          	: add sp, ip, r0
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 e0 8c e0          	: add lr, ip, r0
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 80 8c e0          	: add r8, ip, r0
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000908. Hit: 1. Lifespan: 2. Instruction: 00000605. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 40 8c e0          	: add r4, ip, r0
 >> Lifespan countdown: 2. (0x8000090c)
 >> Lifespan countdown: 1. (0x80000910)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 0. Instruction: 00000614. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000092c
 >> Updated                     : 0x0000000080000930
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x1
 >> Updated instruction            :  59 00 1b e5          	: ldr r0, [fp, #-0x59]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x2
 >> Updated instruction            :  5a 00 1b e5          	: ldr r0, [fp, #-0x5a]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x4
 >> Updated instruction            :  5c 00 1b e5          	: ldr r0, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x8
 >> Updated instruction            :  50 00 1b e5          	: ldr r0, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x10
 >> Updated instruction            :  48 00 1b e5          	: ldr r0, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x20
 >> Updated instruction            :  78 00 1b e5          	: ldr r0, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x40
 >> Updated instruction            :  18 00 1b e5          	: ldr r0, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x80
 >> Updated instruction            :  d8 00 1b e5          	: ldr r0, [fp, #-0xd8]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x100
 >> Updated instruction            :  58 01 1b e5          	: ldr r0, [fp, #-0x158]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x200
 >> Updated instruction            :  58 02 1b e5          	: ldr r0, [fp, #-0x258]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x400
 >> Updated instruction            :  58 04 1b e5          	: ldr r0, [fp, #-0x458]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x800
 >> Updated instruction            :  58 08 1b e5          	: ldr r0, [fp, #-0x858]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x1000
 >> Updated instruction            :  58 10 1b e5          	: ldr r1, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x2000
 >> Updated instruction            :  58 20 1b e5          	: ldr r2, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x4000
 >> Updated instruction            :  58 40 1b e5          	: ldr r4, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000092c. Hit: 1. Lifespan: 2. Instruction: 00000614. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 00 1b e5          	: ldr r0, [fp, #-0x58]
 >> Mask                           :  0x8000
 >> Updated instruction            :  58 80 1b e5          	: ldr r8, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000930)
 >> Lifespan countdown: 1. (0x80000934)
 >> Reverting instruction          :  58 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 0. Instruction: 00000621. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000948
 >> Updated                     : 0x000000008000094c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x1
 >> Updated instruction            :  2e 56 4d e3          	: movt r5, #0xd62e
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x2
 >> Updated instruction            :  2d 56 4d e3          	: movt r5, #0xd62d
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x4
 >> Updated instruction            :  2b 56 4d e3          	: movt r5, #0xd62b
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x8
 >> Updated instruction            :  27 56 4d e3          	: movt r5, #0xd627
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x10
 >> Updated instruction            :  3f 56 4d e3          	: movt r5, #0xd63f
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x20
 >> Updated instruction            :  0f 56 4d e3          	: movt r5, #0xd60f
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x40
 >> Updated instruction            :  6f 56 4d e3          	: movt r5, #0xd66f
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x80
 >> Updated instruction            :  af 56 4d e3          	: movt r5, #0xd6af
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x100
 >> Updated instruction            :  2f 57 4d e3          	: movt r5, #0xd72f
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x200
 >> Updated instruction            :  2f 54 4d e3          	: movt r5, #0xd42f
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x400
 >> Updated instruction            :  2f 52 4d e3          	: movt r5, #0xd22f
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x800
 >> Updated instruction            :  2f 5e 4d e3          	: movt r5, #0xde2f
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x1000
 >> Updated instruction            :  2f 46 4d e3          	: movt r4, #0xd62f
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x2000
 >> Updated instruction            :  2f 76 4d e3          	: movt r7, #0xd62f
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x4000
 >> Updated instruction            :  2f 16 4d e3          	: movt r1, #0xd62f
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000948. Hit: 1. Lifespan: 2. Instruction: 00000621. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2f 56 4d e3          	: movt r5, #0xd62f
 >> Mask                           :  0x8000
 >> Updated instruction            :  2f d6 4d e3          	: movt sp, #0xd62f
 >> Lifespan countdown: 2. (0x8000094c)
 >> Lifespan countdown: 1. (0x80000950)
 >> Reverting instruction          :  2f 56 4d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 0. Instruction: 00000628. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000964
 >> Updated                     : 0x0000000080000968
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 10 2c e0          	: eor r1, ip, sb
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 10 2c e0          	: eor r1, ip, sl
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 10 2c e0          	: eor r1, ip, ip
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 10 2c e0          	: eor r1, ip, r0
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 10 2c e0          	: eor r1, ip, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 10 2c e0          	: eor r1, ip, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 10 2c e0          	: eor r1, ip, r8, asr #32
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 10 2c e0          	: eor r1, ip, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 11 2c e0          	: eor r1, ip, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 12 2c e0          	: eor r1, ip, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 14 2c e0          	: eor r1, ip, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 18 2c e0          	: eor r1, ip, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 00 2c e0          	: eor r0, ip, r8
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 30 2c e0          	: eor r3, ip, r8
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 50 2c e0          	: eor r5, ip, r8
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000964. Hit: 1. Lifespan: 2. Instruction: 00000628. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 2c e0          	: eor r1, ip, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 90 2c e0          	: eor sb, ip, r8
 >> Lifespan countdown: 2. (0x80000968)
 >> Lifespan countdown: 1. (0x8000096c)
 >> Reverting instruction          :  08 10 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 0. Instruction: 00000637. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000988
 >> Updated                     : 0x000000008000098c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x1
 >> Updated instruction            :  6f e6 88 e0          	: add lr, r8, pc, ror #12
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x2
 >> Updated instruction            :  6c e6 88 e0          	: add lr, r8, ip, ror #12
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x4
 >> Updated instruction            :  6a e6 88 e0          	: add lr, r8, sl, ror #12
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x8
 >> Updated instruction            :  66 e6 88 e0          	: add lr, r8, r6, ror #12
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x10
 >> Updated instruction            :  7e e6 88 e0          	: add lr, r8, lr, ror r6
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x20
 >> Updated instruction            :  4e e6 88 e0          	: add lr, r8, lr, asr #12
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x40
 >> Updated instruction            :  2e e6 88 e0          	: add lr, r8, lr, lsr #12
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x80
 >> Updated instruction            :  ee e6 88 e0          	: add lr, r8, lr, ror #13
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x100
 >> Updated instruction            :  6e e7 88 e0          	: add lr, r8, lr, ror #14
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x200
 >> Updated instruction            :  6e e4 88 e0          	: add lr, r8, lr, ror #8
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x400
 >> Updated instruction            :  6e e2 88 e0          	: add lr, r8, lr, ror #4
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x800
 >> Updated instruction            :  6e ee 88 e0          	: add lr, r8, lr, ror #28
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x1000
 >> Updated instruction            :  6e f6 88 e0          	: add pc, r8, lr, ror #12
 >!  Erm -  fetching from unmapped memory, address: 0x8a2f08ec, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 637.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x2000
 >> Updated instruction            :  6e c6 88 e0          	: add ip, r8, lr, ror #12
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x4000
 >> Updated instruction            :  6e a6 88 e0          	: add sl, r8, lr, ror #12
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000988. Hit: 1. Lifespan: 2. Instruction: 00000637. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e6 88 e0          	: add lr, r8, lr, ror #12
 >> Mask                           :  0x8000
 >> Updated instruction            :  6e 66 88 e0          	: add r6, r8, lr, ror #12
 >> Lifespan countdown: 2. (0x8000098c)
 >> Lifespan countdown: 1. (0x80000990)
 >> Reverting instruction          :  6e e6 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 0. Instruction: 00000646. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009ac
 >> Updated                     : 0x00000000800009b0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x1
 >> Updated instruction            :  55 10 1b e5          	: ldr r1, [fp, #-0x55]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x2
 >> Updated instruction            :  56 10 1b e5          	: ldr r1, [fp, #-0x56]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x4
 >> Updated instruction            :  50 10 1b e5          	: ldr r1, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x8
 >> Updated instruction            :  5c 10 1b e5          	: ldr r1, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x10
 >> Updated instruction            :  44 10 1b e5          	: ldr r1, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x20
 >> Updated instruction            :  74 10 1b e5          	: ldr r1, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x40
 >> Updated instruction            :  14 10 1b e5          	: ldr r1, [fp, #-0x14]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x80
 >> Updated instruction            :  d4 10 1b e5          	: ldr r1, [fp, #-0xd4]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x100
 >> Updated instruction            :  54 11 1b e5          	: ldr r1, [fp, #-0x154]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x200
 >> Updated instruction            :  54 12 1b e5          	: ldr r1, [fp, #-0x254]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x400
 >> Updated instruction            :  54 14 1b e5          	: ldr r1, [fp, #-0x454]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x800
 >> Updated instruction            :  54 18 1b e5          	: ldr r1, [fp, #-0x854]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x1000
 >> Updated instruction            :  54 00 1b e5          	: ldr r0, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x2000
 >> Updated instruction            :  54 30 1b e5          	: ldr r3, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x4000
 >> Updated instruction            :  54 50 1b e5          	: ldr r5, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009ac. Hit: 1. Lifespan: 2. Instruction: 00000646. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 10 1b e5          	: ldr r1, [fp, #-0x54]
 >> Mask                           :  0x8000
 >> Updated instruction            :  54 90 1b e5          	: ldr sb, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x800009b0)
 >> Lifespan countdown: 1. (0x800009b4)
 >> Reverting instruction          :  54 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 0. Instruction: 00000654. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009cc
 >> Updated                     : 0x00000000800009d0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x1
 >> Updated instruction            :  35 80 1b e5          	: ldr r8, [fp, #-0x35]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x2
 >> Updated instruction            :  36 80 1b e5          	: ldr r8, [fp, #-0x36]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x4
 >> Updated instruction            :  30 80 1b e5          	: ldr r8, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x8
 >> Updated instruction            :  3c 80 1b e5          	: ldr r8, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x10
 >> Updated instruction            :  24 80 1b e5          	: ldr r8, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x20
 >> Updated instruction            :  14 80 1b e5          	: ldr r8, [fp, #-0x14]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x40
 >> Updated instruction            :  74 80 1b e5          	: ldr r8, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x80
 >> Updated instruction            :  b4 80 1b e5          	: ldr r8, [fp, #-0xb4]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x100
 >> Updated instruction            :  34 81 1b e5          	: ldr r8, [fp, #-0x134]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x200
 >> Updated instruction            :  34 82 1b e5          	: ldr r8, [fp, #-0x234]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x400
 >> Updated instruction            :  34 84 1b e5          	: ldr r8, [fp, #-0x434]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x800
 >> Updated instruction            :  34 88 1b e5          	: ldr r8, [fp, #-0x834]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x1000
 >> Updated instruction            :  34 90 1b e5          	: ldr sb, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x2000
 >> Updated instruction            :  34 a0 1b e5          	: ldr sl, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x4000
 >> Updated instruction            :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009cc. Hit: 1. Lifespan: 2. Instruction: 00000654. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Mask                           :  0x8000
 >> Updated instruction            :  34 00 1b e5          	: ldr r0, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x800009d0)
 >> Lifespan countdown: 1. (0x800009d4)
 >> Reverting instruction          :  34 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 0. Instruction: 00000661. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009e8
 >> Updated                     : 0x00000000800009ec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 10 21 e0          	: eor r1, r1, r4
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 10 21 e0          	: eor r1, r1, r7
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 10 21 e0          	: eor r1, r1, r1
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 10 21 e0          	: eor r1, r1, sp
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 10 21 e0          	: eor r1, r1, r5, lsl r0
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 10 21 e0          	: eor r1, r1, r5, lsr #32
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 10 21 e0          	: eor r1, r1, r5, asr #32
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 10 21 e0          	: eor r1, r1, r5, lsl #1
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 11 21 e0          	: eor r1, r1, r5, lsl #2
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 12 21 e0          	: eor r1, r1, r5, lsl #4
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 14 21 e0          	: eor r1, r1, r5, lsl #8
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 18 21 e0          	: eor r1, r1, r5, lsl #16
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 00 21 e0          	: eor r0, r1, r5
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 30 21 e0          	: eor r3, r1, r5
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 50 21 e0          	: eor r5, r1, r5
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e8. Hit: 1. Lifespan: 2. Instruction: 00000661. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 21 e0          	: eor r1, r1, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 90 21 e0          	: eor sb, r1, r5
 >> Lifespan countdown: 2. (0x800009ec)
 >> Lifespan countdown: 1. (0x800009f0)
 >> Reverting instruction          :  05 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 0. Instruction: 00000669. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a08
 >> Updated                     : 0x0000000080000a0c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 80 20 e0          	: eor r8, r0, r0
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 80 20 e0          	: eor r8, r0, r3
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 80 20 e0          	: eor r8, r0, r5
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 80 20 e0          	: eor r8, r0, sb
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 80 20 e0          	: eor r8, r0, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 80 20 e0          	: eor r8, r0, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 80 20 e0          	: eor r8, r0, r1, asr #32
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 80 20 e0          	: eor r8, r0, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 81 20 e0          	: eor r8, r0, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 82 20 e0          	: eor r8, r0, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 84 20 e0          	: eor r8, r0, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 88 20 e0          	: eor r8, r0, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 90 20 e0          	: eor sb, r0, r1
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 a0 20 e0          	: eor sl, r0, r1
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 c0 20 e0          	: eor ip, r0, r1
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a08. Hit: 1. Lifespan: 2. Instruction: 00000669. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 20 e0          	: eor r8, r0, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 00 20 e0          	: eor r0, r0, r1
 >> Lifespan countdown: 2. (0x80000a0c)
 >> Lifespan countdown: 1. (0x80000a10)
 >> Reverting instruction          :  01 80 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 0. Instruction: 00000677. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a28
 >> Updated                     : 0x0000000080000a2c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 50 21 e0          	: eor r5, r1, sp
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 50 21 e0          	: eor r5, r1, lr
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 50 21 e0          	: eor r5, r1, r8
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 50 21 e0          	: eor r5, r1, r4
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 50 21 e0          	: eor r5, r1, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 50 21 e0          	: eor r5, r1, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 50 21 e0          	: eor r5, r1, ip, asr #32
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 50 21 e0          	: eor r5, r1, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 51 21 e0          	: eor r5, r1, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 52 21 e0          	: eor r5, r1, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 54 21 e0          	: eor r5, r1, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 58 21 e0          	: eor r5, r1, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 40 21 e0          	: eor r4, r1, ip
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 70 21 e0          	: eor r7, r1, ip
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 10 21 e0          	: eor r1, r1, ip
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a28. Hit: 1. Lifespan: 2. Instruction: 00000677. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 21 e0          	: eor r5, r1, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c d0 21 e0          	: eor sp, r1, ip
 >> Lifespan countdown: 2. (0x80000a2c)
 >> Lifespan countdown: 1. (0x80000a30)
 >> Reverting instruction          :  0c 50 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 0. Instruction: 00000686. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a4c
 >> Updated                     : 0x0000000080000a50
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x1
 >> Updated instruction            :  e8 9d 8c e0          	: add sb, ip, r8, ror #27
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x2
 >> Updated instruction            :  eb 9d 8c e0          	: add sb, ip, fp, ror #27
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x4
 >> Updated instruction            :  ed 9d 8c e0          	: add sb, ip, sp, ror #27
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x8
 >> Updated instruction            :  e1 9d 8c e0          	: add sb, ip, r1, ror #27
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x10
 >> Updated instruction            :  f9 9d 8c e0          	: strd sb, sl, [ip], sb
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 686.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x20
 >> Updated instruction            :  c9 9d 8c e0          	: add sb, ip, sb, asr #27
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x40
 >> Updated instruction            :  a9 9d 8c e0          	: add sb, ip, sb, lsr #27
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x80
 >> Updated instruction            :  69 9d 8c e0          	: add sb, ip, sb, ror #26
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x100
 >> Updated instruction            :  e9 9c 8c e0          	: add sb, ip, sb, ror #25
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x200
 >> Updated instruction            :  e9 9f 8c e0          	: add sb, ip, sb, ror #31
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x400
 >> Updated instruction            :  e9 99 8c e0          	: add sb, ip, sb, ror #19
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x800
 >> Updated instruction            :  e9 95 8c e0          	: add sb, ip, sb, ror #11
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x1000
 >> Updated instruction            :  e9 8d 8c e0          	: add r8, ip, sb, ror #27
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x2000
 >> Updated instruction            :  e9 bd 8c e0          	: add fp, ip, sb, ror #27
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000059b6ee24, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 702.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x4000
 >> Updated instruction            :  e9 dd 8c e0          	: add sp, ip, sb, ror #27
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a4c. Hit: 1. Lifespan: 2. Instruction: 00000686. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 9d 8c e0          	: add sb, ip, sb, ror #27
 >> Mask                           :  0x8000
 >> Updated instruction            :  e9 1d 8c e0          	: add r1, ip, sb, ror #27
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e9 9d 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 0. Instruction: 00000692. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a64
 >> Updated                     : 0x0000000080000a68
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 80 88 e0          	: add r8, r8, pc
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 80 88 e0          	: add r8, r8, ip
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 80 88 e0          	: add r8, r8, sl
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 80 88 e0          	: add r8, r8, r6
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 80 88 e0          	: add r8, r8, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 80 88 e0          	: add r8, r8, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 80 88 e0          	: add r8, r8, lr, asr #32
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 80 88 e0          	: add r8, r8, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 81 88 e0          	: add r8, r8, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 82 88 e0          	: add r8, r8, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 84 88 e0          	: add r8, r8, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 88 88 e0          	: add r8, r8, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 90 88 e0          	: add sb, r8, lr
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e a0 88 e0          	: add sl, r8, lr
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e c0 88 e0          	: add ip, r8, lr
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a64. Hit: 1. Lifespan: 2. Instruction: 00000692. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 00 88 e0          	: add r0, r8, lr
 >> Lifespan countdown: 2. (0x80000a68)
 >> Lifespan countdown: 1. (0x80000a6c)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 0. Instruction: 00000700. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a84
 >> Updated                     : 0x0000000080000a88
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x1
 >> Updated instruction            :  ee cc 4f e3          	: movt ip, #0xfcee
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x2
 >> Updated instruction            :  ed cc 4f e3          	: movt ip, #0xfced
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x4
 >> Updated instruction            :  eb cc 4f e3          	: movt ip, #0xfceb
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x8
 >> Updated instruction            :  e7 cc 4f e3          	: movt ip, #0xfce7
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x10
 >> Updated instruction            :  ff cc 4f e3          	: movt ip, #0xfcff
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x20
 >> Updated instruction            :  cf cc 4f e3          	: movt ip, #0xfccf
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x40
 >> Updated instruction            :  af cc 4f e3          	: movt ip, #0xfcaf
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x80
 >> Updated instruction            :  6f cc 4f e3          	: movt ip, #0xfc6f
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x100
 >> Updated instruction            :  ef cd 4f e3          	: movt ip, #0xfdef
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x200
 >> Updated instruction            :  ef ce 4f e3          	: movt ip, #0xfeef
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x400
 >> Updated instruction            :  ef c8 4f e3          	: movt ip, #0xf8ef
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x800
 >> Updated instruction            :  ef c4 4f e3          	: movt ip, #0xf4ef
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x1000
 >> Updated instruction            :  ef dc 4f e3          	: movt sp, #0xfcef
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x2000
 >> Updated instruction            :  ef ec 4f e3          	: movt lr, #0xfcef
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x4000
 >> Updated instruction            :  ef 8c 4f e3          	: movt r8, #0xfcef
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a84. Hit: 1. Lifespan: 2. Instruction: 00000700. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ef cc 4f e3          	: movt ip, #0xfcef
 >> Mask                           :  0x8000
 >> Updated instruction            :  ef 4c 4f e3          	: movt r4, #0xfcef
 >> Lifespan countdown: 2. (0x80000a88)
 >> Lifespan countdown: 1. (0x80000a8c)
 >> Reverting instruction          :  ef cc 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 0. Instruction: 00000708. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000aa4
 >> Updated                     : 0x0000000080000aa8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x1
 >> Updated instruction            :  d8 a2 00 e3          	: movw sl, #0x2d8
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x2
 >> Updated instruction            :  db a2 00 e3          	: movw sl, #0x2db
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x4
 >> Updated instruction            :  dd a2 00 e3          	: movw sl, #0x2dd
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x8
 >> Updated instruction            :  d1 a2 00 e3          	: movw sl, #0x2d1
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x10
 >> Updated instruction            :  c9 a2 00 e3          	: movw sl, #0x2c9
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x20
 >> Updated instruction            :  f9 a2 00 e3          	: movw sl, #0x2f9
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x40
 >> Updated instruction            :  99 a2 00 e3          	: movw sl, #0x299
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x80
 >> Updated instruction            :  59 a2 00 e3          	: movw sl, #0x259
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x100
 >> Updated instruction            :  d9 a3 00 e3          	: movw sl, #0x3d9
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x200
 >> Updated instruction            :  d9 a0 00 e3          	: movw sl, #0xd9
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x400
 >> Updated instruction            :  d9 a6 00 e3          	: movw sl, #0x6d9
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x800
 >> Updated instruction            :  d9 aa 00 e3          	: movw sl, #0xad9
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x1000
 >> Updated instruction            :  d9 b2 00 e3          	: movw fp, #0x2d9
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000281, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 732.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x2000
 >> Updated instruction            :  d9 82 00 e3          	: movw r8, #0x2d9
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x4000
 >> Updated instruction            :  d9 e2 00 e3          	: movw lr, #0x2d9
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa4. Hit: 1. Lifespan: 2. Instruction: 00000708. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d9 a2 00 e3          	: movw sl, #0x2d9
 >> Mask                           :  0x8000
 >> Updated instruction            :  d9 22 00 e3          	: movw r2, #0x2d9
 >> Lifespan countdown: 2. (0x80000aa8)
 >> Lifespan countdown: 1. (0x80000aac)
 >> Reverting instruction          :  d9 a2 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 0. Instruction: 00000716. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ac4
 >> Updated                     : 0x0000000080000ac8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x1
 >> Updated instruction            :  2b 9d 48 e3          	: movt sb, #0x8d2b
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x2
 >> Updated instruction            :  28 9d 48 e3          	: movt sb, #0x8d28
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x4
 >> Updated instruction            :  2e 9d 48 e3          	: movt sb, #0x8d2e
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x8
 >> Updated instruction            :  22 9d 48 e3          	: movt sb, #0x8d22
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x10
 >> Updated instruction            :  3a 9d 48 e3          	: movt sb, #0x8d3a
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x20
 >> Updated instruction            :  0a 9d 48 e3          	: movt sb, #0x8d0a
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x40
 >> Updated instruction            :  6a 9d 48 e3          	: movt sb, #0x8d6a
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x80
 >> Updated instruction            :  aa 9d 48 e3          	: movt sb, #0x8daa
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x100
 >> Updated instruction            :  2a 9c 48 e3          	: movt sb, #0x8c2a
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x200
 >> Updated instruction            :  2a 9f 48 e3          	: movt sb, #0x8f2a
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x400
 >> Updated instruction            :  2a 99 48 e3          	: movt sb, #0x892a
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x800
 >> Updated instruction            :  2a 95 48 e3          	: movt sb, #0x852a
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x1000
 >> Updated instruction            :  2a 8d 48 e3          	: movt r8, #0x8d2a
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x2000
 >> Updated instruction            :  2a bd 48 e3          	: movt fp, #0x8d2a
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008d2afec4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 732.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x4000
 >> Updated instruction            :  2a dd 48 e3          	: movt sp, #0x8d2a
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ac4. Hit: 1. Lifespan: 2. Instruction: 00000716. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 9d 48 e3          	: movt sb, #0x8d2a
 >> Mask                           :  0x8000
 >> Updated instruction            :  2a 1d 48 e3          	: movt r1, #0x8d2a
 >> Lifespan countdown: 2. (0x80000ac8)
 >> Lifespan countdown: 1. (0x80000acc)
 >> Reverting instruction          :  2a 9d 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 0. Instruction: 00000722. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000adc
 >> Updated                     : 0x0000000080000ae0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 10 88 e0          	: add r1, r8, r0
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 10 88 e0          	: add r1, r8, r3
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 10 88 e0          	: add r1, r8, r5
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 10 88 e0          	: add r1, r8, sb
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 10 88 e0          	: add r1, r8, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 10 88 e0          	: add r1, r8, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 10 88 e0          	: add r1, r8, r1, asr #32
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 10 88 e0          	: add r1, r8, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 11 88 e0          	: add r1, r8, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 12 88 e0          	: add r1, r8, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 14 88 e0          	: add r1, r8, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 18 88 e0          	: add r1, r8, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 00 88 e0          	: add r0, r8, r1
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 30 88 e0          	: add r3, r8, r1
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 50 88 e0          	: add r5, r8, r1
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000adc. Hit: 1. Lifespan: 2. Instruction: 00000722. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 90 88 e0          	: add sb, r8, r1
 >> Lifespan countdown: 2. (0x80000ae0)
 >> Lifespan countdown: 1. (0x80000ae4)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 0. Instruction: 00000731. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b00
 >> Updated                     : 0x0000000080000b04
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d e0 8e e0          	: add lr, lr, sp
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e e0 8e e0          	: add lr, lr, lr
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 e0 8e e0          	: add lr, lr, r8
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 e0 8e e0          	: add lr, lr, r4
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c e0 8e e0          	: add lr, lr, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c e0 8e e0          	: add lr, lr, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c e0 8e e0          	: add lr, lr, ip, asr #32
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c e0 8e e0          	: add lr, lr, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c e1 8e e0          	: add lr, lr, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c e2 8e e0          	: add lr, lr, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c e4 8e e0          	: add lr, lr, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c e8 8e e0          	: add lr, lr, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c f0 8e e0          	: add pc, lr, ip
 >!  Erm -  fetching from unmapped memory, address: 0x3337a96e, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 731.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c c0 8e e0          	: add ip, lr, ip
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c a0 8e e0          	: add sl, lr, ip
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b00. Hit: 1. Lifespan: 2. Instruction: 00000731. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c e0 8e e0          	: add lr, lr, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 60 8e e0          	: add r6, lr, ip
 >> Lifespan countdown: 2. (0x80000b04)
 >> Lifespan countdown: 1. (0x80000b08)
 >> Reverting instruction          :  0c e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 0. Instruction: 00000739. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b20
 >> Updated                     : 0x0000000080000b24
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 c0 2c e0          	: eor ip, ip, r0
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 c0 2c e0          	: eor ip, ip, r3
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 c0 2c e0          	: eor ip, ip, r5
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 c0 2c e0          	: eor ip, ip, sb
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 c0 2c e0          	: eor ip, ip, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 c0 2c e0          	: eor ip, ip, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 c0 2c e0          	: eor ip, ip, r1, asr #32
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 c0 2c e0          	: eor ip, ip, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 c1 2c e0          	: eor ip, ip, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 c2 2c e0          	: eor ip, ip, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 c4 2c e0          	: eor ip, ip, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 c8 2c e0          	: eor ip, ip, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 d0 2c e0          	: eor sp, ip, r1
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 e0 2c e0          	: eor lr, ip, r1
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 80 2c e0          	: eor r8, ip, r1
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b20. Hit: 1. Lifespan: 2. Instruction: 00000739. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 40 2c e0          	: eor r4, ip, r1
 >> Lifespan countdown: 2. (0x80000b24)
 >> Lifespan countdown: 1. (0x80000b28)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 0. Instruction: 00000749. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b48
 >> Updated                     : 0x0000000080000b4c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x1
 >> Updated instruction            :  9c 0d 46 e3          	: movt r0, #0x6d9c
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x2
 >> Updated instruction            :  9f 0d 46 e3          	: movt r0, #0x6d9f
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x4
 >> Updated instruction            :  99 0d 46 e3          	: movt r0, #0x6d99
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x8
 >> Updated instruction            :  95 0d 46 e3          	: movt r0, #0x6d95
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x10
 >> Updated instruction            :  8d 0d 46 e3          	: movt r0, #0x6d8d
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x20
 >> Updated instruction            :  bd 0d 46 e3          	: movt r0, #0x6dbd
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x40
 >> Updated instruction            :  dd 0d 46 e3          	: movt r0, #0x6ddd
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x80
 >> Updated instruction            :  1d 0d 46 e3          	: movt r0, #0x6d1d
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x100
 >> Updated instruction            :  9d 0c 46 e3          	: movt r0, #0x6c9d
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x200
 >> Updated instruction            :  9d 0f 46 e3          	: movt r0, #0x6f9d
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x400
 >> Updated instruction            :  9d 09 46 e3          	: movt r0, #0x699d
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x800
 >> Updated instruction            :  9d 05 46 e3          	: movt r0, #0x659d
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x1000
 >> Updated instruction            :  9d 1d 46 e3          	: movt r1, #0x6d9d
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x2000
 >> Updated instruction            :  9d 2d 46 e3          	: movt r2, #0x6d9d
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x4000
 >> Updated instruction            :  9d 4d 46 e3          	: movt r4, #0x6d9d
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b48. Hit: 1. Lifespan: 2. Instruction: 00000749. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9d 0d 46 e3          	: movt r0, #0x6d9d
 >> Mask                           :  0x8000
 >> Updated instruction            :  9d 8d 46 e3          	: movt r8, #0x6d9d
 >> Lifespan countdown: 2. (0x80000b4c)
 >> Lifespan countdown: 1. (0x80000b50)
 >> Reverting instruction          :  9d 0d 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 0. Instruction: 00000757. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b68
 >> Updated                     : 0x0000000080000b6c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 18 03 e3          	: movw r1, #0x380d
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 18 03 e3          	: movw r1, #0x380e
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x4
 >> Updated instruction            :  08 18 03 e3          	: movw r1, #0x3808
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x8
 >> Updated instruction            :  04 18 03 e3          	: movw r1, #0x3804
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 18 03 e3          	: movw r1, #0x381c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 18 03 e3          	: movw r1, #0x382c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 18 03 e3          	: movw r1, #0x384c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 18 03 e3          	: movw r1, #0x388c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 19 03 e3          	: movw r1, #0x390c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 1a 03 e3          	: movw r1, #0x3a0c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 1c 03 e3          	: movw r1, #0x3c0c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 10 03 e3          	: movw r1, #0x300c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 08 03 e3          	: movw r0, #0x380c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 38 03 e3          	: movw r3, #0x380c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 58 03 e3          	: movw r5, #0x380c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b68. Hit: 1. Lifespan: 2. Instruction: 00000757. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 18 03 e3          	: movw r1, #0x380c
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 98 03 e3          	: movw sb, #0x380c
 >> Lifespan countdown: 2. (0x80000b6c)
 >> Lifespan countdown: 1. (0x80000b70)
 >> Reverting instruction          :  0c 18 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 0. Instruction: 00000768. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b94
 >> Updated                     : 0x0000000080000b98
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x1
 >> Updated instruction            :  a8 8f 0c e3          	: movw r8, #0xcfa8
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x2
 >> Updated instruction            :  ab 8f 0c e3          	: movw r8, #0xcfab
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x4
 >> Updated instruction            :  ad 8f 0c e3          	: movw r8, #0xcfad
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x8
 >> Updated instruction            :  a1 8f 0c e3          	: movw r8, #0xcfa1
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x10
 >> Updated instruction            :  b9 8f 0c e3          	: movw r8, #0xcfb9
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x20
 >> Updated instruction            :  89 8f 0c e3          	: movw r8, #0xcf89
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x40
 >> Updated instruction            :  e9 8f 0c e3          	: movw r8, #0xcfe9
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x80
 >> Updated instruction            :  29 8f 0c e3          	: movw r8, #0xcf29
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x100
 >> Updated instruction            :  a9 8e 0c e3          	: movw r8, #0xcea9
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x200
 >> Updated instruction            :  a9 8d 0c e3          	: movw r8, #0xcda9
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x400
 >> Updated instruction            :  a9 8b 0c e3          	: movw r8, #0xcba9
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x800
 >> Updated instruction            :  a9 87 0c e3          	: movw r8, #0xc7a9
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x1000
 >> Updated instruction            :  a9 9f 0c e3          	: movw sb, #0xcfa9
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x2000
 >> Updated instruction            :  a9 af 0c e3          	: movw sl, #0xcfa9
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x4000
 >> Updated instruction            :  a9 cf 0c e3          	: movw ip, #0xcfa9
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b94. Hit: 1. Lifespan: 2. Instruction: 00000768. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a9 8f 0c e3          	: movw r8, #0xcfa9
 >> Mask                           :  0x8000
 >> Updated instruction            :  a9 0f 0c e3          	: movw r0, #0xcfa9
 >> Lifespan countdown: 2. (0x80000b98)
 >> Lifespan countdown: 1. (0x80000b9c)
 >> Reverting instruction          :  a9 8f 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 0. Instruction: 00000777. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bb8
 >> Updated                     : 0x0000000080000bbc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x1
 >> Updated instruction            :  61 9b 04 e3          	: movw sb, #0x4b61
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x2
 >> Updated instruction            :  62 9b 04 e3          	: movw sb, #0x4b62
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x4
 >> Updated instruction            :  64 9b 04 e3          	: movw sb, #0x4b64
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x8
 >> Updated instruction            :  68 9b 04 e3          	: movw sb, #0x4b68
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x10
 >> Updated instruction            :  70 9b 04 e3          	: movw sb, #0x4b70
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x20
 >> Updated instruction            :  40 9b 04 e3          	: movw sb, #0x4b40
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x40
 >> Updated instruction            :  20 9b 04 e3          	: movw sb, #0x4b20
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x80
 >> Updated instruction            :  e0 9b 04 e3          	: movw sb, #0x4be0
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x100
 >> Updated instruction            :  60 9a 04 e3          	: movw sb, #0x4a60
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x200
 >> Updated instruction            :  60 99 04 e3          	: movw sb, #0x4960
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x400
 >> Updated instruction            :  60 9f 04 e3          	: movw sb, #0x4f60
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x800
 >> Updated instruction            :  60 93 04 e3          	: movw sb, #0x4360
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x1000
 >> Updated instruction            :  60 8b 04 e3          	: movw r8, #0x4b60
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x2000
 >> Updated instruction            :  60 bb 04 e3          	: movw fp, #0x4b60
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000004b00, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 779.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x4000
 >> Updated instruction            :  60 db 04 e3          	: movw sp, #0x4b60
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb8. Hit: 1. Lifespan: 2. Instruction: 00000777. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 9b 04 e3          	: movw sb, #0x4b60
 >> Mask                           :  0x8000
 >> Updated instruction            :  60 1b 04 e3          	: movw r1, #0x4b60
 >> Lifespan countdown: 2. (0x80000bbc)
 >> Lifespan countdown: 1. (0x80000bc0)
 >> Reverting instruction          :  60 9b 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 0. Instruction: 00000785. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bd8
 >> Updated                     : 0x0000000080000bdc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x1
 >> Updated instruction            :  71 1c 0b e3          	: movw r1, #0xbc71
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x2
 >> Updated instruction            :  72 1c 0b e3          	: movw r1, #0xbc72
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x4
 >> Updated instruction            :  74 1c 0b e3          	: movw r1, #0xbc74
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x8
 >> Updated instruction            :  78 1c 0b e3          	: movw r1, #0xbc78
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x10
 >> Updated instruction            :  60 1c 0b e3          	: movw r1, #0xbc60
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x20
 >> Updated instruction            :  50 1c 0b e3          	: movw r1, #0xbc50
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x40
 >> Updated instruction            :  30 1c 0b e3          	: movw r1, #0xbc30
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x80
 >> Updated instruction            :  f0 1c 0b e3          	: movw r1, #0xbcf0
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x100
 >> Updated instruction            :  70 1d 0b e3          	: movw r1, #0xbd70
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x200
 >> Updated instruction            :  70 1e 0b e3          	: movw r1, #0xbe70
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x400
 >> Updated instruction            :  70 18 0b e3          	: movw r1, #0xb870
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x800
 >> Updated instruction            :  70 14 0b e3          	: movw r1, #0xb470
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x1000
 >> Updated instruction            :  70 0c 0b e3          	: movw r0, #0xbc70
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x2000
 >> Updated instruction            :  70 3c 0b e3          	: movw r3, #0xbc70
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x4000
 >> Updated instruction            :  70 5c 0b e3          	: movw r5, #0xbc70
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd8. Hit: 1. Lifespan: 2. Instruction: 00000785. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 1c 0b e3          	: movw r1, #0xbc70
 >> Mask                           :  0x8000
 >> Updated instruction            :  70 9c 0b e3          	: movw sb, #0xbc70
 >> Lifespan countdown: 2. (0x80000bdc)
 >> Lifespan countdown: 1. (0x80000be0)
 >> Reverting instruction          :  70 1c 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 0. Instruction: 00000794. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bfc
 >> Updated                     : 0x0000000080000c00
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 00 80 e0          	: add r0, r0, pc
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 00 80 e0          	: add r0, r0, ip
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 00 80 e0          	: add r0, r0, sl
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 00 80 e0          	: add r0, r0, r6
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 00 80 e0          	: add r0, r0, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 00 80 e0          	: add r0, r0, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 00 80 e0          	: add r0, r0, lr, asr #32
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 00 80 e0          	: add r0, r0, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 01 80 e0          	: add r0, r0, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 02 80 e0          	: add r0, r0, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 04 80 e0          	: add r0, r0, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 08 80 e0          	: add r0, r0, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 10 80 e0          	: add r1, r0, lr
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 20 80 e0          	: add r2, r0, lr
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 40 80 e0          	: add r4, r0, lr
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bfc. Hit: 1. Lifespan: 2. Instruction: 00000794. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 80 80 e0          	: add r8, r0, lr
 >> Lifespan countdown: 2. (0x80000c00)
 >> Lifespan countdown: 1. (0x80000c04)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 0. Instruction: 00000802. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c1c
 >> Updated                     : 0x0000000080000c20
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 c0 8c e0          	: add ip, ip, r1
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 c0 8c e0          	: add ip, ip, r2
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 c0 8c e0          	: add ip, ip, r4
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 c0 8c e0          	: add ip, ip, r8
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 c0 8c e0          	: add ip, ip, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 c0 8c e0          	: add ip, ip, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 c0 8c e0          	: add ip, ip, r0, asr #32
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 c0 8c e0          	: add ip, ip, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 c1 8c e0          	: add ip, ip, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 c2 8c e0          	: add ip, ip, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 c4 8c e0          	: add ip, ip, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 c8 8c e0          	: add ip, ip, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 d0 8c e0          	: add sp, ip, r0
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 e0 8c e0          	: add lr, ip, r0
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 80 8c e0          	: add r8, ip, r0
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c1c. Hit: 1. Lifespan: 2. Instruction: 00000802. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 8c e0          	: add ip, ip, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 40 8c e0          	: add r4, ip, r0
 >> Lifespan countdown: 2. (0x80000c20)
 >> Lifespan countdown: 1. (0x80000c24)
 >> Reverting instruction          :  00 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 0. Instruction: 00000810. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c3c
 >> Updated                     : 0x0000000080000c40
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x1
 >> Updated instruction            :  84 50 03 e3          	: movw r5, #0x3084
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x2
 >> Updated instruction            :  87 50 03 e3          	: movw r5, #0x3087
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x4
 >> Updated instruction            :  81 50 03 e3          	: movw r5, #0x3081
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x8
 >> Updated instruction            :  8d 50 03 e3          	: movw r5, #0x308d
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x10
 >> Updated instruction            :  95 50 03 e3          	: movw r5, #0x3095
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x20
 >> Updated instruction            :  a5 50 03 e3          	: movw r5, #0x30a5
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x40
 >> Updated instruction            :  c5 50 03 e3          	: movw r5, #0x30c5
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x80
 >> Updated instruction            :  05 50 03 e3          	: movw r5, #0x3005
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x100
 >> Updated instruction            :  85 51 03 e3          	: movw r5, #0x3185
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x200
 >> Updated instruction            :  85 52 03 e3          	: movw r5, #0x3285
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x400
 >> Updated instruction            :  85 54 03 e3          	: movw r5, #0x3485
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x800
 >> Updated instruction            :  85 58 03 e3          	: movw r5, #0x3885
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x1000
 >> Updated instruction            :  85 40 03 e3          	: movw r4, #0x3085
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x2000
 >> Updated instruction            :  85 70 03 e3          	: movw r7, #0x3085
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x4000
 >> Updated instruction            :  85 10 03 e3          	: movw r1, #0x3085
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c3c. Hit: 1. Lifespan: 2. Instruction: 00000810. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  85 50 03 e3          	: movw r5, #0x3085
 >> Mask                           :  0x8000
 >> Updated instruction            :  85 d0 03 e3          	: movw sp, #0x3085
 >> Lifespan countdown: 2. (0x80000c40)
 >> Lifespan countdown: 1. (0x80000c44)
 >> Reverting instruction          :  85 50 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 0. Instruction: 00000817. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c58
 >> Updated                     : 0x0000000080000c5c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 50 85 e0          	: add r5, r5, pc
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 50 85 e0          	: add r5, r5, ip
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 50 85 e0          	: add r5, r5, sl
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 50 85 e0          	: add r5, r5, r6
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 50 85 e0          	: add r5, r5, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 50 85 e0          	: add r5, r5, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 50 85 e0          	: add r5, r5, lr, asr #32
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 50 85 e0          	: add r5, r5, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 51 85 e0          	: add r5, r5, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 52 85 e0          	: add r5, r5, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 54 85 e0          	: add r5, r5, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 58 85 e0          	: add r5, r5, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 40 85 e0          	: add r4, r5, lr
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 70 85 e0          	: add r7, r5, lr
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 10 85 e0          	: add r1, r5, lr
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c58. Hit: 1. Lifespan: 2. Instruction: 00000817. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 50 85 e0          	: add r5, r5, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e d0 85 e0          	: add sp, r5, lr
 >> Lifespan countdown: 2. (0x80000c5c)
 >> Lifespan countdown: 1. (0x80000c60)
 >> Reverting instruction          :  0e 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 0. Instruction: 00000827. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c80
 >> Updated                     : 0x0000000080000c84
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 90 89 e0          	: add sb, sb, sp
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 90 89 e0          	: add sb, sb, lr
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 90 89 e0          	: add sb, sb, r8
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 90 89 e0          	: add sb, sb, r4
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 90 89 e0          	: add sb, sb, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 90 89 e0          	: add sb, sb, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 90 89 e0          	: add sb, sb, ip, asr #32
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 90 89 e0          	: add sb, sb, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 91 89 e0          	: add sb, sb, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 92 89 e0          	: add sb, sb, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 94 89 e0          	: add sb, sb, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 98 89 e0          	: add sb, sb, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 80 89 e0          	: add r8, sb, ip
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c b0 89 e0          	: add fp, sb, ip
 >> Lifespan countdown: 2. (0x80000c84)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008fba1b95, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 828.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c d0 89 e0          	: add sp, sb, ip
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c80. Hit: 1. Lifespan: 2. Instruction: 00000827. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 89 e0          	: add sb, sb, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 10 89 e0          	: add r1, sb, ip
 >> Lifespan countdown: 2. (0x80000c84)
 >> Lifespan countdown: 1. (0x80000c88)
 >> Reverting instruction          :  0c 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 0. Instruction: 00000836. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ca4
 >> Updated                     : 0x0000000080000ca8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 a0 8a e0          	: add sl, sl, r8
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b a0 8a e0          	: add sl, sl, fp
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d a0 8a e0          	: add sl, sl, sp
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 a0 8a e0          	: add sl, sl, r1
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 a0 8a e0          	: add sl, sl, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 a0 8a e0          	: add sl, sl, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 a0 8a e0          	: add sl, sl, sb, asr #32
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 a0 8a e0          	: add sl, sl, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 a1 8a e0          	: add sl, sl, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 a2 8a e0          	: add sl, sl, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 a4 8a e0          	: add sl, sl, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 a8 8a e0          	: add sl, sl, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 b0 8a e0          	: add fp, sl, sb
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000b755ac55, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 845.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 80 8a e0          	: add r8, sl, sb
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 e0 8a e0          	: add lr, sl, sb
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca4. Hit: 1. Lifespan: 2. Instruction: 00000836. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 8a e0          	: add sl, sl, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 20 8a e0          	: add r2, sl, sb
 >> Lifespan countdown: 2. (0x80000ca8)
 >> Lifespan countdown: 1. (0x80000cac)
 >> Reverting instruction          :  09 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 0. Instruction: 00000846. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ccc
 >> Updated                     : 0x0000000080000cd0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 82 e0          	: add r0, r2, r1
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 82 e0          	: add r0, r2, r2
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 82 e0          	: add r0, r2, r4
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 82 e0          	: add r0, r2, r8
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 82 e0          	: add r0, r2, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 82 e0          	: add r0, r2, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 82 e0          	: add r0, r2, r0, asr #32
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 82 e0          	: add r0, r2, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 82 e0          	: add r0, r2, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 82 e0          	: add r0, r2, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 82 e0          	: add r0, r2, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 82 e0          	: add r0, r2, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 82 e0          	: add r1, r2, r0
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 82 e0          	: add r2, r2, r0
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 82 e0          	: add r4, r2, r0
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ccc. Hit: 1. Lifespan: 2. Instruction: 00000846. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 82 e0          	: add r0, r2, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 82 e0          	: add r8, r2, r0
 >> Lifespan countdown: 2. (0x80000cd0)
 >> Lifespan countdown: 1. (0x80000cd4)
 >> Reverting instruction          :  00 00 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 0. Instruction: 00000853. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ce8
 >> Updated                     : 0x0000000080000cec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x1
 >> Updated instruction            :  e8 94 8c e0          	: add sb, ip, r8, ror #9
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x2
 >> Updated instruction            :  eb 94 8c e0          	: add sb, ip, fp, ror #9
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x4
 >> Updated instruction            :  ed 94 8c e0          	: add sb, ip, sp, ror #9
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x8
 >> Updated instruction            :  e1 94 8c e0          	: add sb, ip, r1, ror #9
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x10
 >> Updated instruction            :  f9 94 8c e0          	: strd sb, sl, [ip], sb
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 853.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x20
 >> Updated instruction            :  c9 94 8c e0          	: add sb, ip, sb, asr #9
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x40
 >> Updated instruction            :  a9 94 8c e0          	: add sb, ip, sb, lsr #9
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x80
 >> Updated instruction            :  69 94 8c e0          	: add sb, ip, sb, ror #8
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x100
 >> Updated instruction            :  e9 95 8c e0          	: add sb, ip, sb, ror #11
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x200
 >> Updated instruction            :  e9 96 8c e0          	: add sb, ip, sb, ror #13
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x400
 >> Updated instruction            :  e9 90 8c e0          	: add sb, ip, sb, ror #1
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x800
 >> Updated instruction            :  e9 9c 8c e0          	: add sb, ip, sb, ror #25
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x1000
 >> Updated instruction            :  e9 84 8c e0          	: add r8, ip, sb, ror #9
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x2000
 >> Updated instruction            :  e9 b4 8c e0          	: add fp, ip, sb, ror #9
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000099d6543c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 860.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x4000
 >> Updated instruction            :  e9 d4 8c e0          	: add sp, ip, sb, ror #9
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce8. Hit: 1. Lifespan: 2. Instruction: 00000853. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e9 94 8c e0          	: add sb, ip, sb, ror #9
 >> Mask                           :  0x8000
 >> Updated instruction            :  e9 14 8c e0          	: add r1, ip, sb, ror #9
 >> Lifespan countdown: 2. (0x80000cec)
 >> Lifespan countdown: 1. (0x80000cf0)
 >> Reverting instruction          :  e9 94 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 0. Instruction: 00000859. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d00
 >> Updated                     : 0x0000000080000d04
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 50 85 e0          	: add r5, r5, fp
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 50 85 e0          	: add r5, r5, r8
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 50 85 e0          	: add r5, r5, lr
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 50 85 e0          	: add r5, r5, r2
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 50 85 e0          	: add r5, r5, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 50 85 e0          	: add r5, r5, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 50 85 e0          	: add r5, r5, sl, asr #32
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 50 85 e0          	: add r5, r5, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 51 85 e0          	: add r5, r5, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 52 85 e0          	: add r5, r5, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 54 85 e0          	: add r5, r5, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 58 85 e0          	: add r5, r5, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 40 85 e0          	: add r4, r5, sl
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 70 85 e0          	: add r7, r5, sl
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a 10 85 e0          	: add r1, r5, sl
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d00. Hit: 1. Lifespan: 2. Instruction: 00000859. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 85 e0          	: add r5, r5, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a d0 85 e0          	: add sp, r5, sl
 >> Lifespan countdown: 2. (0x80000d04)
 >> Lifespan countdown: 1. (0x80000d08)
 >> Reverting instruction          :  0a 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 0. Instruction: 00000866. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d1c
 >> Updated                     : 0x0000000080000d20
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 c0 8c e0          	: add ip, ip, sb
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a c0 8c e0          	: add ip, ip, sl
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c c0 8c e0          	: add ip, ip, ip
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 c0 8c e0          	: add ip, ip, r0
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 c0 8c e0          	: add ip, ip, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 c0 8c e0          	: add ip, ip, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 c0 8c e0          	: add ip, ip, r8, asr #32
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 c0 8c e0          	: add ip, ip, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 c1 8c e0          	: add ip, ip, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 c2 8c e0          	: add ip, ip, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 c4 8c e0          	: add ip, ip, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 c8 8c e0          	: add ip, ip, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 d0 8c e0          	: add sp, ip, r8
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 e0 8c e0          	: add lr, ip, r8
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 80 8c e0          	: add r8, ip, r8
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d1c. Hit: 1. Lifespan: 2. Instruction: 00000866. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 40 8c e0          	: add r4, ip, r8
 >> Lifespan countdown: 2. (0x80000d20)
 >> Lifespan countdown: 1. (0x80000d24)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 0. Instruction: 00000874. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d3c
 >> Updated                     : 0x0000000080000d40
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 40 25 e0          	: eor r4, r5, r8
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b 40 25 e0          	: eor r4, r5, fp
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d 40 25 e0          	: eor r4, r5, sp
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 40 25 e0          	: eor r4, r5, r1
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 40 25 e0          	: eor r4, r5, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 40 25 e0          	: eor r4, r5, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 40 25 e0          	: eor r4, r5, sb, asr #32
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 40 25 e0          	: eor r4, r5, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 41 25 e0          	: eor r4, r5, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 42 25 e0          	: eor r4, r5, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 44 25 e0          	: eor r4, r5, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 48 25 e0          	: eor r4, r5, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 50 25 e0          	: eor r5, r5, sb
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 60 25 e0          	: eor r6, r5, sb
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 00 25 e0          	: eor r0, r5, sb
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d3c. Hit: 1. Lifespan: 2. Instruction: 00000874. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 40 25 e0          	: eor r4, r5, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 c0 25 e0          	: eor ip, r5, sb
 >> Lifespan countdown: 2. (0x80000d40)
 >> Lifespan countdown: 1. (0x80000d44)
 >> Reverting instruction          :  09 40 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 0. Instruction: 00000884. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d64
 >> Updated                     : 0x0000000080000d68
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 10 85 e0          	: add r1, r5, r0
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 10 85 e0          	: add r1, r5, r3
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 10 85 e0          	: add r1, r5, r5
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 10 85 e0          	: add r1, r5, sb
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 10 85 e0          	: add r1, r5, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 10 85 e0          	: add r1, r5, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 10 85 e0          	: add r1, r5, r1, asr #32
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 10 85 e0          	: add r1, r5, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 11 85 e0          	: add r1, r5, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 12 85 e0          	: add r1, r5, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 14 85 e0          	: add r1, r5, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 18 85 e0          	: add r1, r5, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 00 85 e0          	: add r0, r5, r1
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 30 85 e0          	: add r3, r5, r1
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 50 85 e0          	: add r5, r5, r1
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d64. Hit: 1. Lifespan: 2. Instruction: 00000884. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 90 85 e0          	: add sb, r5, r1
 >> Lifespan countdown: 2. (0x80000d68)
 >> Lifespan countdown: 1. (0x80000d6c)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 0. Instruction: 00000894. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d8c
 >> Updated                     : 0x0000000080000d90
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 00 80 e0          	: add r0, r0, pc
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 00 80 e0          	: add r0, r0, ip
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 00 80 e0          	: add r0, r0, sl
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 00 80 e0          	: add r0, r0, r6
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 00 80 e0          	: add r0, r0, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 00 80 e0          	: add r0, r0, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 00 80 e0          	: add r0, r0, lr, asr #32
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 00 80 e0          	: add r0, r0, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 01 80 e0          	: add r0, r0, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 02 80 e0          	: add r0, r0, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 04 80 e0          	: add r0, r0, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 08 80 e0          	: add r0, r0, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 10 80 e0          	: add r1, r0, lr
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 20 80 e0          	: add r2, r0, lr
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 40 80 e0          	: add r4, r0, lr
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d8c. Hit: 1. Lifespan: 2. Instruction: 00000894. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 80 e0          	: add r0, r0, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 80 80 e0          	: add r8, r0, lr
 >> Lifespan countdown: 2. (0x80000d90)
 >> Lifespan countdown: 1. (0x80000d94)
 >> Reverting instruction          :  0e 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 0. Instruction: 00000900. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000da4
 >> Updated                     : 0x0000000080000da8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 40 84 e1          	: orr r4, r4, r1
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 40 84 e1          	: orr r4, r4, r2
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 40 84 e1          	: orr r4, r4, r4
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 40 84 e1          	: orr r4, r4, r8
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 40 84 e1          	: orr r4, r4, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 40 84 e1          	: orr r4, r4, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 40 84 e1          	: orr r4, r4, r0, asr #32
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 40 84 e1          	: orr r4, r4, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 41 84 e1          	: orr r4, r4, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 42 84 e1          	: orr r4, r4, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 44 84 e1          	: orr r4, r4, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 48 84 e1          	: orr r4, r4, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 50 84 e1          	: orr r5, r4, r0
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 60 84 e1          	: orr r6, r4, r0
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 00 84 e1          	: orr r0, r4, r0
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da4. Hit: 1. Lifespan: 2. Instruction: 00000900. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e1          	: orr r4, r4, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 c0 84 e1          	: orr ip, r4, r0
 >> Lifespan countdown: 2. (0x80000da8)
 >> Lifespan countdown: 1. (0x80000dac)
 >> Reverting instruction          :  00 40 84 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 0. Instruction: 00000908. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000dc4
 >> Updated                     : 0x0000000080000dc8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x1
 >> Updated instruction            :  65 4b 80 e0          	: add r4, r0, r5, ror #22
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x2
 >> Updated instruction            :  66 4b 80 e0          	: add r4, r0, r6, ror #22
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x4
 >> Updated instruction            :  60 4b 80 e0          	: add r4, r0, r0, ror #22
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x8
 >> Updated instruction            :  6c 4b 80 e0          	: add r4, r0, ip, ror #22
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x10
 >> Updated instruction            :  74 4b 80 e0          	: add r4, r0, r4, ror fp
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x20
 >> Updated instruction            :  44 4b 80 e0          	: add r4, r0, r4, asr #22
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x40
 >> Updated instruction            :  24 4b 80 e0          	: add r4, r0, r4, lsr #22
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x80
 >> Updated instruction            :  e4 4b 80 e0          	: add r4, r0, r4, ror #23
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x100
 >> Updated instruction            :  64 4a 80 e0          	: add r4, r0, r4, ror #20
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x200
 >> Updated instruction            :  64 49 80 e0          	: add r4, r0, r4, ror #18
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x400
 >> Updated instruction            :  64 4f 80 e0          	: add r4, r0, r4, ror #30
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x800
 >> Updated instruction            :  64 43 80 e0          	: add r4, r0, r4, ror #6
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x1000
 >> Updated instruction            :  64 5b 80 e0          	: add r5, r0, r4, ror #22
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x2000
 >> Updated instruction            :  64 6b 80 e0          	: add r6, r0, r4, ror #22
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x4000
 >> Updated instruction            :  64 0b 80 e0          	: add r0, r0, r4, ror #22
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc4. Hit: 1. Lifespan: 2. Instruction: 00000908. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 4b 80 e0          	: add r4, r0, r4, ror #22
 >> Mask                           :  0x8000
 >> Updated instruction            :  64 cb 80 e0          	: add ip, r0, r4, ror #22
 >> Lifespan countdown: 2. (0x80000dc8)
 >> Lifespan countdown: 1. (0x80000dcc)
 >> Reverting instruction          :  64 4b 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 0. Instruction: 00000916. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000de4
 >> Updated                     : 0x0000000080000de8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x1
 >> Updated instruction            :  85 c5 48 e3          	: movt ip, #0x8585
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x2
 >> Updated instruction            :  86 c5 48 e3          	: movt ip, #0x8586
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x4
 >> Updated instruction            :  80 c5 48 e3          	: movt ip, #0x8580
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x8
 >> Updated instruction            :  8c c5 48 e3          	: movt ip, #0x858c
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x10
 >> Updated instruction            :  94 c5 48 e3          	: movt ip, #0x8594
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x20
 >> Updated instruction            :  a4 c5 48 e3          	: movt ip, #0x85a4
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x40
 >> Updated instruction            :  c4 c5 48 e3          	: movt ip, #0x85c4
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x80
 >> Updated instruction            :  04 c5 48 e3          	: movt ip, #0x8504
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x100
 >> Updated instruction            :  84 c4 48 e3          	: movt ip, #0x8484
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x200
 >> Updated instruction            :  84 c7 48 e3          	: movt ip, #0x8784
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x400
 >> Updated instruction            :  84 c1 48 e3          	: movt ip, #0x8184
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x800
 >> Updated instruction            :  84 cd 48 e3          	: movt ip, #0x8d84
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x1000
 >> Updated instruction            :  84 d5 48 e3          	: movt sp, #0x8584
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x2000
 >> Updated instruction            :  84 e5 48 e3          	: movt lr, #0x8584
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x4000
 >> Updated instruction            :  84 85 48 e3          	: movt r8, #0x8584
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de4. Hit: 1. Lifespan: 2. Instruction: 00000916. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 c5 48 e3          	: movt ip, #0x8584
 >> Mask                           :  0x8000
 >> Updated instruction            :  84 45 48 e3          	: movt r4, #0x8584
 >> Lifespan countdown: 2. (0x80000de8)
 >> Lifespan countdown: 1. (0x80000dec)
 >> Reverting instruction          :  84 c5 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 0. Instruction: 00000923. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e00
 >> Updated                     : 0x0000000080000e04
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 00 e0 e1          	: mvn r0, r6
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 00 e0 e1          	: mvn r0, r5
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 00 e0 e1          	: mvn r0, r3
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 00 e0 e1          	: mvn r0, pc
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 00 e0 e1          	: mvn r0, r7, lsl r0
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 00 e0 e1          	: mvn r0, r7, lsr #32
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 00 e0 e1          	: mvn r0, r7, asr #32
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 00 e0 e1          	: mvn r0, r7, lsl #1
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 01 e0 e1          	: mvn r0, r7, lsl #2
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 02 e0 e1          	: mvn r0, r7, lsl #4
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 04 e0 e1          	: mvn r0, r7, lsl #8
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 08 e0 e1          	: mvn r0, r7, lsl #16
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 10 e0 e1          	: mvn r1, r7
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 20 e0 e1          	: mvn r2, r7
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 40 e0 e1          	: mvn r4, r7
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e00. Hit: 1. Lifespan: 2. Instruction: 00000923. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 e0 e1          	: mvn r0, r7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 80 e0 e1          	: mvn r8, r7
 >> Lifespan countdown: 2. (0x80000e04)
 >> Lifespan countdown: 1. (0x80000e08)
 >> Reverting instruction          :  07 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 0. Instruction: 00000935. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e30
 >> Updated                     : 0x0000000080000e34
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x1
 >> Updated instruction            :  15 83 04 e3          	: movw r8, #0x4315
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x2
 >> Updated instruction            :  16 83 04 e3          	: movw r8, #0x4316
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x4
 >> Updated instruction            :  10 83 04 e3          	: movw r8, #0x4310
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x8
 >> Updated instruction            :  1c 83 04 e3          	: movw r8, #0x431c
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x10
 >> Updated instruction            :  04 83 04 e3          	: movw r8, #0x4304
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x20
 >> Updated instruction            :  34 83 04 e3          	: movw r8, #0x4334
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x40
 >> Updated instruction            :  54 83 04 e3          	: movw r8, #0x4354
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x80
 >> Updated instruction            :  94 83 04 e3          	: movw r8, #0x4394
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x100
 >> Updated instruction            :  14 82 04 e3          	: movw r8, #0x4214
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x200
 >> Updated instruction            :  14 81 04 e3          	: movw r8, #0x4114
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x400
 >> Updated instruction            :  14 87 04 e3          	: movw r8, #0x4714
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x800
 >> Updated instruction            :  14 8b 04 e3          	: movw r8, #0x4b14
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x1000
 >> Updated instruction            :  14 93 04 e3          	: movw sb, #0x4314
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x2000
 >> Updated instruction            :  14 a3 04 e3          	: movw sl, #0x4314
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x4000
 >> Updated instruction            :  14 c3 04 e3          	: movw ip, #0x4314
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e30. Hit: 1. Lifespan: 2. Instruction: 00000935. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 83 04 e3          	: movw r8, #0x4314
 >> Mask                           :  0x8000
 >> Updated instruction            :  14 03 04 e3          	: movw r0, #0x4314
 >> Lifespan countdown: 2. (0x80000e34)
 >> Lifespan countdown: 1. (0x80000e38)
 >> Reverting instruction          :  14 83 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 0. Instruction: 00000940. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e44
 >> Updated                     : 0x0000000080000e48
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 c0 80 e1          	: orr ip, r0, r4
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 c0 80 e1          	: orr ip, r0, r7
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 c0 80 e1          	: orr ip, r0, r1
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d c0 80 e1          	: orr ip, r0, sp
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 c0 80 e1          	: orr ip, r0, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 c0 80 e1          	: orr ip, r0, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 c0 80 e1          	: orr ip, r0, r5, asr #32
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 c0 80 e1          	: orr ip, r0, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 c1 80 e1          	: orr ip, r0, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 c2 80 e1          	: orr ip, r0, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 c4 80 e1          	: orr ip, r0, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 c8 80 e1          	: orr ip, r0, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 d0 80 e1          	: orr sp, r0, r5
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 e0 80 e1          	: orr lr, r0, r5
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 80 80 e1          	: orr r8, r0, r5
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e44. Hit: 1. Lifespan: 2. Instruction: 00000940. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 80 e1          	: orr ip, r0, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 40 80 e1          	: orr r4, r0, r5
 >> Lifespan countdown: 2. (0x80000e48)
 >> Lifespan countdown: 1. (0x80000e4c)
 >> Reverting instruction          :  05 c0 80 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 0. Instruction: 00000948. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e64
 >> Updated                     : 0x0000000080000e68
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x1
 >> Updated instruction            :  6f eb 85 e0          	: add lr, r5, pc, ror #22
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x2
 >> Updated instruction            :  6c eb 85 e0          	: add lr, r5, ip, ror #22
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x4
 >> Updated instruction            :  6a eb 85 e0          	: add lr, r5, sl, ror #22
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x8
 >> Updated instruction            :  66 eb 85 e0          	: add lr, r5, r6, ror #22
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x10
 >> Updated instruction            :  7e eb 85 e0          	: add lr, r5, lr, ror fp
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x20
 >> Updated instruction            :  4e eb 85 e0          	: add lr, r5, lr, asr #22
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x40
 >> Updated instruction            :  2e eb 85 e0          	: add lr, r5, lr, lsr #22
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x80
 >> Updated instruction            :  ee eb 85 e0          	: add lr, r5, lr, ror #23
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x100
 >> Updated instruction            :  6e ea 85 e0          	: add lr, r5, lr, ror #20
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x200
 >> Updated instruction            :  6e e9 85 e0          	: add lr, r5, lr, ror #18
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x400
 >> Updated instruction            :  6e ef 85 e0          	: add lr, r5, lr, ror #30
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x800
 >> Updated instruction            :  6e e3 85 e0          	: add lr, r5, lr, ror #6
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x1000
 >> Updated instruction            :  6e fb 85 e0          	: add pc, r5, lr, ror #22
 >!  Erm -  fetching from unmapped memory, address: 0xc70b8886, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 948.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x2000
 >> Updated instruction            :  6e cb 85 e0          	: add ip, r5, lr, ror #22
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x4000
 >> Updated instruction            :  6e ab 85 e0          	: add sl, r5, lr, ror #22
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e64. Hit: 1. Lifespan: 2. Instruction: 00000948. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e eb 85 e0          	: add lr, r5, lr, ror #22
 >> Mask                           :  0x8000
 >> Updated instruction            :  6e 6b 85 e0          	: add r6, r5, lr, ror #22
 >> Lifespan countdown: 2. (0x80000e68)
 >> Lifespan countdown: 1. (0x80000e6c)
 >> Reverting instruction          :  6e eb 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 0. Instruction: 00000957. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e88
 >> Updated                     : 0x0000000080000e8c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 a0 8a e0          	: add sl, sl, r4
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 a0 8a e0          	: add sl, sl, r7
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 a0 8a e0          	: add sl, sl, r1
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d a0 8a e0          	: add sl, sl, sp
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 a0 8a e0          	: add sl, sl, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 a0 8a e0          	: add sl, sl, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 a0 8a e0          	: add sl, sl, r5, asr #32
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 a0 8a e0          	: add sl, sl, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 a1 8a e0          	: add sl, sl, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 a2 8a e0          	: add sl, sl, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 a4 8a e0          	: add sl, sl, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 a8 8a e0          	: add sl, sl, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 b0 8a e0          	: add fp, sl, r5
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000002cf53590, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 959.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 80 8a e0          	: add r8, sl, r5
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 e0 8a e0          	: add lr, sl, r5
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e88. Hit: 1. Lifespan: 2. Instruction: 00000957. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 20 8a e0          	: add r2, sl, r5
 >> Lifespan countdown: 2. (0x80000e8c)
 >> Lifespan countdown: 1. (0x80000e90)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 0. Instruction: 00000963. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ea0
 >> Updated                     : 0x0000000080000ea4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x1
 >> Updated instruction            :  52 67 4f e3          	: movt r6, #0xf752
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x2
 >> Updated instruction            :  51 67 4f e3          	: movt r6, #0xf751
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x4
 >> Updated instruction            :  57 67 4f e3          	: movt r6, #0xf757
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x8
 >> Updated instruction            :  5b 67 4f e3          	: movt r6, #0xf75b
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x10
 >> Updated instruction            :  43 67 4f e3          	: movt r6, #0xf743
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x20
 >> Updated instruction            :  73 67 4f e3          	: movt r6, #0xf773
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x40
 >> Updated instruction            :  13 67 4f e3          	: movt r6, #0xf713
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x80
 >> Updated instruction            :  d3 67 4f e3          	: movt r6, #0xf7d3
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x100
 >> Updated instruction            :  53 66 4f e3          	: movt r6, #0xf653
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x200
 >> Updated instruction            :  53 65 4f e3          	: movt r6, #0xf553
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x400
 >> Updated instruction            :  53 63 4f e3          	: movt r6, #0xf353
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x800
 >> Updated instruction            :  53 6f 4f e3          	: movt r6, #0xff53
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x1000
 >> Updated instruction            :  53 77 4f e3          	: movt r7, #0xf753
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x2000
 >> Updated instruction            :  53 47 4f e3          	: movt r4, #0xf753
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x4000
 >> Updated instruction            :  53 27 4f e3          	: movt r2, #0xf753
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ea0. Hit: 1. Lifespan: 2. Instruction: 00000963. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 67 4f e3          	: movt r6, #0xf753
 >> Mask                           :  0x8000
 >> Updated instruction            :  53 e7 4f e3          	: movt lr, #0xf753
 >> Lifespan countdown: 2. (0x80000ea4)
 >> Lifespan countdown: 1. (0x80000ea8)
 >> Reverting instruction          :  53 67 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 0. Instruction: 00000972. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ec4
 >> Updated                     : 0x0000000080000ec8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 00 20 e0          	: eor r0, r0, r3
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 00 20 e0          	: eor r0, r0, r0
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 00 20 e0          	: eor r0, r0, r6
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 00 20 e0          	: eor r0, r0, sl
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 00 20 e0          	: eor r0, r0, r2, lsl r0
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 00 20 e0          	: eor r0, r0, r2, lsr #32
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 00 20 e0          	: eor r0, r0, r2, asr #32
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 00 20 e0          	: eor r0, r0, r2, lsl #1
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 01 20 e0          	: eor r0, r0, r2, lsl #2
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 02 20 e0          	: eor r0, r0, r2, lsl #4
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 04 20 e0          	: eor r0, r0, r2, lsl #8
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 08 20 e0          	: eor r0, r0, r2, lsl #16
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 10 20 e0          	: eor r1, r0, r2
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 20 20 e0          	: eor r2, r0, r2
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 40 20 e0          	: eor r4, r0, r2
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ec4. Hit: 1. Lifespan: 2. Instruction: 00000972. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 20 e0          	: eor r0, r0, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 80 20 e0          	: eor r8, r0, r2
 >> Lifespan countdown: 2. (0x80000ec8)
 >> Lifespan countdown: 1. (0x80000ecc)
 >> Reverting instruction          :  02 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 0. Instruction: 00000983. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ef0
 >> Updated                     : 0x0000000080000ef4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 a0 e0 e1          	: mvn sl, r1
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 a0 e0 e1          	: mvn sl, r2
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 a0 e0 e1          	: mvn sl, r4
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 a0 e0 e1          	: mvn sl, r8
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 a0 e0 e1          	: mvn sl, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 a0 e0 e1          	: mvn sl, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 a0 e0 e1          	: mvn sl, r0, asr #32
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 a0 e0 e1          	: mvn sl, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 a1 e0 e1          	: mvn sl, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 a2 e0 e1          	: mvn sl, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 a4 e0 e1          	: mvn sl, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 a8 e0 e1          	: mvn sl, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 b0 e0 e1          	: mvn fp, r0
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000af2b12cf, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 985.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 80 e0 e1          	: mvn r8, r0
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 e0 e0 e1          	: mvn lr, r0
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef0. Hit: 1. Lifespan: 2. Instruction: 00000983. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 e0 e1          	: mvn sl, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 20 e0 e1          	: mvn r2, r0
 >> Lifespan countdown: 2. (0x80000ef4)
 >> Lifespan countdown: 1. (0x80000ef8)
 >> Reverting instruction          :  00 a0 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 0. Instruction: 00000991. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f10
 >> Updated                     : 0x0000000080000f14
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x1
 >> Updated instruction            :  35 30 1b e5          	: ldr r3, [fp, #-0x35]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x2
 >> Updated instruction            :  36 30 1b e5          	: ldr r3, [fp, #-0x36]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x4
 >> Updated instruction            :  30 30 1b e5          	: ldr r3, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x8
 >> Updated instruction            :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x10
 >> Updated instruction            :  24 30 1b e5          	: ldr r3, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x20
 >> Updated instruction            :  14 30 1b e5          	: ldr r3, [fp, #-0x14]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x40
 >> Updated instruction            :  74 30 1b e5          	: ldr r3, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x80
 >> Updated instruction            :  b4 30 1b e5          	: ldr r3, [fp, #-0xb4]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x100
 >> Updated instruction            :  34 31 1b e5          	: ldr r3, [fp, #-0x134]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x200
 >> Updated instruction            :  34 32 1b e5          	: ldr r3, [fp, #-0x234]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x400
 >> Updated instruction            :  34 34 1b e5          	: ldr r3, [fp, #-0x434]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x800
 >> Updated instruction            :  34 38 1b e5          	: ldr r3, [fp, #-0x834]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x1000
 >> Updated instruction            :  34 20 1b e5          	: ldr r2, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x2000
 >> Updated instruction            :  34 10 1b e5          	: ldr r1, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x4000
 >> Updated instruction            :  34 70 1b e5          	: ldr r7, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f10. Hit: 1. Lifespan: 2. Instruction: 00000991. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Mask                           :  0x8000
 >> Updated instruction            :  34 b0 1b e5          	: ldr fp, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000f14)
 >> Lifespan countdown: 1. (0x80000f18)
 >> Reverting instruction          :  34 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff98, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1005.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 0. Instruction: 00000999. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f30
 >> Updated                     : 0x0000000080000f34
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f e0 83 e0          	: add lr, r3, pc
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c e0 83 e0          	: add lr, r3, ip
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a e0 83 e0          	: add lr, r3, sl
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 e0 83 e0          	: add lr, r3, r6
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e e0 83 e0          	: add lr, r3, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e e0 83 e0          	: add lr, r3, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e e0 83 e0          	: add lr, r3, lr, asr #32
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e e0 83 e0          	: add lr, r3, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e e1 83 e0          	: add lr, r3, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e e2 83 e0          	: add lr, r3, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e e4 83 e0          	: add lr, r3, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e e8 83 e0          	: add lr, r3, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e f0 83 e0          	: add pc, r3, lr
 >!  Erm -  fetching from unmapped memory, address: 0xeb86d390, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 999.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e c0 83 e0          	: add ip, r3, lr
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e a0 83 e0          	: add sl, r3, lr
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f30. Hit: 1. Lifespan: 2. Instruction: 00000999. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 60 83 e0          	: add r6, r3, lr
 >> Lifespan countdown: 2. (0x80000f34)
 >> Lifespan countdown: 1. (0x80000f38)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 0. Instruction: 00001007. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f50
 >> Updated                     : 0x0000000080000f54
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x1
 >> Updated instruction            :  eb a5 80 e0          	: add sl, r0, fp, ror #11
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x2
 >> Updated instruction            :  e8 a5 80 e0          	: add sl, r0, r8, ror #11
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x4
 >> Updated instruction            :  ee a5 80 e0          	: add sl, r0, lr, ror #11
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x8
 >> Updated instruction            :  e2 a5 80 e0          	: add sl, r0, r2, ror #11
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x10
 >> Updated instruction            :  fa a5 80 e0          	: strd sl, fp, [r0], sl
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x5c42fc32, value: 0x19c0b365!! Count 1008 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1007.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x20
 >> Updated instruction            :  ca a5 80 e0          	: add sl, r0, sl, asr #11
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x40
 >> Updated instruction            :  aa a5 80 e0          	: add sl, r0, sl, lsr #11
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x80
 >> Updated instruction            :  6a a5 80 e0          	: add sl, r0, sl, ror #10
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x100
 >> Updated instruction            :  ea a4 80 e0          	: add sl, r0, sl, ror #9
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x200
 >> Updated instruction            :  ea a7 80 e0          	: add sl, r0, sl, ror #15
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x400
 >> Updated instruction            :  ea a1 80 e0          	: add sl, r0, sl, ror #3
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x800
 >> Updated instruction            :  ea ad 80 e0          	: add sl, r0, sl, ror #27
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x1000
 >> Updated instruction            :  ea b5 80 e0          	: add fp, r0, sl, ror #11
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c8e63408, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1019.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x2000
 >> Updated instruction            :  ea 85 80 e0          	: add r8, r0, sl, ror #11
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x4000
 >> Updated instruction            :  ea e5 80 e0          	: add lr, r0, sl, ror #11
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f50. Hit: 1. Lifespan: 2. Instruction: 00001007. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ea a5 80 e0          	: add sl, r0, sl, ror #11
 >> Mask                           :  0x8000
 >> Updated instruction            :  ea 25 80 e0          	: add r2, r0, sl, ror #11
 >> Lifespan countdown: 2. (0x80000f54)
 >> Lifespan countdown: 1. (0x80000f58)
 >> Reverting instruction          :  ea a5 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 0. Instruction: 00001015. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f70
 >> Updated                     : 0x0000000080000f74
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 10 81 e0          	: add r1, r1, sp
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 10 81 e0          	: add r1, r1, lr
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 10 81 e0          	: add r1, r1, r8
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 10 81 e0          	: add r1, r1, r4
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 10 81 e0          	: add r1, r1, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 10 81 e0          	: add r1, r1, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 10 81 e0          	: add r1, r1, ip, asr #32
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 10 81 e0          	: add r1, r1, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 11 81 e0          	: add r1, r1, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 12 81 e0          	: add r1, r1, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 14 81 e0          	: add r1, r1, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 18 81 e0          	: add r1, r1, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 00 81 e0          	: add r0, r1, ip
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 30 81 e0          	: add r3, r1, ip
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 50 81 e0          	: add r5, r1, ip
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f70. Hit: 1. Lifespan: 2. Instruction: 00001015. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 81 e0          	: add r1, r1, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 90 81 e0          	: add sb, r1, ip
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  0c 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 0. Instruction: 00001023. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f90
 >> Updated                     : 0x0000000080000f94
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 30 83 e0          	: add r3, r3, fp
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 30 83 e0          	: add r3, r3, r8
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 30 83 e0          	: add r3, r3, lr
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 30 83 e0          	: add r3, r3, r2
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 30 83 e0          	: add r3, r3, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 30 83 e0          	: add r3, r3, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 30 83 e0          	: add r3, r3, sl, asr #32
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 30 83 e0          	: add r3, r3, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 31 83 e0          	: add r3, r3, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 32 83 e0          	: add r3, r3, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 34 83 e0          	: add r3, r3, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 38 83 e0          	: add r3, r3, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 20 83 e0          	: add r2, r3, sl
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 10 83 e0          	: add r1, r3, sl
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a 70 83 e0          	: add r7, r3, sl
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f90. Hit: 1. Lifespan: 2. Instruction: 00001023. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 83 e0          	: add r3, r3, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a b0 83 e0          	: add fp, r3, sl
 >> Lifespan countdown: 2. (0x80000f94)
 >> Lifespan countdown: 1. (0x80000f98)
 >> Reverting instruction          :  0a 30 83 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x79f3a9b7, value: 0x10325476!! Count 1026 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1025.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 0. Instruction: 00001030. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fac
 >> Updated                     : 0x0000000080000fb0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 30 82 e0          	: add r3, r2, r8
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b 30 82 e0          	: add r3, r2, fp
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d 30 82 e0          	: add r3, r2, sp
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 30 82 e0          	: add r3, r2, r1
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 30 82 e0          	: add r3, r2, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 30 82 e0          	: add r3, r2, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 30 82 e0          	: add r3, r2, sb, asr #32
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 30 82 e0          	: add r3, r2, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 31 82 e0          	: add r3, r2, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 32 82 e0          	: add r3, r2, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 34 82 e0          	: add r3, r2, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 38 82 e0          	: add r3, r2, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 20 82 e0          	: add r2, r2, sb
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 10 82 e0          	: add r1, r2, sb
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 70 82 e0          	: add r7, r2, sb
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fac. Hit: 1. Lifespan: 2. Instruction: 00001030. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 30 82 e0          	: add r3, r2, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 b0 82 e0          	: add fp, r2, sb
 >> Lifespan countdown: 2. (0x80000fb0)
 >> Lifespan countdown: 1. (0x80000fb4)
 >> Reverting instruction          :  09 30 82 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x760cd6c5, value: 0x79f3a9fb!! Count 1033 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1032.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 0. Instruction: 00001039. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fd0
 >> Updated                     : 0x0000000080000fd4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 a0 e1          	: mov r0, r2
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 a0 e1          	: mov r0, r1
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 a0 e1          	: mov r0, r7
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 a0 e1          	: mov r0, fp
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 a0 e1          	: lsl r0, r3, r0
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 a0 e1          	: lsr r0, r3, #0x20
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 a0 e1          	: asr r0, r3, #0x20
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 a0 e1          	: lsl r0, r3, #1
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 a0 e1          	: lsl r0, r3, #2
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 a0 e1          	: lsl r0, r3, #4
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 a0 e1          	: lsl r0, r3, #8
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 a0 e1          	: lsl r0, r3, #0x10
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 a0 e1          	: mov r1, r3
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 a0 e1          	: mov r2, r3
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 a0 e1          	: mov r4, r3
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd0. Hit: 1. Lifespan: 2. Instruction: 00001039. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 a0 e1          	: mov r0, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 a0 e1          	: mov r8, r3
 >> Lifespan countdown: 2. (0x80000fd4)
 >> Lifespan countdown: 1. (0x80000fd8)
 >> Reverting instruction          :  03 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 0. Instruction: 00001047. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ff0
 >> Updated                     : 0x0000000080000ff4
 >!  Erm -  fetching from unmapped memory, address: 0xe8c7b756, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x1
 >> Updated instruction            :  21 d0 4b e2          	: sub sp, fp, #0x21
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  Erm -  fetching from unmapped memory, address: 0x10cc80, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x2
 >> Updated instruction            :  22 d0 4b e2          	: sub sp, fp, #0x22
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  Erm -  fetching from unmapped memory, address: 0x10cc8010, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x4
 >> Updated instruction            :  24 d0 4b e2          	: sub sp, fp, #0x24
 >> Lifespan countdown: 2. (0x80000ff4)
 >> Lifespan countdown: 1. (0x8010ff34)
 >> Reverting instruction          :  20 d0 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x8
 >> Updated instruction            :  28 d0 4b e2          	: sub sp, fp, #0x28
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x10
 >> Updated instruction            :  30 d0 4b e2          	: sub sp, fp, #0x30
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x20
 >> Updated instruction            :  00 d0 4b e2          	: sub sp, fp, #0
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  Erm -  fetching from unmapped memory, address: 0x10, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x40
 >> Updated instruction            :  60 d0 4b e2          	: sub sp, fp, #0x60
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  Erm -  fetching from unmapped memory, address: 0x760cd704, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x80
 >> Updated instruction            :  a0 d0 4b e2          	: sub sp, fp, #0xa0
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  Erm -  fetching from unmapped memory, address: 0x4787c62a, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x100
 >> Updated instruction            :  20 d1 4b e2          	: sub sp, fp, #32, #2
 >> Lifespan countdown: 2. (0x80000ff4)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  20 d0 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x200
 >> Updated instruction            :  20 d2 4b e2          	: sub sp, fp, #32, #4
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  Erm -  fetching from unmapped memory, address: 0x100100, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x400
 >> Updated instruction            :  20 d4 4b e2          	: sub sp, fp, #32, #8
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006010ff1c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x800
 >> Updated instruction            :  20 d8 4b e2          	: sub sp, fp, #32, #16
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007ff0ff1c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x1000
 >> Updated instruction            :  20 c0 4b e2          	: sub ip, fp, #0x20
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  Erm -  fetching from unmapped memory, address: 0xe8c7b756, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x2000
 >> Updated instruction            :  20 f0 4b e2          	: sub pc, fp, #0x20
 >> Lifespan countdown: 2. (0x8010fefc)
 >> Lifespan countdown: 1. (0x8010ff00)
 >> Reverting instruction          :  20 d0 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000d7bf00b9, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1075.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x4000
 >> Updated instruction            :  20 90 4b e2          	: sub sb, fp, #0x20
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  Erm -  fetching from unmapped memory, address: 0xe8c7b756, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff0. Hit: 1. Lifespan: 2. Instruction: 00001047. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 d0 4b e2          	: sub sp, fp, #0x20
 >> Mask                           :  0x8000
 >> Updated instruction            :  20 50 4b e2          	: sub r5, fp, #0x20
 >> Lifespan countdown: 2. (0x80000ff4)
 >!  Erm -  fetching from unmapped memory, address: 0xe8c7b756, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 0. Instruction: 00001056. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010e8
 >> Updated                     : 0x00000000800010ec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 c5 e5          	: strb r3, [r5]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 c5 e5          	: strb r3, [r5, #9]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 c5 e5          	: strb r3, [r5, #0x11]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 c5 e5          	: strb r3, [r5, #0x21]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 c5 e5          	: strb r3, [r5, #0x41]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 c5 e5          	: strb r3, [r5, #0x81]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 c5 e5          	: strb r3, [r5, #0x101]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110051, value: 0xea!! Count 1057 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1056.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 c5 e5          	: strb r3, [r5, #0x201]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110151, value: 0xea!! Count 1057 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1056.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 c5 e5          	: strb r3, [r5, #0x401]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110351, value: 0xea!! Count 1057 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1056.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 c5 e5          	: strb r3, [r5, #0x801]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110751, value: 0xea!! Count 1057 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1056.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 c5 e5          	: strb r2, [r5, #1]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 c5 e5          	: strb r1, [r5, #1]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 c5 e5          	: strb r7, [r5, #1]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e8. Hit: 1. Lifespan: 2. Instruction: 00001056. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 c5 e5          	: strb fp, [r5, #1]
 >> Lifespan countdown: 2. (0x800010ec)
 >> Lifespan countdown: 1. (0x800010f0)
 >> Reverting instruction          :  01 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 0. Instruction: 00001064. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001108
 >> Updated                     : 0x000000008000110c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  22 34 a0 e1          	: lsr r3, r2, #8
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  21 34 a0 e1          	: lsr r3, r1, #8
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  27 34 a0 e1          	: lsr r3, r7, #8
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  2b 34 a0 e1          	: lsr r3, fp, #8
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  33 34 a0 e1          	: lsr r3, r3, r4
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  03 34 a0 e1          	: lsl r3, r3, #8
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  63 34 a0 e1          	: ror r3, r3, #8
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  a3 34 a0 e1          	: lsr r3, r3, #9
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  23 35 a0 e1          	: lsr r3, r3, #0xa
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  23 36 a0 e1          	: lsr r3, r3, #0xc
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  23 30 a0 e1          	: lsr r3, r3, #0x20
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  23 24 a0 e1          	: lsr r2, r3, #8
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  23 14 a0 e1          	: lsr r1, r3, #8
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  23 74 a0 e1          	: lsr r7, r3, #8
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001108. Hit: 1. Lifespan: 2. Instruction: 00001064. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  23 b4 a0 e1          	: lsr fp, r3, #8
 >> Lifespan countdown: 2. (0x8000110c)
 >> Lifespan countdown: 1. (0x80001110)
 >> Reverting instruction          :  23 34 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000c78ca2, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 0. Instruction: 00001072. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001128
 >> Updated                     : 0x000000008000112c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x1
 >> Updated instruction            :  11 30 94 e5          	: ldr r3, [r4, #0x11]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x2
 >> Updated instruction            :  12 30 94 e5          	: ldr r3, [r4, #0x12]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x4
 >> Updated instruction            :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x8
 >> Updated instruction            :  18 30 94 e5          	: ldr r3, [r4, #0x18]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x10
 >> Updated instruction            :  00 30 94 e5          	: ldr r3, [r4]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x20
 >> Updated instruction            :  30 30 94 e5          	: ldr r3, [r4, #0x30]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x40
 >> Updated instruction            :  50 30 94 e5          	: ldr r3, [r4, #0x50]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x80
 >> Updated instruction            :  90 30 94 e5          	: ldr r3, [r4, #0x90]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x100
 >> Updated instruction            :  10 31 94 e5          	: ldr r3, [r4, #0x110]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110070, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1072.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x200
 >> Updated instruction            :  10 32 94 e5          	: ldr r3, [r4, #0x210]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110170, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1072.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x400
 >> Updated instruction            :  10 34 94 e5          	: ldr r3, [r4, #0x410]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110370, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1072.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x800
 >> Updated instruction            :  10 38 94 e5          	: ldr r3, [r4, #0x810]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110770, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1072.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x1000
 >> Updated instruction            :  10 20 94 e5          	: ldr r2, [r4, #0x10]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x2000
 >> Updated instruction            :  10 10 94 e5          	: ldr r1, [r4, #0x10]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x4000
 >> Updated instruction            :  10 70 94 e5          	: ldr r7, [r4, #0x10]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001128. Hit: 1. Lifespan: 2. Instruction: 00001072. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x8000
 >> Updated instruction            :  10 b0 94 e5          	: ldr fp, [r4, #0x10]
 >> Lifespan countdown: 2. (0x8000112c)
 >> Lifespan countdown: 1. (0x80001130)
 >> Reverting instruction          :  10 30 94 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000760cd6f1, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 0. Instruction: 00001081. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000114c
 >> Updated                     : 0x0000000080001150
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x1
 >> Updated instruction            :  15 30 94 e5          	: ldr r3, [r4, #0x15]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x2
 >> Updated instruction            :  16 30 94 e5          	: ldr r3, [r4, #0x16]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x4
 >> Updated instruction            :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x8
 >> Updated instruction            :  1c 30 94 e5          	: ldr r3, [r4, #0x1c]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x10
 >> Updated instruction            :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x20
 >> Updated instruction            :  34 30 94 e5          	: ldr r3, [r4, #0x34]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x40
 >> Updated instruction            :  54 30 94 e5          	: ldr r3, [r4, #0x54]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x80
 >> Updated instruction            :  94 30 94 e5          	: ldr r3, [r4, #0x94]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x100
 >> Updated instruction            :  14 31 94 e5          	: ldr r3, [r4, #0x114]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110074, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1081.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x200
 >> Updated instruction            :  14 32 94 e5          	: ldr r3, [r4, #0x214]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110174, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1081.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x400
 >> Updated instruction            :  14 34 94 e5          	: ldr r3, [r4, #0x414]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110374, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1081.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x800
 >> Updated instruction            :  14 38 94 e5          	: ldr r3, [r4, #0x814]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110774, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1081.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x1000
 >> Updated instruction            :  14 20 94 e5          	: ldr r2, [r4, #0x14]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x2000
 >> Updated instruction            :  14 10 94 e5          	: ldr r1, [r4, #0x14]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x4000
 >> Updated instruction            :  14 70 94 e5          	: ldr r7, [r4, #0x14]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000114c. Hit: 1. Lifespan: 2. Instruction: 00001081. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Mask                           :  0x8000
 >> Updated instruction            :  14 b0 94 e5          	: ldr fp, [r4, #0x14]
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  14 30 94 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000079f3a9e7, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 0. Instruction: 00001089. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000116c
 >> Updated                     : 0x0000000080001170
 >!  Erm -  fetching from unmapped memory, address: 0xb46d07d8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x1
 >> Updated instruction            :  f1 48 bd e8          	: pop {r0, r4, r5, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x2
 >> Updated instruction            :  f2 48 bd e8          	: pop {r1, r4, r5, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x4
 >> Updated instruction            :  f4 48 bd e8          	: pop {r2, r4, r5, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x8
 >> Updated instruction            :  f8 48 bd e8          	: pop {r3, r4, r5, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x10
 >> Updated instruction            :  e0 48 bd e8          	: pop {r5, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x20
 >> Updated instruction            :  d0 48 bd e8          	: pop {r4, r6, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x40
 >> Updated instruction            :  b0 48 bd e8          	: pop {r4, r5, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x80
 >> Updated instruction            :  70 48 bd e8          	: pop {r4, r5, r6, fp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x100
 >> Updated instruction            :  f0 49 bd e8          	: pop {r4, r5, r6, r7, r8, fp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x200
 >> Updated instruction            :  f0 4a bd e8          	: pop {r4, r5, r6, r7, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x400
 >> Updated instruction            :  f0 4c bd e8          	: pop {r4, r5, r6, r7, sl, fp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x800
 >> Updated instruction            :  f0 40 bd e8          	: pop {r4, r5, r6, r7, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x1000
 >> Updated instruction            :  f0 58 bd e8          	: pop {r4, r5, r6, r7, fp, ip, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x2000
 >> Updated instruction            :  f0 68 bd e8          	: pop {r4, r5, r6, r7, fp, sp, lr}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x4000
 >> Updated instruction            :  f0 08 bd e8          	: pop {r4, r5, r6, r7, fp}
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  f0 48 bd e8 
 >!  Erm -  fetching from unmapped memory, address: 0xb46d07d8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000116c. Hit: 1. Lifespan: 2. Instruction: 00001089. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 48 bd e8          	: pop {r4, r5, r6, r7, fp, lr}
 >> Mask                           :  0x8000
 >> Updated instruction            :  f0 c8 bd e8          	: pop {r4, r5, r6, r7, fp, lr, pc}
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 0. Instruction: 00001096. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000090
 >> Updated                     : 0x0000000080000094
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 00 5c e3          	: cmp ip, #4
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 00 5c e3          	: cmp ip, #7
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 00 5c e3          	: cmp ip, #1
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 00 5c e3          	: cmp ip, #0xd
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 00 5c e3          	: cmp ip, #0x15
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 00 5c e3          	: cmp ip, #0x25
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 00 5c e3          	: cmp ip, #0x45
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 00 5c e3          	: cmp ip, #0x85
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 01 5c e3          	: cmp ip, #0x40000001
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 02 5c e3          	: cmp ip, #0x50000000
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 04 5c e3          	: cmp ip, #0x5000000
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 08 5c e3          	: cmp ip, #0x50000
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 10 5c e3          	: cmp ip, #5
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 20 5c e3          	: cmp ip, #5
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 40 5c e3          	: cmp ip, #5
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000090. Hit: 2. Lifespan: 2. Instruction: 00001096. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 5c e3          	: cmp ip, #5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 80 5c e3          	: cmp ip, #5
 >> Lifespan countdown: 2. (0x80000094)
 >> Lifespan countdown: 1. (0x80000098)
 >> Reverting instruction          :  05 00 5c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 0. Instruction: 00001105. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000b4
 >> Updated                     : 0x00000000800000b8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x1
 >> Updated instruction            :  0a 00 00 0a          	: beq #0x1030
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  0b 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x2
 >> Updated instruction            :  09 00 00 0a          	: beq #0x102c
 >> Lifespan countdown: 2. (0x800000e0)
 >> Lifespan countdown: 1. (0x800000e4)
 >> Reverting instruction          :  0b 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x4
 >> Updated instruction            :  0f 00 00 0a          	: beq #0x1044
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  0b 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x8
 >> Updated instruction            :  03 00 00 0a          	: beq #0x1014
 >> Lifespan countdown: 2. (0x800000c8)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  0b 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x10
 >> Updated instruction            :  1b 00 00 0a          	: beq #0x1074
 >> Lifespan countdown: 2. (0x80000128)
 >> Lifespan countdown: 1. (0x8000012c)
 >> Reverting instruction          :  0b 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x20
 >> Updated instruction            :  2b 00 00 0a          	: beq #0x10b4
 >> Lifespan countdown: 2. (0x80000168)
 >> Lifespan countdown: 1. (0x8000016c)
 >> Reverting instruction          :  0b 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x40
 >> Updated instruction            :  4b 00 00 0a          	: beq #0x1134
 >> Lifespan countdown: 2. (0x800001e8)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000001, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1106.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x80
 >> Updated instruction            :  8b 00 00 0a          	: beq #0x1234
 >> Lifespan countdown: 2. (0x800002e8)
 >> Lifespan countdown: 1. (0x800002ec)
 >> Reverting instruction          :  0b 00 00 0a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1107.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x100
 >> Updated instruction            :  0b 01 00 0a          	: beq #0x1434
 >> Lifespan countdown: 2. (0x800004e8)
 >> Lifespan countdown: 1. (0x800004ec)
 >> Reverting instruction          :  0b 00 00 0a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1135.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x200
 >> Updated instruction            :  0b 02 00 0a          	: beq #0x1834
 >> Lifespan countdown: 2. (0x800008e8)
 >> Lifespan countdown: 1. (0x800008ec)
 >> Reverting instruction          :  0b 00 00 0a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x98!! Count 1122 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1121.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x400
 >> Updated instruction            :  0b 04 00 0a          	: beq #0x2034
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  0b 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x800
 >> Updated instruction            :  0b 08 00 0a          	: beq #0x3034
 >> Lifespan countdown: 2. (0x800020e8)
 >> Lifespan countdown: 1. (0x800020ec)
 >> Reverting instruction          :  0b 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x802d0980, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1128.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x1000
 >> Updated instruction            :  0b 10 00 0a          	: beq #0x5034
 >> Lifespan countdown: 2. (0x800040e8)
 >> Lifespan countdown: 1. (0x800040ec)
 >> Reverting instruction          :  0b 00 00 0a 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1112.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x2000
 >> Updated instruction            :  0b 20 00 0a          	: beq #0x9034
 >> Lifespan countdown: 2. (0x800080e8)
 >> Lifespan countdown: 1. (0x800080ec)
 >> Reverting instruction          :  0b 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 25623.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x4000
 >> Updated instruction            :  0b 40 00 0a          	: beq #0x11034
 >> Lifespan countdown: 2. (0x800100e8)
 >> Lifespan countdown: 1. (0x800100ec)
 >> Reverting instruction          :  0b 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 17431.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000b4. Hit: 2. Lifespan: 2. Instruction: 00001105. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 00 0a          	: beq #0x1034
 >> Mask                           :  0x8000
 >> Updated instruction            :  0b 80 00 0a          	: beq #0x21034
 >!  Erm -  fetching from unmapped memory, address: 0x800200e8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1105.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 0. Instruction: 00001118. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  Erm -  fetching from unmapped memory, address: 0x96, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1305.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1122 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1121.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1118.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1118.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1118.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1118.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1118.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1118.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1118.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1118.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 10. Lifespan: 2. Instruction: 00001118. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1118.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 0. Instruction: 00001126. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1289 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1288.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1305 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1304.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1305 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1304.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1130 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1129.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1126.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1126.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1126.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1126.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1126.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1126.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1126.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1126.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 12. Lifespan: 2. Instruction: 00001126. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1126.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 0. Instruction: 00001134. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1301 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1300.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1301 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1300.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1138 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1137.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1134.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1134.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1134.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1134.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1134.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1134.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1134.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1134.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 14. Lifespan: 2. Instruction: 00001134. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1134.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 0. Instruction: 00001142. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1301 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1300.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1301 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1300.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1146 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1145.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1142.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1142.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1142.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1142.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1142.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1142.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1142.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1142.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 16. Lifespan: 2. Instruction: 00001142. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1142.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 0. Instruction: 00001150. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1297 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1297 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1154 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1153.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1150.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1150.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1150.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1150.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1150.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1150.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1150.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1150.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 18. Lifespan: 2. Instruction: 00001150. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1150.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 0. Instruction: 00001158. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1297 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1297 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1162 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1161.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1158.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1158.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1158.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1158.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1158.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1158.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1158.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1158.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 20. Lifespan: 2. Instruction: 00001158. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1158.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 0. Instruction: 00001166. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1293 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1292.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1293 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1292.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1170 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1169.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 22. Lifespan: 2. Instruction: 00001166. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 0. Instruction: 00001173. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 24. Lifespan: 2. Instruction: 00001173. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 0. Instruction: 00001185. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 27. Lifespan: 2. Instruction: 00001185. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 0. Instruction: 00001192. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110030, value: 0x0!! Count 1197 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1196.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100b0, value: 0x0!! Count 1197 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1196.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101b0, value: 0x0!! Count 1197 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1196.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103b0, value: 0x0!! Count 1197 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1196.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107b0, value: 0x0!! Count 1197 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1196.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 29. Lifespan: 2. Instruction: 00001192. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 0. Instruction: 00001200. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110038, value: 0x0!! Count 1205 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1204.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100b8, value: 0x0!! Count 1205 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1204.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101b8, value: 0x0!! Count 1205 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1204.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103b8, value: 0x0!! Count 1205 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1204.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107b8, value: 0x0!! Count 1205 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1204.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 31. Lifespan: 2. Instruction: 00001200. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 0. Instruction: 00001212. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110004, value: 0x0!! Count 1217 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1216.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110044, value: 0x0!! Count 1217 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1216.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100c4, value: 0x0!! Count 1217 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1216.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101c4, value: 0x0!! Count 1217 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1216.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103c4, value: 0x0!! Count 1217 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1216.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107c4, value: 0x0!! Count 1217 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1216.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 34. Lifespan: 2. Instruction: 00001212. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 0. Instruction: 00001218. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1222 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1221.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1218.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1218.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1218.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1218.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1218.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1218.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1218.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1218.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 35. Lifespan: 2. Instruction: 00001218. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1218.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 0. Instruction: 00001226. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1230 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1229.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1226.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1226.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1226.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1226.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1226.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1226.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1226.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1226.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 37. Lifespan: 2. Instruction: 00001226. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1226.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 0. Instruction: 00001234. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1238 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1237.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1234.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1234.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1234.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1234.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1234.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1234.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1234.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1234.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 39. Lifespan: 2. Instruction: 00001234. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1234.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 0. Instruction: 00001242. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1253 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1252.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1242.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1242.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1242.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1242.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1242.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1242.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1242.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1242.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 41. Lifespan: 2. Instruction: 00001242. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1242.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 0. Instruction: 00001250. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011000a, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011000a, value: 0x0!! Count 1269 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1268.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011000a, value: 0x0!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1254 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1253.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1250.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1250.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1250.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1250.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1250.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1250.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1250.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1250.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 43. Lifespan: 2. Instruction: 00001250. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1250.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 0. Instruction: 00001259. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 46. Lifespan: 2. Instruction: 00001259. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 0. Instruction: 00001266. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 47. Lifespan: 2. Instruction: 00001266. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 0. Instruction: 00001275. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012f8
 >> Updated                     : 0x00000000800012fc
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 10 a0 e1          	: mov r1, r7
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 10 a0 e1          	: mov r1, r4
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 10 a0 e1          	: mov r1, r2
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000098, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 10 a0 e1          	: mov r1, lr
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffff, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 10 a0 e1          	: lsl r1, r6, r0
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 10 a0 e1          	: lsr r1, r6, #0x20
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 10 a0 e1          	: asr r1, r6, #0x20
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffff, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 10 a0 e1          	: lsl r1, r6, #1
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000021fe80, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 11 a0 e1          	: lsl r1, r6, #2
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000043fd00, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 12 a0 e1          	: lsl r1, r6, #4
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000010ff400, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 14 a0 e1          	: lsl r1, r6, #8
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff4000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 18 a0 e1          	: lsl r1, r6, #0x10
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff400000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 00 a0 e1          	: mov r0, r6
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 30 a0 e1          	: mov r3, r6
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 50 a0 e1          	: mov r5, r6
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012f8. Hit: 1. Lifespan: 2. Instruction: 00001275. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 10 a0 e1          	: mov r1, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 90 a0 e1          	: mov sb, r6
 >> Lifespan countdown: 2. (0x800012fc)
 >> Lifespan countdown: 1. (0x80001300)
 >> Reverting instruction          :  06 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 0. Instruction: 00001283. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800002f8
 >> Updated                     : 0x00000000800002fc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 00 51 e1          	: cmp r1, r3
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 00 51 e1          	: cmp r1, r0
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 00 51 e1          	: cmp r1, r6
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x80000300)
 >> Reverting instruction          :  02 00 51 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 00 51 e1          	: cmp r1, sl
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 00 51 e1          	: cmp r1, r2, lsl r0
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 00 51 e1          	: cmp r1, r2, lsr #32
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 00 51 e1          	: cmp r1, r2, asr #32
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 00 51 e1          	: cmp r1, r2, lsl #1
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 01 51 e1          	: cmp r1, r2, lsl #2
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 02 51 e1          	: cmp r1, r2, lsl #4
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 04 51 e1          	: cmp r1, r2, lsl #8
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 08 51 e1          	: cmp r1, r2, lsl #16
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 10 51 e1          	: cmp r1, r2
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 20 51 e1          	: cmp r1, r2
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 40 51 e1          	: cmp r1, r2
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f8. Hit: 1. Lifespan: 2. Instruction: 00001283. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 00 51 e1          	: cmp r1, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 80 51 e1          	: cmp r1, r2
 >> Lifespan countdown: 2. (0x800002fc)
 >> Lifespan countdown: 1. (0x800002e8)
 >> Reverting instruction          :  02 00 51 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 0. Instruction: 00001288. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800002f4
 >> Updated                     : 0x00000000800002f8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x1
 >> Updated instruction            :  04 00 00 1a          	: bne #0x1018
 >> Lifespan countdown: 2. (0x8000030c)
 >> Lifespan countdown: 1. (0x80001308)
 >> Reverting instruction          :  05 00 00 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x2
 >> Updated instruction            :  07 00 00 1a          	: bne #0x1024
 >> Lifespan countdown: 2. (0x80000318)
 >> Lifespan countdown: 1. (0x8000031c)
 >> Reverting instruction          :  05 00 00 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x4
 >> Updated instruction            :  01 00 00 1a          	: bne #0x100c
 >> Lifespan countdown: 2. (0x80000300)
 >> Lifespan countdown: 1. (0x80000304)
 >> Reverting instruction          :  05 00 00 1a 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 00 00 1a          	: bne #0x103c
 >> Lifespan countdown: 2. (0x80000330)
 >> Lifespan countdown: 1. (0x80000334)
 >> Reverting instruction          :  05 00 00 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x10
 >> Updated instruction            :  15 00 00 1a          	: bne #0x105c
 >> Lifespan countdown: 2. (0x80000350)
 >> Lifespan countdown: 1. (0x80000354)
 >> Reverting instruction          :  05 00 00 1a 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x20
 >> Updated instruction            :  25 00 00 1a          	: bne #0x109c
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  05 00 00 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x40
 >> Updated instruction            :  45 00 00 1a          	: bne #0x111c
 >> Lifespan countdown: 2. (0x80000410)
 >> Lifespan countdown: 1. (0x80000414)
 >> Reverting instruction          :  05 00 00 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x80
 >> Updated instruction            :  85 00 00 1a          	: bne #0x121c
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  05 00 00 1a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0x0!! Count 1325 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1324.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x100
 >> Updated instruction            :  05 01 00 1a          	: bne #0x141c
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  05 00 00 1a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1303.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x200
 >> Updated instruction            :  05 02 00 1a          	: bne #0x181c
 >> Lifespan countdown: 2. (0x80000b10)
 >> Lifespan countdown: 1. (0x80000b14)
 >> Reverting instruction          :  05 00 00 1a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1597.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x400
 >> Updated instruction            :  05 04 00 1a          	: bne #0x201c
 >> Lifespan countdown: 2. (0x80001310)
 >> Lifespan countdown: 1. (0x80001314)
 >> Reverting instruction          :  05 00 00 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x800
 >> Updated instruction            :  05 08 00 1a          	: bne #0x301c
 >> Lifespan countdown: 2. (0x80002310)
 >> Lifespan countdown: 1. (0x80002314)
 >> Reverting instruction          :  05 00 00 1a 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1292.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 10 00 1a          	: bne #0x501c
 >> Lifespan countdown: 2. (0x80004310)
 >> Lifespan countdown: 1. (0x80004314)
 >> Reverting instruction          :  05 00 00 1a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 29764.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 20 00 1a          	: bne #0x901c
 >> Lifespan countdown: 2. (0x80008310)
 >> Lifespan countdown: 1. (0x80008314)
 >> Reverting instruction          :  05 00 00 1a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 25668.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 40 00 1a          	: bne #0x1101c
 >> Lifespan countdown: 2. (0x80010310)
 >> Lifespan countdown: 1. (0x80010314)
 >> Reverting instruction          :  05 00 00 1a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 17476.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002f4. Hit: 1. Lifespan: 2. Instruction: 00001288. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 00 1a          	: bne #0x101c
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 80 00 1a          	: bne #0x2101c
 >!  Erm -  fetching from unmapped memory, address: 0x80020310, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1288.
 >>> Output from address (0x0aa01000): 00
